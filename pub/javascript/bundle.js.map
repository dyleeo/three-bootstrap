{"version":3,"sources":["main.js","../../node_modules/gsap/TweenMax.js","../../node_modules/gsap/TweenLite.js","../../node_modules/gsap/EasePack.js","../../node_modules/three/three.js"],"names":["_gsScope","module","exports","global","this","window","_gsQueue","push","_gsDefine","Animation","SimpleTimeline","TweenLite","_slice","a","i","b","l","length","_applyCycle","vars","targets","p","val","alt","cycle","TweenMax","target","duration","call","_cycle","_yoyo","yoyo","_repeat","repeat","_repeatDelay","repeatDelay","_dirty","render","prototype","_tinyNum","TweenLiteInternals","_internals","_isSelector","isSelector","_isArray","isArray","to","_blankArray","version","constructor","kill","_gc","killTweensOf","killDelayedCallsTo","getTweensOf","lagSmoothing","ticker","invalidate","_uncache","updateTo","resetDuration","curRatio","ratio","immediate","immediateRender","_startTime","_timeline","_time","_enabled","insert","_delay","_initted","_notifyPluginsOfEnabled","_firstPT","_onPluginEvent","_duration","prevTime","_totalTime","_init","endValue","inv","pt","s","c","_next","time","suppressEvents","force","isComplete","callback","cycleDuration","r","type","pow","rawPrevTime","totalDur","totalDuration","_totalDuration","prevTotalTime","prevCycle","prevRawPrevTime","_rawPrevTime","_ease","_calcEnd","getRatio","_reversed","autoRemoveChildren","lazy","data","_active","_easeType","_easePower","_onUpdate","_callback","lazyTweens","_lazy","_paused","_startAt","onStart","f","t","onRepeat","from","runBackwards","fromTo","fromVars","toVars","startAt","staggerTo","allTo","stagger","onCompleteAll","onCompleteAllParams","onCompleteAllScope","copy","delay","finalComplete","onComplete","apply","onCompleteScope","arguments","callbackScope","fromCycle","selector","reverse","staggerFrom","allFrom","staggerFromTo","allFromTo","delayedCall","params","scope","useFrames","onCompleteParams","onReverseComplete","onReverseCompleteParams","overwrite","set","isTweening","_getChildrenOf","timeline","includeTimelines","cnt","tween","_first","concat","getAllTweens","_rootTimeline","_rootFramesTimeline","killAll","complete","tweens","delayedCalls","timelines","isDC","allTrue","totalTime","killChildTweensOf","parent","curParent","tl","tweenLookup","parentNode","_changePause","pause","paused","pauseAll","resumeAll","globalTimeScale","value","_timeScale","frame","progress","totalProgress","TimelineLite","_labels","smoothChildTiming","_sortChildren","onUpdate","v","join","indexOf","_swapSelfInParams","add","align","_lazyTweens","_lazyRender","lazyRender","_globals","globals","_copy","_pauseCallback","pauseCallback","_forcingPlayhead","_hasPause","position","Engine","_parseTimeOrLabel","exportRoot","ignoreDelayedCalls","next","root","_remove","curTime","child","beforeRawTime","Array","addLabel","rawTime","remove","_pauseTime","removeLabel","skipDisable","last","_last","append","offsetOrLabel","insertMultiple","appendMultiple","label","addPause","getLabelTime","timeOrLabel","appendIfAbsent","ignore","isNaN","parseInt","charAt","Number","substr","seek","stop","gotoAndPlay","play","gotoAndStop","internalForce","pauseTween","prevStart","prevTimeScale","prevPaused","_hasPausedChild","_prev","endTime","getChildren","nested","ignoreBeforeTime","disabled","_contains","recent","_recent","shiftChildren","amount","adjustLabels","labels","_kill","changed","clear","enabled","ignoreTimeline","uncapped","timeScale","prev","end","max","usesFrames","wrapRepeats","Ease","TimelineMax","_easeNone","addCallback","removeCallback","removePause","tweenTo","ease","Math","abs","onStartScope","onStartParams","tweenFromTo","fromPosition","toPosition","dur","_locked","backwards","wrap","recTotalTime","recCycle","recRawPrevTime","recTime","getActive","all","isActive","getLabelAfter","getLabelsArray","name","getLabelBefore","sort","currentLabel","_RAD2DEG","PI","_r1","_r2","_r3","_corProps","Segment","d","da","ca","ba","_correlate","cubicToQuadratic","q1","q2","q3","q4","mab","mbc","mcd","mabc","mbcd","m8","_calculateControlPoints","curviness","quad","basic","correlate","p1","p2","p3","seg","m1","m2","mm","cp2","qb","r1","r2","ii","cp1","splice","_parseAnchors","values","prepend","tmp","bezierThrough","quadratic","j","seamless","obj","props","first","unshift","sqrt","_parseBezierData","cur","inc","soft","_addCubicLengths","steps","resolution","d1","bez","index","_parseLengthData","lengths","total","threshold","segments","curLS","BezierPlugin","plugin","propName","priority","API","init","_target","_func","_mod","_props","_timeRes","timeResolution","isFunc","second","autoRotate","orientToBezier","_autoRotate","_overwriteProps","parseFloat","_beziers","_segCount","ld","_length","_lengths","_segments","_l1","_li","_s1","_si","_l2","_curSeg","_s2","_prec","_initialRotations","_startRatio","curIndex","curSeg","func","notStart","b2","x1","y1","x2","y2","conv","ar","atan2","_autoCSS","quadraticToCubic","_cssRegister","CSSPlugin","_parseToProxy","_setPluginRatio","CSSPropTween","_registerComplexSpecialProp","parser","e","prop","cssp","pluginValues","setRatio","left","x","_transform","_enableTransforms","_gsTransform","proxy","rotation","_onInitTween","_tween","lookup","op","_super","TweenPlugin","_hasPriority","_suffixMap","_cs","_specialProps","defaultTransformPerspective","defaultSkewType","defaultSmoothOrigin","suffixMap","top","right","bottom","width","height","fontSize","padding","margin","perspective","lineHeight","_autoRound","_reqSafariFix","_isSafari","_isFirefox","_isSafariLT6","_ieVers","_index","_numExp","_relNumExp","_valuesExp","_NaNExp","_suffixExp","_opacityExp","_opacityValExp","_alphaFilterExp","_rgbhslExp","_capsExp","_camelExp","_urlExp","_camelFunc","g","toUpperCase","_horizExp","_ieGetMatrixExp","_ieSetMatrixExp","_commasOutsideParenExp","_complexExp","_DEG2RAD","_forcePT","_dummyElement","style","_doc","document","createElement","_createElement","ns","createElementNS","_tempDiv","_tempImg","_agent","navigator","userAgent","_supportsOpacity","exec","RegExp","$1","cssText","test","opacity","_getIEOpacity","currentStyle","filter","_log","console","log","_prefixCSS","_prefix","_checkPropPrefix","undefined","toLowerCase","_getComputedStyle","defaultView","getComputedStyle","_getStyle","getStyle","cs","calc","dflt","rv","getPropertyValue","replace","_convertToPixels","convertToPixels","sfx","recurse","pix","cache","horiz","node","neg","precise","clientWidth","clientHeight","appendChild","body","_gsCache","removeChild","cacheWidths","_calculateOffset","calculateOffset","dim","_getAllStyles","tr","_transformPropCSS","_transformProp","_getTransform","skewX","scaleX","scaleY","y","_supports3D","z","rotationX","rotationY","scaleZ","filters","_cssDif","s1","s2","forceLookup","mpt","difs","MiniPropTween","firstMPT","_dimensions","_margins","_getDimension","nodeName","getCTM","_isSVG","getBBox","offsetWidth","offsetHeight","_parsePosition","recObj","split","oxp","oyp","oxr","oyr","ox","oy","_parseChange","_parseVal","_parseAngle","directionalEnd","cap","dif","result","isRelative","min","_colorLookup","aqua","lime","silver","black","maroon","teal","blue","navy","white","fuchsia","olive","yellow","orange","gray","purple","green","red","pink","cyan","transparent","_hue","h","_parseColor","parseColor","toHSL","wasHSL","match","_formatColors","color","temp","colors","_colorExp","charIndex","parsed","colorStringFilter","combined","lastIndex","defaultStringFilter","_getFormatter","clr","collapsible","multi","formatter","dColor","dVals","pfx","delim","numVals","dSfx","vals","_getEdgeParser","parse","str","round","mod","xs0","xs1","shallow","xp","firstPT","bpt","start","transform","oldForce","rxp","n","pr","_addNonTweeningNumericPT","overwriteProp","_parseComplex","parseComplex","clrs","xi","ni","bv","ev","bnums","enums","bn","hasAlpha","cv","useHSL","ea","autoRound","appendXtra","xfirst","pad","SpecialProp","options","prefix","format","defaultValue","keyword","defaults","_registerPluginProp","pluginName","pluginClass","com","greensock","plugins","bi","ei","kwd","registerSpecialProp","onInitTween","useSVGTransformAttr","_useSVGTransformAttr","_transformProps","_transformOriginProp","Transform","force3D","defaultForce3D","_SVGElement","SVGElement","_createSVG","container","attributes","element","reg","setAttributeNS","_docElement","documentElement","_forceSVGTransformAttr","svg","rect","chrome","getBoundingClientRect","_parseSVGOrigin","local","decoratee","absolute","smoothOrigin","skipRecord","xOrigin","yOrigin","tx","ty","determinant","xOriginOld","yOriginOld","tm","m","_getMatrix","hasAttribute","getAttribute","_identity2DMatrix","xOffset","yOffset","setAttribute","_getBBoxHack","swapIfPossible","bbox","ownerSVGElement","oldParent","oldSibling","nextSibling","oldCSS","display","_originalGetBBox","insertBefore","_getBBox","error","force2D","isDefault","dec","none","rnd","_removeProp","getTransform","rec","invX","zOrigin","t1","t2","t3","cos","sin","a11","a21","a31","a41","a12","a22","a32","a42","a13","a23","a33","a14","a24","a34","a43","angle","k","removeAttribute","_setIETransformRatio","ang","skew","dx","dy","w","clip","xPercent","yPercent","marg","mult","ieOffsetX","ieOffsetY","_setTransformRatio","set3DTransformRatio","setTransformRatio","comma","zero","sx","sy","sz","isSVG","skewY","skewType","tan","parsingProp","_lastParsedTransform","swapFunc","scaleFunc","scale","has3D","hasChange","dr","matrix","originalGSTransform","endRotations","transformOriginString","parseTransform","orig","transformOrigin","svgOrigin","transformPerspective","directionalRotation","shortRotation","rotationZ","shortRotationX","shortRotationY","_transformType","ea1","es2","bs2","bs","es","en","esfx","bsfx","rel","hn","vn","em","pct","overlap","src","bp","backgroundPositionX","backgroundPositionY","clipTop","clipRight","clipBottom","clipLeft","bw","_setIEOpacityRatio","skip","xn1","isAutoAlpha","zoom","removeProperty","_setClassNameRatio","_gsClassPT","difData","cnpt","cnptLookup","_classNamePT","_setClearPropsRatio","clearTransform","transformParse","nodeType","_vars","pt2","zIndex","tpt","threeD","_addLazySet","className","WebkitBackfaceVisibility","_linkCSSP","pop","sp","isStr","strictUnits","xs2","xn2","xs3","xn3","xs4","xn4","xs5","lazySet","autoAlpha","alpha","visibility","_getChildStyles","children","slice","childNodes","cascadeTo","results","_reservedProps","reservedProps","_targets","activate","RoundPropsPlugin","_roundLinkedList","blob","_onInitAllProps","rp","roundProps","rpt","_propLookup","pg","_add","_addTween","finals","useRadians","SteppedEase","RoughEase","_createElastic","GreenSockGlobals","gs","_2PI","_HALF_PI","_class","_create","C","_easeReg","register","_wrap","EaseOut","EaseIn","EaseInOut","aliases","easeOut","easeIn","easeInOut","EasePoint","gap","_createBack","overshoot","_p1","_p2","config","Back","SlowMo","linearRatio","power","yoyoMode","_p","_p3","bump","pnt","taper","points","randomize","clamp","template","strength","random","invert","def","amplitude","period","asin","find","map","moduleName","_exports","_ticker","_tickerActive","_namespace","_emptyFunc","toString","Object","array","_defLookup","Definition","dependencies","sc","gsClass","_classes","check","cl","hasModule","missing","_baseParams","extraParams","_type","_power","_params","_easeMap","names","types","create","na","ta","easing","pw","linear","Linear","swing","Quad","EventDispatcher","_listeners","_eventTarget","addEventListener","useParam","listener","list","wake","up","removeEventListener","dispatchEvent","_reqAnimFrame","requestAnimationFrame","_cancelAnimFrame","cancelAnimationFrame","_getTime","Date","now","getTime","_lastUpdate","fps","useRAF","_fps","_req","_id","_gap","_nextTime","_self","_useRAF","_lagThreshold","_adjustedLag","_tickWord","_tick","manual","dispatch","elapsed","tick","adjustedLag","sleep","clearTimeout","setTimeout","visibilityState","Ticker","events","reversed","_checkTimeout","atTime","resume","restart","includeDelay","startTime","includeSelf","eventCallback","includeRepeats","pauseTime","raw","prevTween","st","targ","jquery","_overwrite","_overwriteLookup","defaultOverwrite","_siblings","_register","_applyOverwrite","css","_plugins","_overwrittenProps","defaultEase","autoSleep","$","jQuery","querySelectorAll","getElementById","_lazyLookup","_numbersExp","_setRatio","fp","_blobDif","startNums","endNums","num","nonNumbers","currentNum","_applyPT","_addPropTween","funcParam","stringFilter","getterName","blobDif","_tweenLookup","_tweenLookupNum","onUpdateParams","onUpdateScope","onReverseCompleteScope","onRepeatParams","onRepeatScope","easeParams","autoCSS","onOverwrite","id","auto","concurrent","allOnStart","preexisting","true","false","_nextGCFrame","_updateRoot","scrub","_gsTweenID","_onOverwrite","overwrittenTween","overwritingTween","killedProps","mode","siblings","curTween","globalStart","overlaps","oCount","zeroDur","_checkOverlap","reference","ts","initPlugins","startVars","_initProps","propLookup","overwrittenProps","_priority","_onDisable","_onEnable","killProps","record","killed","simultaneousOverwrite","_tempKill","onlyActive","_propName","_roundProps","overwriteProps","initAll","Plugin","getGlobal","THREE","REVISION","EPSILON","sign","Function","defineProperty","get","assign","TypeError","output","source","nextKey","hasOwnProperty","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","Color","setRGB","setHex","setStyle","setScalar","scalar","hex","floor","setHSL","hue2rgb","q","euclideanModulo","handleAlpha","string","warn","components","size","ColorKeywords","clone","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","offsetHSL","addColors","color1","color2","addScalar","multiply","multiplyScalar","lerp","equals","fromArray","offset","toArray","aliceblue","antiquewhite","aquamarine","azure","beige","bisque","blanchedalmond","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","gainsboro","ghostwhite","gold","goldenrod","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","limegreen","linen","magenta","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","oldlace","olivedrab","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","plum","powderblue","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellowgreen","Quaternion","_x","_y","_z","_w","onChangeCallback","quaternion","setFromEuler","euler","update","Euler","Error","c1","c2","c3","s3","order","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","te","elements","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","v1","EPS","vFrom","vTo","Vector3","dot","crossVectors","normalize","inverse","conjugate","lengthSq","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","slerp","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","qa","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","z1","w1","dir","sqrSin","len","tDir","Vector2","setX","setY","setComponent","getComponent","addVectors","addScaledVector","sub","subVectors","subScalar","isFinite","divide","divideScalar","clampScalar","minVal","maxVal","clampLength","ceil","roundToZero","negate","lengthManhattan","distanceTo","distanceToSquared","setLength","lerpVectors","v2","fromAttribute","attribute","itemSize","rotateAround","center","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","applyMatrix3","applyMatrix4","applyProjection","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","Matrix4","multiplyMatrices","projectionMatrix","getInverse","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromMatrixPosition","setFromMatrixColumn","setFromMatrixScale","Vector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","_order","DefaultOrder","RotationOrders","setFromQuaternion","makeRotationFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Line3","line","distanceSq","distance","at","closestPointToPointParameter","startP","startEnd","point","clampToLine","startEnd2","startEnd_startP","closestPointToPoint","Box2","Infinity","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","expandByVector","expandByScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","translate","Box3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromObject","object","updateMatrixWorld","traverse","geometry","Geometry","vertices","BufferGeometry","positions","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","constant","getBoundingSphere","Sphere","Matrix3","Float32Array","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToVector3Array","applyToBuffer","buffer","getX","getY","getZ","setXYZ","throwOnDegenerate","t11","t12","t13","det","msg","detInv","transpose","flattenToArrayOffset","getNormalMatrix","matrix4","transposeIntoArray","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","makeRotationFromEuler","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","z2","wx","wy","wz","lookAt","eye","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","multiplyToArray","getPosition","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","compose","decompose","invSX","invSY","invSZ","makeFrustum","near","far","makePerspective","fov","aspect","ymax","DEG2RAD","ymin","xmin","xmax","makeOrthographic","Ray","origin","direction","ray","recast","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","diff","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","b1","invDet","intersectSphere","tca","d2","radius2","thc","t0","distanceToPlane","denominator","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","Frustum","p0","p4","p5","planes","Plane","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","intersectsObject","boundingSphere","computeBoundingSphere","intersectsSprite","sprite","negRadius","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","orthoPoint","perpendicularMagnitude","intersectLine","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","normalMatrix","Spherical","other","makeSafe","vec3","RAD2DEG","generateUUID","chars","uuid","mapLinear","a1","a2","smoothstep","smootherstep","random16","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","nearestPowerOfTwo","LN2","nextPowerOfTwo","Spline","interpolate","intPoint","weight","w2","w3","pa","pb","pc","pd","v3","initFromArray","getPoint","getControlPointsArray","coords","getLength","nSubDivisions","nSamples","oldIntPoint","oldPosition","tmpVec","chunkLengths","totalLength","chunks","reparametrizeByArcLength","samplingCoef","indexCurrent","indexNext","realDistance","sampling","newpoints","sl","Triangle","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","evaluate","pp","validate_interval","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","stride","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","DiscreteInterpolant","LinearInterpolant","offset1","offset0","weight1","weight0","QuaternionLinearInterpolant","Clock","autoStart","oldTime","elapsedTime","running","performance","getElapsedTime","getDelta","newTime","listeners","hasEventListener","listenerArray","event","Layers","mask","channel","enable","toggle","disable","layers","ascSort","intersectObject","raycaster","intersects","recursive","visible","raycast","Raycaster","Mesh","Line","LOD","Points","Sprite","defineProperties","PointCloud","linePrecision","setFromCamera","PerspectiveCamera","OrthographicCamera","intersectObjects","objects","Object3D","onRotationChange","onQuaternionChange","Object3DIdCount","DefaultUp","enumerable","modelViewMatrix","matrixAutoUpdate","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","castShadow","receiveShadow","frustumCulled","renderOrder","userData","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","traverseVisible","traverseAncestors","updateMatrix","toJSON","meta","extractFromCache","key","metadata","isRootObject","geometries","materials","textures","images","generator","JSON","stringify","material","Face3","materialIndex","vertexNormals","vertexColors","BufferAttribute","normalized","dynamic","updateRange","count","needsUpdate","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","indices","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","getW","setXY","setXYZW","Int8Attribute","Int8Array","Uint8Attribute","Uint8Array","Uint8ClampedAttribute","Uint8ClampedArray","Int16Attribute","Int16Array","Uint16Attribute","Uint16Array","Int32Attribute","Int32Array","Uint32Attribute","Uint32Array","Float32Attribute","Float64Attribute","Float64Array","DynamicBufferAttribute","InstancedBufferAttribute","meshPerAttribute","InterleavedBuffer","InstancedInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","GeometryIdCount","faces","faceVertexUvs","morphTargets","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","verticesNeedUpdate","elementsNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","vertex","face","jl","computeBoundingBox","fromBufferGeometry","addFace","normals","tempNormals","uvs","tempUVs","uvs2","tempUVs2","uv","uv2","groups","group","computeFaceNormals","cb","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","faceNormal","dstNormalsFace","dstNormalsVertex","computeTangents","computeLineDistances","merge","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","precision","faceIndicesToRemove","dupIndex","idx","sortFacesByMaterialIndex","materialIndexSort","newUvs1","newUvs2","setBit","getNormalIndex","hash","normalsHash","getColorIndex","colorsHash","getUvIndex","uvsHash","parameters","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","uvsCopy","kl","dispose","DirectGeometry","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","morphAttributes","drawRange","getIndex","setIndex","addAttribute","addGroup","clearGroups","setDrawRange","updateFromObject","direct","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","MaxIndex","InstancedBufferGeometry","maxInstancedCount","instances","Uniform","onUpdateCallback","AnimationAction","_new","mixer","localRoot","_mixer","_clip","_localRoot","tracks","nTracks","interpolants","interpolantSettings","interpolant","createInterpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","loop","_loopCount","_effectiveTimeScale","_effectiveWeight","repetitions","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","reset","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","setLoop","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","times","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","accuIndex","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","accumulate","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationClip","trim","optimize","track","json","jsonTracks","frameTime","KeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","AnimationUtils","getKeyframeOrder","sortedArray","NumberKeyframeTrack","findByName","objectOrClipArray","clipArray","o","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","animation","bones","addNonemptyTrack","trackType","trackName","animationKeys","propertyName","destTracks","flattenJSON","clipName","hierarchyTracks","hierarchy","keys","morphTargetNames","morphTargetName","animationKey","boneName","VectorKeyframeTrack","QuaternionKeyframeTrack","AnimationMixer","_initMemoryManager","_accuIndex","clipAction","optionalRoot","rootUuid","clipObject","clipUuid","actionsForClip","_actionsByClip","prototypeAction","existingAction","actionByRoot","knownActions","newAction","_Action","_bindAction","_addInactiveAction","stopAllAction","actions","_actions","nActions","_nActiveActions","bindings","_bindings","nBindings","_nActiveBindings","useCount","uncacheClip","actionsByClip","actionsToRemove","cacheIndex","lastInactiveAction","_removeInactiveBindingsForAction","uncacheRoot","_removeInactiveAction","bindingsByRoot","_bindingsByRootAndName","bindingByName","binding","restoreOriginalState","_removeInactiveBinding","uncacheAction","bindingsByName","referenceCount","_addInactiveBinding","path","parsedPath","PropertyMixer","PropertyBinding","ValueTypeName","getValueSize","_lendBinding","saveOriginalState","_lendAction","_takeBackBinding","_takeBackAction","_controlInterpolants","_nActiveControlInterpolants","stats","inUse","controlInterpolants","knownActionsForClip","lastKnownAction","byClipCacheIndex","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","propBinding","rootNode","lastInactiveBinding","remove_empty_map","_","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","AnimationObjectGroup","var_args","_objects","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","paths","parsedPaths","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","subscribe_","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","arraySlice","isTypedArray","subarray","convertArray","forceClone","BYTES_PER_ELEMENT","ArrayBuffer","isView","DataView","compareTime","nValues","srcOffset","jsonKeys","valuePropertyName","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","message","getInterpolation","shift","timeOffset","nKeys","valid","currTime","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","_getTrackTypeForValueTypeName","typeName","ColorKeyframeTrack","BooleanKeyframeTrack","StringKeyframeTrack","parseTrackName","findNode","getValue","targetArray","bind","setValue","sourceArray","targetObject","objectName","propertyIndex","_getValue_unavailable","_setValue_unavailable","objectIndex","skeleton","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","resolvedProperty","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","unbind","_getValue_unbound","_setValue_unbound","dest","Composite","targetGroup","optionalParsedPath","_targetGroup","firstValidIndex","re","matches","searchSkeleton","bone","searchNodeSubtree","childNode","subTreeNode","mixFunction","bufferType","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","currentWeight","mix","originalValueOffset","Audio","context","createBufferSource","onended","onEnded","gain","createGain","connect","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","getOutput","setNodeSource","audioNode","setBuffer","audioBuffer","currentTime","disconnect","getFilters","setFilters","getFilter","setFilter","setPlaybackRate","getPlaybackRate","getLoop","getVolume","setVolume","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","AudioContext","webkitAudioContext","PositionalAudio","panner","createPanner","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","AudioListener","destination","removeFilter","getMasterVolume","setMasterVolume","orientation","setOrientation","Camera","matrixWorldInverse","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","magFilter","minFilter","renderTarget","WebGLRenderTargetCube","updateCubeMap","renderer","scene","generateMipmaps","texture","activeCubeFace","setRenderTarget","updateProjectionMatrix","cx","cy","focus","view","filmGauge","filmOffset","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","StereoCamera","cameraL","cameraR","eyeRight","eyeLeft","eyeSep","eyeSepOnProjection","Light","intensity","groundColor","decay","penumbra","LightShadow","bias","mapSize","AmbientLight","DirectionalLight","shadow","DirectionalLightShadow","light","HemisphereLight","skyColor","PointLight","SpotLight","SpotLightShadow","AudioLoader","manager","DefaultLoadingManager","load","url","onLoad","onProgress","onError","loader","XHRLoader","setResponseType","decodeAudioData","Cache","files","file","Loader","onLoadStart","onLoadProgress","onLoadComplete","crossOrigin","extractUrlBase","initMaterials","texturePath","createMaterial","textureLoader","materialLoader","loadTexture","anisotropy","fullPath","Handlers","setCrossOrigin","wrapS","wrapT","TextureLoader","MaterialLoader","blending","specular","emissive","shininess","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","lightMap","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","aoMap","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","bumpMap","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","bumpScale","normalMap","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","normalScale","specularMap","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","alphaMap","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","side","setTextures","handlers","regex","cached","request","XMLHttpRequest","overrideMimeType","open","response","status","itemEnd","itemError","responseType","withCredentials","send","itemStart","setPath","setWithCredentials","FontLoader","text","substring","font","Font","ImageLoader","image","JSONLoader","statusDomElement","_statusDomElement","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","LoadingManager","isLoading","itemsLoaded","itemsTotal","BufferGeometryLoader","TYPED_ARRAYS","typedArray","drawcalls","offsets","getTexture","roughness","metalness","uniforms","vertexShader","fragmentShader","shading","alphaTest","depthTest","depthWrite","colorWrite","wireframe","wireframeLinewidth","sizeAttenuation","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","emissiveIntensity","envMap","combine","reflectivity","lightMapIntensity","aoMapIntensity","ObjectLoader","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","widthSegments","heightSegments","depth","depthSegments","thetaStart","thetaLength","radiusTop","radiusBottom","radialSegments","openEnded","phiStart","phiLength","detail","innerRadius","outerRadius","thetaSegments","phiSegments","tube","tubularSegments","arc","loadImage","parseConstant","Texture","mapping","getGeometry","getMaterial","Scene","SkinnedMesh","Group","levels","level","addLevel","CubeTextureLoader","urls","loaded","CubeTexture","DataTextureLoader","BinaryTextureLoader","_parser","DataTexture","texData","mipmaps","mipmapCount","CompressedTextureLoader","texDatas","CompressedTexture","isCubemap","Material","MaterialIdCount","fog","lights","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","clippingPlanes","clipShadows","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","premultipliedAlpha","overdraw","_needsUpdate","setValues","newValue","currentValue","isRoot","srcPlanes","dstPlanes","LineBasicMaterial","linewidth","linecap","linejoin","LineDashedMaterial","dashSize","gapSize","MeshBasicMaterial","refractionRatio","wireframeLinecap","wireframeLinejoin","skinning","MeshDepthMaterial","depthPacking","MeshLambertMaterial","MeshNormalMaterial","MeshPhongMaterial","MeshStandardMaterial","defines","STANDARD","envMapIntensity","MeshPhysicalMaterial","PHYSICAL","MultiMaterial","PointsMaterial","ShaderMaterial","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","UniformsUtils","RawShaderMaterial","SpriteMaterial","ShadowMaterial","UniformsLib","ShaderChunk","encoding","TextureIdCount","sourceFile","DEFAULT_IMAGE","DEFAULT_MAPPING","premultiplyAlpha","flipY","unpackAlignment","getDataURL","canvas","toDataURL","getContext","drawImage","transformUv","DepthTexture","CanvasTexture","VideoTexture","video","readyState","HAVE_CURRENT_DATA","inverseMatrix","testPoint","rayPointDistanceSq","localThresholdSq","intersectPoint","distanceToRay","localThreshold","LineSegments","precisionSq","vStart","vEnd","interSegment","interRay","step","distSq","faceIndex","nbVertices","drawMode","updateMorphTargets","setDrawMode","morphTargetBase","morphTargetInfluences","morphTargetDictionary","ml","getMorphTargetIndexByName","uvIntersection","uv1","uv3","barycoord","checkIntersection","intersectionPointWorld","checkBufferGeometryIntersection","intersection","intersectionPoint","uvA","uvB","uvC","tempA","tempB","tempC","fvA","fvB","fvC","isFaceMaterial","faceMaterial","morphInfluences","influence","uvs_f","Bone","skin","Skeleton","boneInverses","useVertexTexture","identityMatrix","boneTextureWidth","boneTextureHeight","boneMatrices","boneTexture","calculateInverses","bl","pose","offsetMatrix","bindMode","bindMatrix","bindMatrixInverse","gbone","pos","rotq","scl","normalizeSkinWeights","sw","vec","skinWeight","getObjectForDistance","matrixPosition","guessSizeSq","LensFlare","lensFlares","positionScreen","customUpdateCallback","updateLensFlares","flare","vecX","vecY","wantedRotation","overrideMaterial","autoUpdate","Fog","FogExp2","density","merged","uniforms_src","uniforms_dst","parameter_src","common","diffuse","offsetRepeat","flipEnvMap","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","directionalLights","properties","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","spotShadowMap","spotShadowMatrix","pointLights","pointShadowMap","pointShadowMatrix","hemisphereLights","ShaderLib","lambert","phong","standard","dashed","totalSize","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","lightPos","WebGLRenderer","getTargetPixelRatio","_currentRenderTarget","_pixelRatio","glClearColor","_premultipliedAlpha","state","clearColor","setDefaultGLState","scissor","_currentScissor","_scissor","viewport","_currentViewport","_viewport","_clearColor","_clearAlpha","resetGLState","_currentProgram","_currentCamera","_currentGeometryProgram","_currentMaterialId","onContextLost","preventDefault","onTextureDispose","deallocateTexture","_infoMemory","onRenderTargetDispose","deallocateRenderTarget","onMaterialDispose","deallocateMaterial","textureProperties","__image__webglTextureCube","_gl","deleteTexture","__webglInit","__webglTexture","delete","renderTargetProperties","depthTexture","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","releaseMaterialProgramReference","programInfo","program","programCache","releaseProgram","setupVertexAttributes","startIndex","extension","initAttributes","geometryAttributes","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","getAttributeBuffer","enableAttributeAndDivisor","enableAttribute","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","disableUnusedAttributes","absNumericalSort","painterSortStable","reversePainterSortStable","pushRenderItem","transparentObjects","transparentObjectsLastIndex","opaqueObjects","opaqueObjectsLastIndex","renderItem","_vector3","isObjectViewable","_sphere","isSphereViewable","isSpriteViewable","_frustum","numPlanes","_clipping","_this","negRad","projectObject","sprites","ImmediateRenderObject","sortObjects","_projScreenMatrix","groupMaterial","renderObjects","renderList","setMaterial","setProgram","renderBufferImmediate","renderBufferDirect","initMaterial","materialProperties","getParameters","_lights","code","getProgramCode","programChange","shaderID","shader","__webglShader","acquireProgram","numSupportedMorphTargets","maxMorphTargets","numSupportedMorphNormals","maxMorphNormals","numClippingPlanes","uniform","lightsHash","ambient","directional","spot","hemi","progUniforms","getUniforms","uniformsList","WebGLUniforms","seqWithValue","seq","dynamicUniforms","splitDynamic","CULL_FACE","setFlipSided","setBlending","setDepthFunc","setDepthTest","setDepthWrite","setColorWrite","setPolygonOffset","_usedTextureUnits","_clippingEnabled","_localClippingEnabled","useCache","setState","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","useProgram","capabilities","logarithmicDepthBuffer","uCamPos","cameraPosition","setOptional","floatVertexTextures","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLine","refreshUniformsDash","refreshUniformsPoints","refreshUniformsLambert","refreshUniformsPhong","refreshUniformsPhysical","refreshUniformsStandard","upload","dynUniforms","evalDynamic","uvScaleMap","WebGLRenderTarget","_canvas","setupShadows","lightShadowsLength","shadows","setupLights","ll","shadowMap","viewMatrix","directionalLength","pointLength","spotLength","hemiLength","lightCache","allocTextureUnit","textureUnit","maxTextures","setTextureParameters","textureType","isPowerOfTwoImage","texParameteri","TEXTURE_WRAP_S","paramThreeToGL","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","CLAMP_TO_EDGE","filterFallback","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","uploadTexture","slot","createTexture","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","clampToMaxSize","maxTextureSize","textureNeedsPowerOfTwo","makePowerOfTwo","glFormat","glType","mipmap","internalFormat","DEPTH_COMPONENT","_isWebGL2","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","texImage2D","getCompressedTextureFormats","compressedTexImage2D","generateMipmap","__version","setTexture2D","maxSize","HTMLImageElement","HTMLCanvasElement","setTextureCube","TEXTURE_CUBE_MAP","isCompressed","isDataTexture","cubeImage","autoScaleCubemaps","maxCubemapSize","TEXTURE_CUBE_MAP_POSITIVE_X","setTextureCubeDynamic","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","depthBuffer","stencilBuffer","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","NEAREST","LINEAR","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","RGB","RGBA","LUMINANCE","LUMINANCE_ALPHA","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","ZERO","ONE","SRC_COLOR","ONE_MINUS_SRC_COLOR","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","_context","_alpha","_depth","_stencil","stencil","_antialias","antialias","_preserveDrawingBuffer","preserveDrawingBuffer","domElement","autoClear","autoClearColor","autoClearDepth","autoClearStencil","localClippingEnabled","gammaInput","gammaOutput","physicallyCorrectLights","toneMapping","toneMappingExposure","toneMappingWhitePoint","_currentFramebuffer","_currentScissorTest","_width","_height","_scissorTest","WebGLClipping","_infoRender","calls","info","memory","programs","getShaderPrecisionFormat","rangeMin","rangeMax","WebGL2RenderingContext","WebGLExtensions","WebGLCapabilities","WebGLState","WebGLProperties","WebGLObjects","WebGLPrograms","WebGLLights","bufferRenderer","WebGLBufferRenderer","indexedBufferRenderer","WebGLIndexedBufferRenderer","WebGLShadowMap","spritePlugin","SpritePlugin","lensFlarePlugin","LensFlarePlugin","getContextAttributes","forceContextLoss","loseContext","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getPrecision","getPixelRatio","setPixelRatio","setSize","getSize","updateStyle","setViewport","setScissor","setScissorTest","boolean","getClearColor","setClearColor","getClearAlpha","setClearAlpha","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearDepth","clearStencil","clearTarget","buffers","hasPositions","createBuffer","hasNormals","hasUvs","hasColors","bufferData","positionArray","DYNAMIC_DRAW","normalArray","nx","ny","nz","uvArray","colorArray","drawArrays","TRIANGLES","updateBuffers","geometryProgram","activeInfluences","getWireframeAttribute","ELEMENT_ARRAY_BUFFER","dataStart","dataCount","rangeStart","rangeCount","groupStart","groupCount","drawStart","drawEnd","drawCount","setLineWidth","setMode","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","lineWidth","LINE_STRIP","POINTS","renderInstances","forceClear","beginShadows","endShadows","setFaceCulling","cullFace","frontFaceDirection","setCullFace","warned","setTexture","getCurrentRenderTarget","scissorTest","activeMipMapLevel","readRenderTargetPixels","restore","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","drawArraysInstancedANGLE","resetGlobalState","globalState","numGlobalPlanes","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","viewNormalMatrix","i4","renderingShadows","enableLocalClipping","fromCache","nGlobal","lGlobal","clippingState","drawElements","drawElementsInstancedANGLE","gl","getExtension","getMaxPrecision","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","_maxPrecision","WebGLGeometries","onGeometryDispose","buffergeometry","_bufferGeometry","deleteAttribute","deleteAttributes","property","bufferproperty","__webglBuffer","deleteBuffer","removeAttributeBuffer","updateAttribute","attributeProperties","updateBuffer","usage","STATIC_DRAW","bufferSubData","edges","checkEdge","WebGLProgram","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","rendererExtensions","envMapCubeUV","flatShading","filterEmptyLine","generateDefines","fetchAttributeLocations","identifiers","getProgramParameter","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","numDirLights","numSpotLights","numPointLights","numHemiLights","parseIncludes","include","unrollLoops","snippet","unroll","programIdCount","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","customDefines","createProgram","supportsVertexTextures","maxBones","doubleSided","flipSided","shadowMapEnabled","useFog","fogExp","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","WebGLShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","programLog","getProgramInfoLog","vertexLog","getShaderInfoLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","cachedUniforms","cachedAttributes","destroy","deleteProgram","usedTimes","allocateBones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","shaderIDs","parameterNames","nClipPlanes","currentRenderTarget","envMapMode","pl","addLineNumbers","lines","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","_renderer","getDepthMaterial","isPointLight","lightPositionWorld","materialVariants","_depthMaterials","customMaterial","customDepthMaterial","_distanceMaterials","customDistanceMaterial","useMorphing","useSkinning","variantIndex","_MorphingFlag","_SkinningFlag","keyA","keyB","materialsForVariant","_materialCache","cachedMaterial","renderSingleSided","renderReverseSided","shadowCamera","_renderList","_state","_lightShadows","_shadowMapSize","_lookTarget","_lightPositionWorld","_NumberOfMaterialVariants","cubeDirections","cubeUps","cube2DViewPorts","depthMaterialTemplate","distanceShader","distanceUniforms","depthMaterial","distanceMaterial","USE_SHADOWMAP","BLEND","faceCount","vpWidth","vpHeight","pars","shadowMatrix","vpDimensions","clearAlpha","WebGLColorBuffer","WebGLDepthBuffer","WebGLStencilBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","currentScissorTest","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","DEPTH_TEST","enableVertexAttribArray","vertexAttribDivisorANGLE","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","blendFuncSeparate","blendFunc","setMask","setTest","setFunc","setStencilTest","stencilTest","setStencilWrite","stencilWrite","setStencilFunc","stencilFunc","stencilRef","stencilMask","setStencilOp","stencilFail","stencilZFail","stencilZPass","setOp","frontFace","CW","CCW","BACK","FRONT","FRONT_AND_BACK","factor","units","POLYGON_OFFSET_FILL","getScissorTest","SCISSOR_TEST","webglSlot","webglType","webglTexture","boundTexture","setClear","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","STENCIL_TEST","stencilOp","UniformContainer","arrayCacheF32","arrayCacheI32","flatten","nBlocks","blockSize","firstElem","allocTexUnits","setValue1f","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setValueT6","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","tex","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","RePathPart","addUniform","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","flares","vertexBuffer","elementBuffer","tempTexture","occlusionTexture","renderType","occlusionMap","screenPosition","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","TEXTURE1","copyTexImage2D","uvOffset","uvScale","fogType","fillStyle","fillRect","spritePosition","spriteRotation","spriteScale","oldFogType","sceneFogType","Face4","LineStrip","LinePieces","MeshFaceMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","isIntersectionBox","isIntersectionSphere","multiplyVector3","multiplyVector3Array","extractPosition","multiplyVector4","rotateAxis","crossVector","rotateByAxis","isIntersectionLine","isIntersectionPlane","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraNear","shadowCameraFar","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","indexOffset","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","getData","GeometryUtils","geometry1","ImageUtils","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","Projector","projectVector","unprojectVector","pickingRay","CanvasRenderer","CurveUtils","tangentQuadraticBezier","tangentCubicBezier","tangentSpline","h00","h10","h01","h11","SceneUtils","createMultiMaterialObject","detach","attach","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1Pt","seg2Pt","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","shape","prevShapeIdx","nextShapeIdx","insideAngle","hole","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","intersectsHoleEdge","ihIdx","chkHole","hIdx","indepHoles","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","counter","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","b2p0","b2p1","b2p2","b3","b3p0","b3p1","b3p2","b3p3","Curve","getPointAt","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLengths","__arcLengthDivisions","cacheArcLengths","current","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","getTangentAt","getPointFunc","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","LineCurve","curveLengths","getCurveLengths","lens","cacheLengths","sums","createPointsGeometry","createGeometry","createSpacedPointsGeometry","generateShapes","createPaths","String","ret","createPath","glyph","glyphs","cpx0","cpy0","cpx1","cpy1","cpx2","cpy2","laste","Path","outline","_cachedOutline","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","ha","shapes","toShapes","fromPoints","args","lastargs","aCPx","aCPy","QuadraticBezierCurve","aCP1x","aCP1y","aCP2x","aCP2y","CubicBezierCurve","splineThru","npts","SplineCurve","aRadius","aStartAngle","aEndAngle","aClockwise","absarc","absellipse","ellipse","xRadius","yRadius","aRotation","EllipseCurve","lastPoint","item","spts","spline","deltaAngle","tdivisions","isCCW","noHoles","extractSubpaths","inActions","subPaths","lastPath","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","Shape","isPointInsidePolygon","inPt","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","extrude","ExtrudeGeometry","makeGeometry","ShapeGeometry","getPointsHoles","holesPts","extractAllPoints","extractPoints","tangent","point0","point1","point2","point3","ArcCurve","LineCurve3","QuadraticBezierCurve3","CubicBezierCurve3","SplineCurve3","CatmullRomCurve3","CubicPoly","pz","c0","initNonuniformCatmullRom","x3","dt0","dt1","dt2","initCatmullRom","tension","closed","ClosedSplineCurve3","BoxGeometry","BoxBufferGeometry","CubeGeometry","calculateVertexCount","calculateIndexCount","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","vertexBufferOffset","uvBufferOffset","numberOfVertices","indexBufferOffset","vertexCount","indexCount","CircleGeometry","CircleBufferGeometry","segment","CylinderBufferGeometry","nbCap","generateTorso","tanTheta","indexRow","halfHeight","indexArray","i3","generateCap","centerIndexStart","centerIndexEnd","cosTheta","sinTheta","CylinderGeometry","ConeBufferGeometry","ConeGeometry","EdgesGeometry","thresholdAngle","sortFunction","thresholdDot","edge","vert1","vert2","face1","face2","addShapeList","addShape","scalePt2","getBevelVec","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","buildLidFaces","bevelEnabled","layer","vlen","flen","f3","bevelSegments","buildSideFaces","layeroffset","sidewalls","ahole","slen1","slen2","f4","shapesOffset","uvgen","generateTopUV","wallContour","stepIndex","stepsLength","contourIndex1","contourIndex2","generateSideWallUV","extrudePts","splineTube","binormal","position2","bevelThickness","bevelSize","curveSegments","extrudePath","extrudeByPath","UVGenerator","WorldUVGenerator","frames","TubeGeometry","FrenetFrames","shapePoints","vert","contourMovements","oneHoleMovements","holesMovements","verticesMovements","binormals","indexA","indexB","indexC","indexD","LatheBufferGeometry","base","inverseSegments","n1","n2","LatheGeometry","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","offset2","RingBufferGeometry","radiusStep","thetaSegmentLevel","RingGeometry","SphereGeometry","SphereBufferGeometry","thetaEnd","verticesRow","v4","TextGeometry","TorusBufferGeometry","TorusGeometry","TorusKnotBufferGeometry","calculatePositionOnCurve","cu","su","quOverP","P1","P2","B","T","N","TorusKnotGeometry","heightScale","NoTaper","ip","jp","uva","uvb","uvc","uvd","grid","numpoints","pos2","tangents","SinusoidalTaper","initialNormal3","smallest","MAX_VALUE","tz","mat","PolyhedronGeometry","prepare","that","azimuth","inclination","make","centroid","azi","correctUV","subdivide","cols","aj","bj","rows","DodecahedronGeometry","IcosahedronGeometry","OctahedronGeometry","TetrahedronGeometry","ParametricGeometry","slices","stacks","sliceCount","WireframeGeometry","numEdges","ol","numTris","AxisHelper","ArrowHelper","lineGeometry","coneGeometry","headLength","headWidth","cone","setDirection","setColor","BoxHelper","BoundingBoxHelper","CameraHelper","addLine","addPoint","pointMap","hexFrustum","hexCone","hexUp","hexTarget","hexCross","setPoint","DirectionalLightHelper","lightPlane","targetLine","EdgesHelper","FaceNormalsHelper","nNormals","objGeometry","GridHelper","setColors","HemisphereLightHelper","sphereSize","lightSphere","PointLightHelper","SkeletonHelper","getBoneList","boneList","matrixWorldInv","boneMatrix","SpotLightHelper","vector2","coneLength","coneWidth","VertexNormalsHelper","objPos","objNorm","WireframeHelper","renderCallback","MorphBlendMesh","animationsMap","animationsList","numFrames","startFrame","endFrame","createAnimation","setAnimationWeight","lastFrame","currentFrame","active","directionBackwards","mirroredLoop","autoCreateAnimations","firstAnimation","frameRanges","morph","setAnimationDirectionForward","setAnimationDirectionBackward","setAnimationFPS","setAnimationDuration","setAnimationTime","getAnimationTime","getAnimationDuration","playAnimation","stopAnimation","keyframe","const","THREEJS.THREE","let","onWindowResize","innerWidth","innerHeight","antialiasing","devicePixelRatio"],"mappings":"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","file":"bundle.js","sourcesContent":["\nimport TweenMax from 'gsap/TweenMax';\nimport EasePack from 'gsap/EasePack';\nimport testObj from './test.js';\nimport * as THREEJS from 'three';\n\n\nconst THREE = THREEJS.THREE;\nlet scene, camera, renderer;\nlet geometry, material, cube;\n\nlet init = () => {\n  'use strict';\n\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 );\n  renderer = new THREE.WebGLRenderer({antialiasing:true});\n  renderer.setSize( window.innerWidth, window.innerHeight );\n  renderer.setPixelRatio(window.devicePixelRatio ? window.devicePixelRatio : 1);\n  document.querySelectorAll('section.main')[0].appendChild( renderer.domElement );\n  geometry = new THREE.BoxGeometry( 1, 1, 1 );\n  material = new THREE.MeshBasicMaterial( { color: 0x00ff00 } );\n  cube = new THREE.Mesh( geometry, material );\n  scene.add( cube );\n\n\n  camera.position.z = 5;\n\n  let render = () => {\n    requestAnimationFrame( render );\n\n    cube.rotation.x += 0.01;\n    cube.rotation.y += 0.01;\n\n    renderer.render(scene, camera);\n  };\n\n  render();\n\n  window.addEventListener( 'resize', onWindowResize, false );\n\n  function onWindowResize(){\n\n      camera.aspect = window.innerWidth / window.innerHeight;\n      camera.updateProjectionMatrix();\n\n      renderer.setSize( window.innerWidth, window.innerHeight );\n\n  }\n  //testObj();\n  \n\n};\n\ninit();\n","/*!\n * VERSION: 1.19.1\n * DATE: 2017-01-17\n * UPDATES AND DOCS AT: http://greensock.com\n * \n * Includes all of the following: TweenLite, TweenMax, TimelineLite, TimelineMax, EasePack, CSSPlugin, RoundPropsPlugin, BezierPlugin, AttrPlugin, DirectionalRotationPlugin\n *\n * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\nvar _gsScope = (typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || window; //helps ensure compatibility with AMD/RequireJS and CommonJS/Node\n(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push( function() {\n\n\t\"use strict\";\n\n\t_gsScope._gsDefine(\"TweenMax\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function(Animation, SimpleTimeline, TweenLite) {\n\n\t\tvar _slice = function(a) { //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++]));\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\t_applyCycle = function(vars, targets, i) {\n\t\t\t\tvar alt = vars.cycle,\n\t\t\t\t\tp, val;\n\t\t\t\tfor (p in alt) {\n\t\t\t\t\tval = alt[p];\n\t\t\t\t\tvars[p] = (typeof(val) === \"function\") ? val(i, targets[i]) : val[i % val.length];\n\t\t\t\t}\n\t\t\t\tdelete vars.cycle;\n\t\t\t},\n\t\t\tTweenMax = function(target, duration, vars) {\n\t\t\t\tTweenLite.call(this, target, duration, vars);\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tthis._dirty = true; //ensures that if there is any repeat, the totalDuration will get recalculated to accurately report it.\n\t\t\t\tthis.render = TweenMax.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_isSelector = TweenLiteInternals.isSelector,\n\t\t\t_isArray = TweenLiteInternals.isArray,\n\t\t\tp = TweenMax.prototype = TweenLite.to({}, 0.1, {}),\n\t\t\t_blankArray = [];\n\n\t\tTweenMax.version = \"1.19.1\";\n\t\tp.constructor = TweenMax;\n\t\tp.kill()._gc = false;\n\t\tTweenMax.killTweensOf = TweenMax.killDelayedCallsTo = TweenLite.killTweensOf;\n\t\tTweenMax.getTweensOf = TweenLite.getTweensOf;\n\t\tTweenMax.lagSmoothing = TweenLite.lagSmoothing;\n\t\tTweenMax.ticker = TweenLite.ticker;\n\t\tTweenMax.render = TweenLite.render;\n\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._uncache(true);\n\t\t\treturn TweenLite.prototype.invalidate.call(this);\n\t\t};\n\t\t\n\t\tp.updateTo = function(vars, resetDuration) {\n\t\t\tvar curRatio = this.ratio,\n\t\t\t\timmediate = this.vars.immediateRender || vars.immediateRender,\n\t\t\t\tp;\n\t\t\tif (resetDuration && this._startTime < this._timeline._time) {\n\t\t\t\tthis._startTime = this._timeline._time;\n\t\t\t\tthis._uncache(false);\n\t\t\t\tif (this._gc) {\n\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t} else {\n\t\t\t\t\tthis._timeline.insert(this, this._startTime - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor (p in vars) {\n\t\t\t\tthis.vars[p] = vars[p];\n\t\t\t}\n\t\t\tif (this._initted || immediate) {\n\t\t\t\tif (resetDuration) {\n\t\t\t\t\tthis._initted = false;\n\t\t\t\t\tif (immediate) {\n\t\t\t\t\t\tthis.render(0, true, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (this._gc) {\n\t\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\tif (this._notifyPluginsOfEnabled && this._firstPT) {\n\t\t\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", this); //in case a plugin like MotionBlur must perform some cleanup tasks\n\t\t\t\t\t}\n\t\t\t\t\tif (this._time / this._duration > 0.998) { //if the tween has finished (or come extremely close to finishing), we just need to rewind it to 0 and then render it again at the end which forces it to re-initialize (parsing the new vars). We allow tweens that are close to finishing (but haven't quite finished) to work this way too because otherwise, the values are so small when determining where to project the starting values that binary math issues creep in and can make the tween appear to render incorrectly when run backwards. \n\t\t\t\t\t\tvar prevTime = this._totalTime;\n\t\t\t\t\t\tthis.render(0, true, false);\n\t\t\t\t\t\tthis._initted = false;\n\t\t\t\t\t\tthis.render(prevTime, true, false);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._initted = false;\n\t\t\t\t\t\tthis._init();\n\t\t\t\t\t\tif (this._time > 0 || immediate) {\n\t\t\t\t\t\t\tvar inv = 1 / (1 - curRatio),\n\t\t\t\t\t\t\t\tpt = this._firstPT, endValue;\n\t\t\t\t\t\t\twhile (pt) {\n\t\t\t\t\t\t\t\tendValue = pt.s + pt.c;\n\t\t\t\t\t\t\t\tpt.c *= inv;\n\t\t\t\t\t\t\t\tpt.s = endValue - pt.c;\n\t\t\t\t\t\t\t\tpt = pt._next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\t\t\t\t\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (!this._initted) if (this._duration === 0 && this.vars.repeat) { //zero duration tweens that render immediately have render() called from TweenLite's constructor, before TweenMax's constructor has finished setting _repeat, _repeatDelay, and _yoyo which are critical in determining totalDuration() so we need to call invalidate() which is a low-kb way to get those set properly.\n\t\t\t\tthis.invalidate();\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevTotalTime = this._totalTime, \n\t\t\t\tprevCycle = this._cycle,\n\t\t\t\tduration = this._duration,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, cycleDuration, r, type, pow, rawPrevTime;\n\t\t\tif (time >= totalDur - 0.0000001 && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tthis._totalTime = totalDur;\n\t\t\t\tthis._cycle = this._repeat;\n\t\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\t\tthis._time = 0;\n\t\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = duration;\n\t\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t\t\t\t}\n\t\t\t\tif (!this._reversed) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tforce = (force || this._timeline.autoRemoveChildren); //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (this._startTime === this._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (prevRawPrevTime < 0 || (time <= 0 && time >= -0.0000001) || (prevRawPrevTime === _tinyNum && this.data !== \"isPause\")) if (prevRawPrevTime !== time) { //note: when this.data is \"isPause\", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\t\t\t\t\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = this._cycle = 0;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTotalTime !== 0 || (duration === 0 && prevRawPrevTime > 0)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!this._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = time;\n\t\t\t\tif (this._repeat !== 0) {\n\t\t\t\t\tcycleDuration = duration + this._repeatDelay;\n\t\t\t\t\tthis._cycle = (this._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but some browsers report it as 0.79999999!)\n\t\t\t\t\tif (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t\t\t\t\t\tthis._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t}\n\t\t\t\t\tthis._time = this._totalTime - (this._cycle * cycleDuration);\n\t\t\t\t\tif (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t\t\t\t\t\tthis._time = duration - this._time;\n\t\t\t\t\t}\n\t\t\t\t\tif (this._time > duration) {\n\t\t\t\t\t\tthis._time = duration;\n\t\t\t\t\t} else if (this._time < 0) {\n\t\t\t\t\t\tthis._time = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._easeType) {\n\t\t\t\t\tr = this._time / duration;\n\t\t\t\t\ttype = this._easeType;\n\t\t\t\t\tpow = this._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (type === 1) {\n\t\t\t\t\t\tthis.ratio = 1 - r;\n\t\t\t\t\t} else if (type === 2) {\n\t\t\t\t\t\tthis.ratio = r;\n\t\t\t\t\t} else if (this._time / duration < 0.5) {\n\t\t\t\t\t\tthis.ratio = r / 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ratio = 1 - (r / 2);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t\tif (prevTime === this._time && !force && prevCycle === this._cycle) {\n\t\t\t\tif (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._init();\n\t\t\t\tif (!this._initted || this._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && this._firstPT && ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration))) { //we stick it in the queue for rendering at the very end of the tick - this is a performance optimization because browsers invalidate styles and force a recalculation if you read, write, and then read style data (so it's better to read/read/read/write/write/write than read/write/read/write/read/write). The down side, of course, is that usually you WANT things to render immediately because you may have code running right after that which depends on the change. Like imagine running TweenLite.set(...) and then immediately after that, creating a nother tween that animates the same property to another value; the starting values of that 2nd tween wouldn't be accurate if lazy is true.\n\t\t\t\t\tthis._time = prevTime;\n\t\t\t\t\tthis._totalTime = prevTotalTime;\n\t\t\t\t\tthis._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\tthis._cycle = prevCycle;\n\t\t\t\t\tTweenLiteInternals.lazyTweens.push(this);\n\t\t\t\t\tthis._lazy = [time, suppressEvents];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (this._time && !isComplete) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t} else if (isComplete && this._ease._calcEnd) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio((this._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._lazy !== false) {\n\t\t\t\tthis._lazy = false;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t\t\t\tthis._active = true; //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTotalTime === 0) {\n\t\t\t\tif (this._initted === 2 && time > 0) {\n\t\t\t\t\t//this.invalidate();\n\t\t\t\t\tthis._init(); //will just apply overwriting since _initted of (2) means it was a from() tween that had immediateRender:true\n\t\t\t\t}\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.onStart) if (this._totalTime !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tthis._callback(\"onStart\");\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * this.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\t\n\t\t\tif (this._onUpdate) {\n\t\t\t\tif (time < 0) if (this._startAt && this._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (this._totalTime !== prevTotalTime || callback) {\n\t\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._cycle !== prevCycle) if (!suppressEvents) if (!this._gc) if (this.vars.onRepeat) {\n\t\t\t\tthis._callback(\"onRepeat\");\n\t\t\t}\n\t\t\tif (callback) if (!this._gc || force) { //check gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && this._startAt && !this._onUpdate && this._startTime) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis._callback(callback);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tthis._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n//---- STATIC FUNCTIONS -----------------------------------------------------------------------------------------------------------\n\t\t\n\t\tTweenMax.to = function(target, duration, vars) {\n\t\t\treturn new TweenMax(target, duration, vars);\n\t\t};\n\t\t\n\t\tTweenMax.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenMax(target, duration, vars);\n\t\t};\n\t\t\n\t\tTweenMax.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenMax(target, duration, toVars);\n\t\t};\n\t\t\n\t\tTweenMax.staggerTo = TweenMax.allTo = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tstagger = stagger || 0;\n\t\t\tvar delay = 0,\n\t\t\t\ta = [],\n\t\t\t\tfinalComplete = function() {\n\t\t\t\t\tif (vars.onComplete) {\n\t\t\t\t\t\tvars.onComplete.apply(vars.onCompleteScope || this, arguments);\n\t\t\t\t\t}\n\t\t\t\t\tonCompleteAll.apply(onCompleteAllScope || vars.callbackScope || this, onCompleteAllParams || _blankArray);\n\t\t\t\t},\n\t\t\t\tcycle = vars.cycle,\n\t\t\t\tfromCycle = (vars.startAt && vars.startAt.cycle),\n\t\t\t\tl, copy, i, p;\n\t\t\tif (!_isArray(targets)) {\n\t\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t\t}\n\t\t\t\tif (_isSelector(targets)) {\n\t\t\t\t\ttargets = _slice(targets);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttargets = targets || [];\n\t\t\tif (stagger < 0) {\n\t\t\t\ttargets = _slice(targets);\n\t\t\t\ttargets.reverse();\n\t\t\t\tstagger *= -1;\n\t\t\t}\n\t\t\tl = targets.length - 1;\n\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\tcopy = {};\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\tif (cycle) {\n\t\t\t\t\t_applyCycle(copy, targets, i);\n\t\t\t\t\tif (copy.duration != null) {\n\t\t\t\t\t\tduration = copy.duration;\n\t\t\t\t\t\tdelete copy.duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (fromCycle) {\n\t\t\t\t\tfromCycle = copy.startAt = {};\n\t\t\t\t\tfor (p in vars.startAt) {\n\t\t\t\t\t\tfromCycle[p] = vars.startAt[p];\n\t\t\t\t\t}\n\t\t\t\t\t_applyCycle(copy.startAt, targets, i);\n\t\t\t\t}\n\t\t\t\tcopy.delay = delay + (copy.delay || 0);\n\t\t\t\tif (i === l && onCompleteAll) {\n\t\t\t\t\tcopy.onComplete = finalComplete;\n\t\t\t\t}\n\t\t\t\ta[i] = new TweenMax(targets[i], duration, copy);\n\t\t\t\tdelay += stagger;\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\t\t\n\t\tTweenMax.staggerFrom = TweenMax.allFrom = function(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn TweenMax.staggerTo(targets, duration, vars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\t\t\n\t\tTweenMax.staggerFromTo = TweenMax.allFromTo = function(targets, duration, fromVars, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn TweenMax.staggerTo(targets, duration, toVars, stagger, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\t\t\t\t\n\t\tTweenMax.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenMax(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, callbackScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, immediateRender:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\t\t\n\t\tTweenMax.set = function(target, vars) {\n\t\t\treturn new TweenMax(target, 0, vars);\n\t\t};\n\t\t\n\t\tTweenMax.isTweening = function(target) {\n\t\t\treturn (TweenLite.getTweensOf(target, true).length > 0);\n\t\t};\n\t\t\n\t\tvar _getChildrenOf = function(timeline, includeTimelines) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tcnt = 0,\n\t\t\t\t\ttween = timeline._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tif (tween instanceof TweenLite) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (includeTimelines) {\n\t\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ta = a.concat(_getChildrenOf(tween, includeTimelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t}, \n\t\t\tgetAllTweens = TweenMax.getAllTweens = function(includeTimelines) {\n\t\t\t\treturn _getChildrenOf(Animation._rootTimeline, includeTimelines).concat( _getChildrenOf(Animation._rootFramesTimeline, includeTimelines) );\n\t\t\t};\n\t\t\n\t\tTweenMax.killAll = function(complete, tweens, delayedCalls, timelines) {\n\t\t\tif (tweens == null) {\n\t\t\t\ttweens = true;\n\t\t\t}\n\t\t\tif (delayedCalls == null) {\n\t\t\t\tdelayedCalls = true;\n\t\t\t}\n\t\t\tvar a = getAllTweens((timelines != false)),\n\t\t\t\tl = a.length,\n\t\t\t\tallTrue = (tweens && delayedCalls && timelines),\n\t\t\t\tisDC, tween, i;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = a[i];\n\t\t\t\tif (allTrue || (tween instanceof SimpleTimeline) || ((isDC = (tween.target === tween.vars.onComplete)) && delayedCalls) || (tweens && !isDC)) {\n\t\t\t\t\tif (complete) {\n\t\t\t\t\t\ttween.totalTime(tween._reversed ? 0 : tween.totalDuration());\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tTweenMax.killChildTweensOf = function(parent, complete) {\n\t\t\tif (parent == null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar tl = TweenLiteInternals.tweenLookup,\n\t\t\t\ta, curParent, p, i, l;\n\t\t\tif (typeof(parent) === \"string\") {\n\t\t\t\tparent = TweenLite.selector(parent) || parent;\n\t\t\t}\n\t\t\tif (_isSelector(parent)) {\n\t\t\t\tparent = _slice(parent);\n\t\t\t}\n\t\t\tif (_isArray(parent)) {\n\t\t\t\ti = parent.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tTweenMax.killChildTweensOf(parent[i], complete);\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ta = [];\n\t\t\tfor (p in tl) {\n\t\t\t\tcurParent = tl[p].target.parentNode;\n\t\t\t\twhile (curParent) {\n\t\t\t\t\tif (curParent === parent) {\n\t\t\t\t\t\ta = a.concat(tl[p].tweens);\n\t\t\t\t\t}\n\t\t\t\t\tcurParent = curParent.parentNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tl = a.length;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (complete) {\n\t\t\t\t\ta[i].totalTime(a[i].totalDuration());\n\t\t\t\t}\n\t\t\t\ta[i]._enabled(false, false);\n\t\t\t}\n\t\t};\n\n\t\tvar _changePause = function(pause, tweens, delayedCalls, timelines) {\n\t\t\ttweens = (tweens !== false);\n\t\t\tdelayedCalls = (delayedCalls !== false);\n\t\t\ttimelines = (timelines !== false);\n\t\t\tvar a = getAllTweens(timelines),\n\t\t\t\tallTrue = (tweens && delayedCalls && timelines),\n\t\t\t\ti = a.length,\n\t\t\t\tisDC, tween;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttween = a[i];\n\t\t\t\tif (allTrue || (tween instanceof SimpleTimeline) || ((isDC = (tween.target === tween.vars.onComplete)) && delayedCalls) || (tweens && !isDC)) {\n\t\t\t\t\ttween.paused(pause);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\t\n\t\tTweenMax.pauseAll = function(tweens, delayedCalls, timelines) {\n\t\t\t_changePause(true, tweens, delayedCalls, timelines);\n\t\t};\n\t\t\n\t\tTweenMax.resumeAll = function(tweens, delayedCalls, timelines) {\n\t\t\t_changePause(false, tweens, delayedCalls, timelines);\n\t\t};\n\n\t\tTweenMax.globalTimeScale = function(value) {\n\t\t\tvar tl = Animation._rootTimeline,\n\t\t\t\tt = TweenLite.ticker.time;\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn tl._timeScale;\n\t\t\t}\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\ttl._startTime = t - ((t - tl._startTime) * tl._timeScale / value);\n\t\t\ttl = Animation._rootFramesTimeline;\n\t\t\tt = TweenLite.ticker.frame;\n\t\t\ttl._startTime = t - ((t - tl._startTime) * tl._timeScale / value);\n\t\t\ttl._timeScale = Animation._rootTimeline._timeScale = value;\n\t\t\treturn value;\n\t\t};\n\t\t\n\t\n//---- GETTERS / SETTERS ----------------------------------------------------------------------------------------------------------\n\t\t\n\t\tp.progress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? this._time / this.duration() : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), suppressEvents);\n\t\t};\n\t\t\n\t\tp.totalProgress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? this._totalTime / this.totalDuration() : this.totalTime( this.totalDuration() * value, suppressEvents);\n\t\t};\n\t\t\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tif (value > this._duration) {\n\t\t\t\tvalue = this._duration;\n\t\t\t}\n\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\tvalue = (this._duration - value) + (this._cycle * (this._duration + this._repeatDelay));\n\t\t\t} else if (this._repeat !== 0) {\n\t\t\t\tvalue += this._cycle * (this._duration + this._repeatDelay);\n\t\t\t}\n\t\t\treturn this.totalTime(value, suppressEvents);\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._duration; //don't set _dirty = false because there could be repeats that haven't been factored into the _totalDuration yet. Otherwise, if you create a repeated TweenMax and then immediately check its duration(), it would cache the value and the totalDuration would not be correct, thus repeats wouldn't take effect.\n\t\t\t}\n\t\t\treturn Animation.prototype.duration.call(this, value);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\t//instead of Infinity, we use 999999999999 so that we can accommodate reverses\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t\tthis._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1) ? this : this.duration( (value - (this._repeat * this._repeatDelay)) / (this._repeat + 1) );\n\t\t};\n\t\t\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\t\t\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\t\t\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\t\n\t\treturn TweenMax;\n\t\t\n\t}, true);\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * TimelineLite\n * ----------------------------------------------------------------\n */\n\t_gsScope._gsDefine(\"TimelineLite\", [\"core.Animation\",\"core.SimpleTimeline\",\"TweenLite\"], function(Animation, SimpleTimeline, TweenLite) {\n\n\t\tvar TimelineLite = function(vars) {\n\t\t\t\tSimpleTimeline.call(this, vars);\n\t\t\t\tthis._labels = {};\n\t\t\t\tthis.autoRemoveChildren = (this.vars.autoRemoveChildren === true);\n\t\t\t\tthis.smoothChildTiming = (this.vars.smoothChildTiming === true);\n\t\t\t\tthis._sortChildren = true;\n\t\t\t\tthis._onUpdate = this.vars.onUpdate;\n\t\t\t\tvar v = this.vars,\n\t\t\t\t\tval, p;\n\t\t\t\tfor (p in v) {\n\t\t\t\t\tval = v[p];\n\t\t\t\t\tif (_isArray(val)) if (val.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tv[p] = this._swapSelfInParams(val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (_isArray(v.tweens)) {\n\t\t\t\t\tthis.add(v.tweens, 0, v.align, v.stagger);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_internals = TimelineLite._internals = {},\n\t\t\t_isSelector = TweenLiteInternals.isSelector,\n\t\t\t_isArray = TweenLiteInternals.isArray,\n\t\t\t_lazyTweens = TweenLiteInternals.lazyTweens,\n\t\t\t_lazyRender = TweenLiteInternals.lazyRender,\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\t_copy = function(vars) {\n\t\t\t\tvar copy = {}, p;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tcopy[p] = vars[p];\n\t\t\t\t}\n\t\t\t\treturn copy;\n\t\t\t},\n\t\t\t_applyCycle = function(vars, targets, i) {\n\t\t\t\tvar alt = vars.cycle,\n\t\t\t\t\tp, val;\n\t\t\t\tfor (p in alt) {\n\t\t\t\t\tval = alt[p];\n\t\t\t\t\tvars[p] = (typeof(val) === \"function\") ? val(i, targets[i]) : val[i % val.length];\n\t\t\t\t}\n\t\t\t\tdelete vars.cycle;\n\t\t\t},\n\t\t\t_pauseCallback = _internals.pauseCallback = function() {},\n\t\t\t_slice = function(a) { //don't use [].slice because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++]));\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\tp = TimelineLite.prototype = new SimpleTimeline();\n\n\t\tTimelineLite.version = \"1.19.1\";\n\t\tp.constructor = TimelineLite;\n\t\tp.kill()._gc = p._forcingPlayhead = p._hasPause = false;\n\n\t\t/* might use later...\n\t\t//translates a local time inside an animation to the corresponding time on the root/global timeline, factoring in all nesting and timeScales.\n\t\tfunction localToGlobal(time, animation) {\n\t\t\twhile (animation) {\n\t\t\t\ttime = (time / animation._timeScale) + animation._startTime;\n\t\t\t\tanimation = animation.timeline;\n\t\t\t}\n\t\t\treturn time;\n\t\t}\n\n\t\t//translates the supplied time on the root/global timeline into the corresponding local time inside a particular animation, factoring in all nesting and timeScales\n\t\tfunction globalToLocal(time, animation) {\n\t\t\tvar scale = 1;\n\t\t\ttime -= localToGlobal(0, animation);\n\t\t\twhile (animation) {\n\t\t\t\tscale *= animation._timeScale;\n\t\t\t\tanimation = animation.timeline;\n\t\t\t}\n\t\t\treturn time * scale;\n\t\t}\n\t\t*/\n\n\t\tp.to = function(target, duration, vars, position) {\n\t\t\tvar Engine = (vars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( new Engine(target, duration, vars), position) : this.set(target, vars, position);\n\t\t};\n\n\t\tp.from = function(target, duration, vars, position) {\n\t\t\treturn this.add( ((vars.repeat && _globals.TweenMax) || TweenLite).from(target, duration, vars), position);\n\t\t};\n\n\t\tp.fromTo = function(target, duration, fromVars, toVars, position) {\n\t\t\tvar Engine = (toVars.repeat && _globals.TweenMax) || TweenLite;\n\t\t\treturn duration ? this.add( Engine.fromTo(target, duration, fromVars, toVars), position) : this.set(target, toVars, position);\n\t\t};\n\n\t\tp.staggerTo = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvar tl = new TimelineLite({onComplete:onCompleteAll, onCompleteParams:onCompleteAllParams, callbackScope:onCompleteAllScope, smoothChildTiming:this.smoothChildTiming}),\n\t\t\t\tcycle = vars.cycle,\n\t\t\t\tcopy, i;\n\t\t\tif (typeof(targets) === \"string\") {\n\t\t\t\ttargets = TweenLite.selector(targets) || targets;\n\t\t\t}\n\t\t\ttargets = targets || [];\n\t\t\tif (_isSelector(targets)) { //senses if the targets object is a selector. If it is, we should translate it into an array.\n\t\t\t\ttargets = _slice(targets);\n\t\t\t}\n\t\t\tstagger = stagger || 0;\n\t\t\tif (stagger < 0) {\n\t\t\t\ttargets = _slice(targets);\n\t\t\t\ttargets.reverse();\n\t\t\t\tstagger *= -1;\n\t\t\t}\n\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\tcopy = _copy(vars);\n\t\t\t\tif (copy.startAt) {\n\t\t\t\t\tcopy.startAt = _copy(copy.startAt);\n\t\t\t\t\tif (copy.startAt.cycle) {\n\t\t\t\t\t\t_applyCycle(copy.startAt, targets, i);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (cycle) {\n\t\t\t\t\t_applyCycle(copy, targets, i);\n\t\t\t\t\tif (copy.duration != null) {\n\t\t\t\t\t\tduration = copy.duration;\n\t\t\t\t\t\tdelete copy.duration;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttl.to(targets[i], duration, copy, i * stagger);\n\t\t\t}\n\t\t\treturn this.add(tl, position);\n\t\t};\n\n\t\tp.staggerFrom = function(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\tvars.runBackwards = true;\n\t\t\treturn this.staggerTo(targets, duration, vars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.staggerFromTo = function(targets, duration, fromVars, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn this.staggerTo(targets, duration, toVars, stagger, position, onCompleteAll, onCompleteAllParams, onCompleteAllScope);\n\t\t};\n\n\t\tp.call = function(callback, params, scope, position) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.set = function(target, vars, position) {\n\t\t\tposition = this._parseTimeOrLabel(position, 0, true);\n\t\t\tif (vars.immediateRender == null) {\n\t\t\t\tvars.immediateRender = (position === this._time && !this._paused);\n\t\t\t}\n\t\t\treturn this.add( new TweenLite(target, 0, vars), position);\n\t\t};\n\n\t\tTimelineLite.exportRoot = function(vars, ignoreDelayedCalls) {\n\t\t\tvars = vars || {};\n\t\t\tif (vars.smoothChildTiming == null) {\n\t\t\t\tvars.smoothChildTiming = true;\n\t\t\t}\n\t\t\tvar tl = new TimelineLite(vars),\n\t\t\t\troot = tl._timeline,\n\t\t\t\ttween, next;\n\t\t\tif (ignoreDelayedCalls == null) {\n\t\t\t\tignoreDelayedCalls = true;\n\t\t\t}\n\t\t\troot._remove(tl, true);\n\t\t\ttl._startTime = 0;\n\t\t\ttl._rawPrevTime = tl._time = tl._totalTime = root._time;\n\t\t\ttween = root._first;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next;\n\t\t\t\tif (!ignoreDelayedCalls || !(tween instanceof TweenLite && tween.target === tween.vars.onComplete)) {\n\t\t\t\t\ttl.add(tween, tween._startTime - tween._delay);\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t\troot.add(tl, 0);\n\t\t\treturn tl;\n\t\t};\n\n\t\tp.add = function(value, position, align, stagger) {\n\t\t\tvar curTime, l, i, child, tl, beforeRawTime;\n\t\t\tif (typeof(position) !== \"number\") {\n\t\t\t\tposition = this._parseTimeOrLabel(position, 0, true, value);\n\t\t\t}\n\t\t\tif (!(value instanceof Animation)) {\n\t\t\t\tif ((value instanceof Array) || (value && value.push && _isArray(value))) {\n\t\t\t\t\talign = align || \"normal\";\n\t\t\t\t\tstagger = stagger || 0;\n\t\t\t\t\tcurTime = position;\n\t\t\t\t\tl = value.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif (_isArray(child = value[i])) {\n\t\t\t\t\t\t\tchild = new TimelineLite({tweens:child});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.add(child, curTime);\n\t\t\t\t\t\tif (typeof(child) !== \"string\" && typeof(child) !== \"function\") {\n\t\t\t\t\t\t\tif (align === \"sequence\") {\n\t\t\t\t\t\t\t\tcurTime = child._startTime + (child.totalDuration() / child._timeScale);\n\t\t\t\t\t\t\t} else if (align === \"start\") {\n\t\t\t\t\t\t\t\tchild._startTime -= child.delay();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcurTime += stagger;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._uncache(true);\n\t\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\t\treturn this.addLabel(value, position);\n\t\t\t\t} else if (typeof(value) === \"function\") {\n\t\t\t\t\tvalue = TweenLite.delayedCall(0, value);\n\t\t\t\t} else {\n\t\t\t\t\tthrow(\"Cannot add \" + value + \" into the timeline; it is not a tween, timeline, function, or string.\");\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tSimpleTimeline.prototype.add.call(this, value, position);\n\n\t\t\t//if the timeline has already ended but the inserted tween/timeline extends the duration, we should enable this timeline again so that it renders properly. We should also align the playhead with the parent timeline's when appropriate.\n\t\t\tif (this._gc || this._time === this._duration) if (!this._paused) if (this._duration < this.duration()) {\n\t\t\t\t//in case any of the ancestors had completed but should now be enabled...\n\t\t\t\ttl = this;\n\t\t\t\tbeforeRawTime = (tl.rawTime() > value._startTime); //if the tween is placed on the timeline so that it starts BEFORE the current rawTime, we should align the playhead (move the timeline). This is because sometimes users will create a timeline, let it finish, and much later append a tween and expect it to run instead of jumping to its end state. While technically one could argue that it should jump to its end state, that's not what users intuitively expect.\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tif (beforeRawTime && tl._timeline.smoothChildTiming) {\n\t\t\t\t\t\ttl.totalTime(tl._totalTime, true); //moves the timeline (shifts its startTime) if necessary, and also enables it.\n\t\t\t\t\t} else if (tl._gc) {\n\t\t\t\t\t\ttl._enabled(true, false);\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t};\n\n\t\tp.remove = function(value) {\n\t\t\tif (value instanceof Animation) {\n\t\t\t\tthis._remove(value, false);\n\t\t\t\tvar tl = value._timeline = value.vars.useFrames ? Animation._rootFramesTimeline : Animation._rootTimeline; //now that it's removed, default it to the root timeline so that if it gets played again, it doesn't jump back into this timeline.\n\t\t\t\tvalue._startTime = (value._paused ? value._pauseTime : tl._time) - ((!value._reversed ? value._totalTime : value.totalDuration() - value._totalTime) / value._timeScale); //ensure that if it gets played again, the timing is correct.\n\t\t\t\treturn this;\n\t\t\t} else if (value instanceof Array || (value && value.push && _isArray(value))) {\n\t\t\t\tvar i = value.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tthis.remove(value[i]);\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t} else if (typeof(value) === \"string\") {\n\t\t\t\treturn this.removeLabel(value);\n\t\t\t}\n\t\t\treturn this.kill(null, value);\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tSimpleTimeline.prototype._remove.call(this, tween, skipDisable);\n\t\t\tvar last = this._last;\n\t\t\tif (!last) {\n\t\t\t\tthis._time = this._totalTime = this._duration = this._totalDuration = 0;\n\t\t\t} else if (this._time > this.duration()) {\n\t\t\t\tthis._time = this._duration;\n\t\t\t\tthis._totalTime = this._totalDuration;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.append = function(value, offsetOrLabel) {\n\t\t\treturn this.add(value, this._parseTimeOrLabel(null, offsetOrLabel, true, value));\n\t\t};\n\n\t\tp.insert = p.insertMultiple = function(value, position, align, stagger) {\n\t\t\treturn this.add(value, position || 0, align, stagger);\n\t\t};\n\n\t\tp.appendMultiple = function(tweens, offsetOrLabel, align, stagger) {\n\t\t\treturn this.add(tweens, this._parseTimeOrLabel(null, offsetOrLabel, true, tweens), align, stagger);\n\t\t};\n\n\t\tp.addLabel = function(label, position) {\n\t\t\tthis._labels[label] = this._parseTimeOrLabel(position);\n\t\t\treturn this;\n\t\t};\n\n\t\tp.addPause = function(position, callback, params, scope) {\n\t\t\tvar t = TweenLite.delayedCall(0, _pauseCallback, params, scope || this);\n\t\t\tt.vars.onComplete = t.vars.onReverseComplete = callback;\n\t\t\tt.data = \"isPause\";\n\t\t\tthis._hasPause = true;\n\t\t\treturn this.add(t, position);\n\t\t};\n\n\t\tp.removeLabel = function(label) {\n\t\t\tdelete this._labels[label];\n\t\t\treturn this;\n\t\t};\n\n\t\tp.getLabelTime = function(label) {\n\t\t\treturn (this._labels[label] != null) ? this._labels[label] : -1;\n\t\t};\n\n\t\tp._parseTimeOrLabel = function(timeOrLabel, offsetOrLabel, appendIfAbsent, ignore) {\n\t\t\tvar i;\n\t\t\t//if we're about to add a tween/timeline (or an array of them) that's already a child of this timeline, we should remove it first so that it doesn't contaminate the duration().\n\t\t\tif (ignore instanceof Animation && ignore.timeline === this) {\n\t\t\t\tthis.remove(ignore);\n\t\t\t} else if (ignore && ((ignore instanceof Array) || (ignore.push && _isArray(ignore)))) {\n\t\t\t\ti = ignore.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (ignore[i] instanceof Animation && ignore[i].timeline === this) {\n\t\t\t\t\t\tthis.remove(ignore[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (typeof(offsetOrLabel) === \"string\") {\n\t\t\t\treturn this._parseTimeOrLabel(offsetOrLabel, (appendIfAbsent && typeof(timeOrLabel) === \"number\" && this._labels[offsetOrLabel] == null) ? timeOrLabel - this.duration() : 0, appendIfAbsent);\n\t\t\t}\n\t\t\toffsetOrLabel = offsetOrLabel || 0;\n\t\t\tif (typeof(timeOrLabel) === \"string\" && (isNaN(timeOrLabel) || this._labels[timeOrLabel] != null)) { //if the string is a number like \"1\", check to see if there's a label with that name, otherwise interpret it as a number (absolute value).\n\t\t\t\ti = timeOrLabel.indexOf(\"=\");\n\t\t\t\tif (i === -1) {\n\t\t\t\t\tif (this._labels[timeOrLabel] == null) {\n\t\t\t\t\t\treturn appendIfAbsent ? (this._labels[timeOrLabel] = this.duration() + offsetOrLabel) : offsetOrLabel;\n\t\t\t\t\t}\n\t\t\t\t\treturn this._labels[timeOrLabel] + offsetOrLabel;\n\t\t\t\t}\n\t\t\t\toffsetOrLabel = parseInt(timeOrLabel.charAt(i-1) + \"1\", 10) * Number(timeOrLabel.substr(i+1));\n\t\t\t\ttimeOrLabel = (i > 1) ? this._parseTimeOrLabel(timeOrLabel.substr(0, i-1), 0, appendIfAbsent) : this.duration();\n\t\t\t} else if (timeOrLabel == null) {\n\t\t\t\ttimeOrLabel = this.duration();\n\t\t\t}\n\t\t\treturn Number(timeOrLabel) + offsetOrLabel;\n\t\t};\n\n\t\tp.seek = function(position, suppressEvents) {\n\t\t\treturn this.totalTime((typeof(position) === \"number\") ? position : this._parseTimeOrLabel(position), (suppressEvents !== false));\n\t\t};\n\n\t\tp.stop = function() {\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.gotoAndPlay = function(position, suppressEvents) {\n\t\t\treturn this.play(position, suppressEvents);\n\t\t};\n\n\t\tp.gotoAndStop = function(position, suppressEvents) {\n\t\t\treturn this.pause(position, suppressEvents);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevStart = this._startTime,\n\t\t\t\tprevTimeScale = this._timeScale,\n\t\t\t\tprevPaused = this._paused,\n\t\t\t\ttween, isComplete, next, callback, internalForce, pauseTween, curTime;\n\t\t\tif (time >= totalDur - 0.0000001 && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tthis._totalTime = this._time = totalDur;\n\t\t\t\tif (!this._reversed) if (!this._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tinternalForce = !!this._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t\tif (this._duration === 0) if ((time <= 0 && time >= -0.0000001) || this._rawPrevTime < 0 || this._rawPrevTime === _tinyNum) if (this._rawPrevTime !== time && this._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (this._rawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\ttime = totalDur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7.\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = 0;\n\t\t\t\tif (prevTime !== 0 || (this._duration === 0 && this._rawPrevTime !== _tinyNum && (this._rawPrevTime > 0 || (time < 0 && this._rawPrevTime >= 0)))) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (this._timeline.autoRemoveChildren && this._reversed) { //ensures proper GC if a timeline is resumed after it's finished reversing.\n\t\t\t\t\t\tinternalForce = isComplete = true;\n\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t} else if (this._rawPrevTime >= 0 && this._first) { //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\tif (time === 0 && isComplete) { //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).\n\t\t\t\t\t\ttween = this._first;\n\t\t\t\t\t\twhile (tween && tween._startTime === 0) {\n\t\t\t\t\t\t\tif (!tween._duration) {\n\t\t\t\t\t\t\t\tisComplete = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!this._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif (this._hasPause && !this._forcingPlayhead && !suppressEvents) {\n\t\t\t\t\tif (time >= prevTime) {\n\t\t\t\t\t\ttween = this._first;\n\t\t\t\t\t\twhile (tween && tween._startTime <= time && !pauseTween) {\n\t\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween = this._last;\n\t\t\t\t\t\twhile (tween && tween._startTime >= time && !pauseTween) {\n\t\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pauseTween) {\n\t\t\t\t\t\tthis._time = time = pauseTween._startTime;\n\t\t\t\t\t\tthis._totalTime = time + (this._cycle * (this._totalDuration + this._repeatDelay));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\t}\n\t\t\tif ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._initted = true;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time > 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTime === 0) if (this.vars.onStart) if (this._time !== 0 || !this._duration) if (!suppressEvents) {\n\t\t\t\tthis._callback(\"onStart\");\n\t\t\t}\n\n\t\t\tcurTime = this._time;\n\t\t\tif (curTime >= prevTime) {\n\t\t\t\ttween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== this._time || (this._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= curTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = this._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== this._time || (this._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tpauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.\n\t\t\t\t\t\t\twhile (pauseTween && pauseTween.endTime() > this._time) {\n\t\t\t\t\t\t\t\tpauseTween.render( (pauseTween._reversed ? pauseTween.totalDuration() - ((time - pauseTween._startTime) * pauseTween._timeScale) : (time - pauseTween._startTime) * pauseTween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t\t\tpauseTween = pauseTween._prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpauseTween = null;\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._onUpdate) if (!suppressEvents) {\n\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t}\n\n\t\t\tif (callback) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis._callback(callback);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._hasPausedChild = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._paused || ((tween instanceof TimelineLite) && tween._hasPausedChild())) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.getChildren = function(nested, tweens, timelines, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || -9999999999;\n\t\t\tvar a = [],\n\t\t\t\ttween = this._first,\n\t\t\t\tcnt = 0;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime < ignoreBeforeTime) {\n\t\t\t\t\t//do nothing\n\t\t\t\t} else if (tween instanceof TweenLite) {\n\t\t\t\t\tif (tweens !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (timelines !== false) {\n\t\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t\t}\n\t\t\t\t\tif (nested !== false) {\n\t\t\t\t\t\ta = a.concat(tween.getChildren(true, tweens, timelines));\n\t\t\t\t\t\tcnt = a.length;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp.getTweensOf = function(target, nested) {\n\t\t\tvar disabled = this._gc,\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\ttweens, i;\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(true, true); //getTweensOf() filters out disabled tweens, and we have to mark them as _gc = true when the timeline completes in order to allow clean garbage collection, so temporarily re-enable the timeline here.\n\t\t\t}\n\t\t\ttweens = TweenLite.getTweensOf(target);\n\t\t\ti = tweens.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i].timeline === this || (nested && this._contains(tweens[i]))) {\n\t\t\t\t\ta[cnt++] = tweens[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (disabled) {\n\t\t\t\tthis._enabled(false, true);\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tp.recent = function() {\n\t\t\treturn this._recent;\n\t\t};\n\n\t\tp._contains = function(tween) {\n\t\t\tvar tl = tween.timeline;\n\t\t\twhile (tl) {\n\t\t\t\tif (tl === this) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\ttl = tl.timeline;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp.shiftChildren = function(amount, adjustLabels, ignoreBeforeTime) {\n\t\t\tignoreBeforeTime = ignoreBeforeTime || 0;\n\t\t\tvar tween = this._first,\n\t\t\t\tlabels = this._labels,\n\t\t\t\tp;\n\t\t\twhile (tween) {\n\t\t\t\tif (tween._startTime >= ignoreBeforeTime) {\n\t\t\t\t\ttween._startTime += amount;\n\t\t\t\t}\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\tif (adjustLabels) {\n\t\t\t\tfor (p in labels) {\n\t\t\t\t\tif (labels[p] >= ignoreBeforeTime) {\n\t\t\t\t\t\tlabels[p] += amount;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp._kill = function(vars, target) {\n\t\t\tif (!vars && !target) {\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\tvar tweens = (!target) ? this.getChildren(true, true, false) : this.getTweensOf(target),\n\t\t\t\ti = tweens.length,\n\t\t\t\tchanged = false;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (tweens[i]._kill(vars, target)) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.clear = function(labels) {\n\t\t\tvar tweens = this.getChildren(false, true, true),\n\t\t\t\ti = tweens.length;\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\twhile (--i > -1) {\n\t\t\t\ttweens[i]._enabled(false, false);\n\t\t\t}\n\t\t\tif (labels !== false) {\n\t\t\t\tthis._labels = {};\n\t\t\t}\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tvar tween = this._first;\n\t\t\twhile (tween) {\n\t\t\t\ttween.invalidate();\n\t\t\t\ttween = tween._next;\n\t\t\t}\n\t\t\treturn Animation.prototype.invalidate.call(this);;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (enabled === this._gc) {\n\t\t\t\tvar tween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\ttween._enabled(enabled, true);\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn SimpleTimeline.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t};\n\n\t\tp.totalTime = function(time, suppressEvents, uncapped) {\n\t\t\tthis._forcingPlayhead = true;\n\t\t\tvar val = Animation.prototype.totalTime.apply(this, arguments);\n\t\t\tthis._forcingPlayhead = false;\n\t\t\treturn val;\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tthis.totalDuration(); //just triggers recalculation\n\t\t\t\t}\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tif (this.duration() !== 0 && value !== 0) {\n\t\t\t\tthis.timeScale(this._duration / value);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tvar max = 0,\n\t\t\t\t\t\ttween = this._last,\n\t\t\t\t\t\tprevStart = 999999999999,\n\t\t\t\t\t\tprev, end;\n\t\t\t\t\twhile (tween) {\n\t\t\t\t\t\tprev = tween._prev; //record it here in case the tween changes position in the sequence...\n\t\t\t\t\t\tif (tween._dirty) {\n\t\t\t\t\t\t\ttween.totalDuration(); //could change the tween._startTime, so make sure the tween's cache is clean before analyzing it.\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime > prevStart && this._sortChildren && !tween._paused) { //in case one of the tweens shifted out of order, it needs to be re-inserted into the correct position in the sequence\n\t\t\t\t\t\t\tthis.add(tween, tween._startTime - tween._delay);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tprevStart = tween._startTime;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tween._startTime < 0 && !tween._paused) { //children aren't allowed to have negative startTimes unless smoothChildTiming is true, so adjust here if one is found.\n\t\t\t\t\t\t\tmax -= tween._startTime;\n\t\t\t\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\t\t\t\tthis._startTime += tween._startTime / this._timeScale;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.shiftChildren(-tween._startTime, false, -9999999999);\n\t\t\t\t\t\t\tprevStart = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tend = tween._startTime + (tween._totalDuration / tween._timeScale);\n\t\t\t\t\t\tif (end > max) {\n\t\t\t\t\t\t\tmax = end;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttween = prev;\n\t\t\t\t\t}\n\t\t\t\t\tthis._duration = this._totalDuration = max;\n\t\t\t\t\tthis._dirty = false;\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (value && this.totalDuration()) ? this.timeScale(this._totalDuration / value) : this;\n\t\t};\n\n\t\tp.paused = function(value) {\n\t\t\tif (!value) { //if there's a pause directly at the spot from where we're unpausing, skip it.\n\t\t\t\tvar tween = this._first,\n\t\t\t\t\ttime = this._time;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tif (tween._startTime === time && tween.data === \"isPause\") {\n\t\t\t\t\t\ttween._rawPrevTime = 0; //remember, _rawPrevTime is how zero-duration tweens/callbacks sense directionality and determine whether or not to fire. If _rawPrevTime is the same as _startTime on the next render, it won't fire.\n\t\t\t\t\t}\n\t\t\t\t\ttween = tween._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Animation.prototype.paused.apply(this, arguments);\n\t\t};\n\n\t\tp.usesFrames = function() {\n\t\t\tvar tl = this._timeline;\n\t\t\twhile (tl._timeline) {\n\t\t\t\ttl = tl._timeline;\n\t\t\t}\n\t\t\treturn (tl === Animation._rootFramesTimeline);\n\t\t};\n\n\t\tp.rawTime = function(wrapRepeats) {\n\t\t\treturn (wrapRepeats && (this._paused || (this._repeat && this.time() > 0 && this.totalProgress() < 1))) ? this._totalTime % (this._duration + this._repeatDelay) : this._paused ? this._totalTime : (this._timeline.rawTime(wrapRepeats) - this._startTime) * this._timeScale;\n\t\t};\n\n\t\treturn TimelineLite;\n\n\t}, true);\n\n\n\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * TimelineMax\n * ----------------------------------------------------------------\n */\n\t_gsScope._gsDefine(\"TimelineMax\", [\"TimelineLite\",\"TweenLite\",\"easing.Ease\"], function(TimelineLite, TweenLite, Ease) {\n\n\t\tvar TimelineMax = function(vars) {\n\t\t\t\tTimelineLite.call(this, vars);\n\t\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\t\tthis._cycle = 0;\n\t\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\t\tthis._dirty = true;\n\t\t\t},\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\tTweenLiteInternals = TweenLite._internals,\n\t\t\t_lazyTweens = TweenLiteInternals.lazyTweens,\n\t\t\t_lazyRender = TweenLiteInternals.lazyRender,\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\t_easeNone = new Ease(null, null, 1, 0),\n\t\t\tp = TimelineMax.prototype = new TimelineLite();\n\n\t\tp.constructor = TimelineMax;\n\t\tp.kill()._gc = false;\n\t\tTimelineMax.version = \"1.19.1\";\n\n\t\tp.invalidate = function() {\n\t\t\tthis._yoyo = (this.vars.yoyo === true);\n\t\t\tthis._repeat = this.vars.repeat || 0;\n\t\t\tthis._repeatDelay = this.vars.repeatDelay || 0;\n\t\t\tthis._uncache(true);\n\t\t\treturn TimelineLite.prototype.invalidate.call(this);\n\t\t};\n\n\t\tp.addCallback = function(callback, position, params, scope) {\n\t\t\treturn this.add( TweenLite.delayedCall(0, callback, params, scope), position);\n\t\t};\n\n\t\tp.removeCallback = function(callback, position) {\n\t\t\tif (callback) {\n\t\t\t\tif (position == null) {\n\t\t\t\t\tthis._kill(null, callback);\n\t\t\t\t} else {\n\t\t\t\t\tvar a = this.getTweensOf(callback, false),\n\t\t\t\t\t\ti = a.length,\n\t\t\t\t\t\ttime = this._parseTimeOrLabel(position);\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i]._startTime === time) {\n\t\t\t\t\t\t\ta[i]._enabled(false, false);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.removePause = function(position) {\n\t\t\treturn this.removeCallback(TimelineLite._internals.pauseCallback, position);\n\t\t};\n\n\t\tp.tweenTo = function(position, vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar copy = {ease:_easeNone, useFrames:this.usesFrames(), immediateRender:false},\n\t\t\t\tEngine = (vars.repeat && _globals.TweenMax) || TweenLite,\n\t\t\t\tduration, p, t;\n\t\t\tfor (p in vars) {\n\t\t\t\tcopy[p] = vars[p];\n\t\t\t}\n\t\t\tcopy.time = this._parseTimeOrLabel(position);\n\t\t\tduration = (Math.abs(Number(copy.time) - this._time) / this._timeScale) || 0.001;\n\t\t\tt = new Engine(this, duration, copy);\n\t\t\tcopy.onStart = function() {\n\t\t\t\tt.target.paused(true);\n\t\t\t\tif (t.vars.time !== t.target.time() && duration === t.duration()) { //don't make the duration zero - if it's supposed to be zero, don't worry because it's already initting the tween and will complete immediately, effectively making the duration zero anyway. If we make duration zero, the tween won't run at all.\n\t\t\t\t\tt.duration( Math.abs( t.vars.time - t.target.time()) / t.target._timeScale );\n\t\t\t\t}\n\t\t\t\tif (vars.onStart) { //in case the user had an onStart in the vars - we don't want to overwrite it.\n\t\t\t\t\tvars.onStart.apply(vars.onStartScope || vars.callbackScope || t, vars.onStartParams || []); //don't use t._callback(\"onStart\") or it'll point to the copy.onStart and we'll get a recursion error.\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn t;\n\t\t};\n\n\t\tp.tweenFromTo = function(fromPosition, toPosition, vars) {\n\t\t\tvars = vars || {};\n\t\t\tfromPosition = this._parseTimeOrLabel(fromPosition);\n\t\t\tvars.startAt = {onComplete:this.seek, onCompleteParams:[fromPosition], callbackScope:this};\n\t\t\tvars.immediateRender = (vars.immediateRender !== false);\n\t\t\tvar t = this.tweenTo(toPosition, vars);\n\t\t\treturn t.duration((Math.abs( t.vars.time - fromPosition) / this._timeScale) || 0.001);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tif (this._gc) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\tvar totalDur = (!this._dirty) ? this._totalDuration : this.totalDuration(),\n\t\t\t\tdur = this._duration,\n\t\t\t\tprevTime = this._time,\n\t\t\t\tprevTotalTime = this._totalTime,\n\t\t\t\tprevStart = this._startTime,\n\t\t\t\tprevTimeScale = this._timeScale,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tprevPaused = this._paused,\n\t\t\t\tprevCycle = this._cycle,\n\t\t\t\ttween, isComplete, next, callback, internalForce, cycleDuration, pauseTween, curTime;\n\t\t\tif (time >= totalDur - 0.0000001 && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = totalDur;\n\t\t\t\t\tthis._cycle = this._repeat;\n\t\t\t\t}\n\t\t\t\tif (!this._reversed) if (!this._hasPausedChild()) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tinternalForce = !!this._timeline.autoRemoveChildren; //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t\tif (this._duration === 0) if ((time <= 0 && time >= -0.0000001) || prevRawPrevTime < 0 || prevRawPrevTime === _tinyNum) if (prevRawPrevTime !== time && this._first) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._rawPrevTime = (this._duration || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\t\tthis._time = time = 0;\n\t\t\t\t} else {\n\t\t\t\t\tthis._time = dur;\n\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding errors - sometimes child tweens/timelines were not being fully completed (their progress might be 0.999999999999998 instead of 1 because when _time - tween._startTime is performed, floating point errors would return a value that was SLIGHTLY off). Try (999999999999.7 - 999999999999) * 1 = 0.699951171875 instead of 0.7. We cannot do less then 0.0001 because the same issue can occur when the duration is extremely large like 999999999999 in which case adding 0.00000001, for example, causes it to act like nothing was added.\n\t\t\t\t}\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = this._cycle = 0;\n\t\t\t\t}\n\t\t\t\tthis._time = 0;\n\t\t\t\tif (prevTime !== 0 || (dur === 0 && prevRawPrevTime !== _tinyNum && (prevRawPrevTime > 0 || (time < 0 && prevRawPrevTime >= 0)) && !this._locked)) { //edge case for checking time < 0 && prevRawPrevTime >= 0: a zero-duration fromTo() tween inside a zero-duration timeline (yeah, very rare)\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (this._timeline.autoRemoveChildren && this._reversed) {\n\t\t\t\t\t\tinternalForce = isComplete = true;\n\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t} else if (prevRawPrevTime >= 0 && this._first) { //when going back beyond the start, force a render so that zero-duration tweens that sit at the very beginning render their start values properly. Otherwise, if the parent timeline's playhead lands exactly at this timeline's startTime, and then moves backwards, the zero-duration tweens at the beginning would still be at their end state.\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = time;\n\t\t\t\t} else {\n\t\t\t\t\tthis._rawPrevTime = (dur || !suppressEvents || time || this._rawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration timeline or tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\tif (time === 0 && isComplete) { //if there's a zero-duration tween at the very beginning of a timeline and the playhead lands EXACTLY at time 0, that tween will correctly render its end values, but we need to keep the timeline alive for one more render so that the beginning values render properly as the parent's playhead keeps moving beyond the begining. Imagine obj.x starts at 0 and then we do tl.set(obj, {x:100}).to(obj, 1, {x:200}) and then later we tl.reverse()...the goal is to have obj.x revert to 0. If the playhead happens to land on exactly 0, without this chunk of code, it'd complete the timeline and remove it from the rendering queue (not good).\n\t\t\t\t\t\ttween = this._first;\n\t\t\t\t\t\twhile (tween && tween._startTime === 0) {\n\t\t\t\t\t\t\tif (!tween._duration) {\n\t\t\t\t\t\t\t\tisComplete = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttime = 0; //to avoid occasional floating point rounding errors (could cause problems especially with zero-duration tweens at the very beginning of the timeline)\n\t\t\t\t\tif (!this._initted) {\n\t\t\t\t\t\tinternalForce = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tif (dur === 0 && prevRawPrevTime < 0) { //without this, zero-duration repeating timelines (like with a simple callback nested at the very beginning and a repeatDelay) wouldn't render the first time through.\n\t\t\t\t\tinternalForce = true;\n\t\t\t\t}\n\t\t\t\tthis._time = this._rawPrevTime = time;\n\t\t\t\tif (!this._locked) {\n\t\t\t\t\tthis._totalTime = time;\n\t\t\t\t\tif (this._repeat !== 0) {\n\t\t\t\t\t\tcycleDuration = dur + this._repeatDelay;\n\t\t\t\t\t\tthis._cycle = (this._totalTime / cycleDuration) >> 0; //originally _totalTime % cycleDuration but floating point errors caused problems, so I normalized it. (4 % 0.8 should be 0 but it gets reported as 0.79999999!)\n\t\t\t\t\t\tif (this._cycle !== 0) if (this._cycle === this._totalTime / cycleDuration && prevTotalTime <= time) {\n\t\t\t\t\t\t\tthis._cycle--; //otherwise when rendered exactly at the end time, it will act as though it is repeating (at the beginning)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._time = this._totalTime - (this._cycle * cycleDuration);\n\t\t\t\t\t\tif (this._yoyo) if ((this._cycle & 1) !== 0) {\n\t\t\t\t\t\t\tthis._time = dur - this._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (this._time > dur) {\n\t\t\t\t\t\t\tthis._time = dur;\n\t\t\t\t\t\t\ttime = dur + 0.0001; //to avoid occasional floating point rounding error\n\t\t\t\t\t\t} else if (this._time < 0) {\n\t\t\t\t\t\t\tthis._time = time = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttime = this._time;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (this._hasPause && !this._forcingPlayhead && !suppressEvents && time < dur) {\n\t\t\t\t\ttime = this._time;\n\t\t\t\t\tif (time >= prevTime || (this._repeat && prevCycle !== this._cycle)) {\n\t\t\t\t\t\ttween = this._first;\n\t\t\t\t\t\twhile (tween && tween._startTime <= time && !pauseTween) {\n\t\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && !tween.ratio && !(tween._startTime === 0 && this._rawPrevTime === 0)) {\n\t\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween = this._last;\n\t\t\t\t\t\twhile (tween && tween._startTime >= time && !pauseTween) {\n\t\t\t\t\t\t\tif (!tween._duration) if (tween.data === \"isPause\" && tween._rawPrevTime > 0) {\n\t\t\t\t\t\t\t\tpauseTween = tween;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttween = tween._prev;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (pauseTween) {\n\t\t\t\t\t\tthis._time = time = pauseTween._startTime;\n\t\t\t\t\t\tthis._totalTime = time + (this._cycle * (this._totalDuration + this._repeatDelay));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif (this._cycle !== prevCycle) if (!this._locked) {\n\t\t\t\t/*\n\t\t\t\tmake sure children at the end/beginning of the timeline are rendered properly. If, for example,\n\t\t\t\ta 3-second long timeline rendered at 2.9 seconds previously, and now renders at 3.2 seconds (which\n\t\t\t\twould get transated to 2.8 seconds if the timeline yoyos or 0.2 seconds if it just repeats), there\n\t\t\t\tcould be a callback or a short tween that's at 2.95 or 3 seconds in which wouldn't render. So\n\t\t\t\twe need to push the timeline to the end (and/or beginning depending on its yoyo value). Also we must\n\t\t\t\tensure that zero-duration tweens at the very beginning or end of the TimelineMax work.\n\t\t\t\t*/\n\t\t\t\tvar backwards = (this._yoyo && (prevCycle & 1) !== 0),\n\t\t\t\t\twrap = (backwards === (this._yoyo && (this._cycle & 1) !== 0)),\n\t\t\t\t\trecTotalTime = this._totalTime,\n\t\t\t\t\trecCycle = this._cycle,\n\t\t\t\t\trecRawPrevTime = this._rawPrevTime,\n\t\t\t\t\trecTime = this._time;\n\n\t\t\t\tthis._totalTime = prevCycle * dur;\n\t\t\t\tif (this._cycle < prevCycle) {\n\t\t\t\t\tbackwards = !backwards;\n\t\t\t\t} else {\n\t\t\t\t\tthis._totalTime += dur;\n\t\t\t\t}\n\t\t\t\tthis._time = prevTime; //temporarily revert _time so that render() renders the children in the correct order. Without this, tweens won't rewind correctly. We could arhictect things in a \"cleaner\" way by splitting out the rendering queue into a separate method but for performance reasons, we kept it all inside this method.\n\n\t\t\t\tthis._rawPrevTime = (dur === 0) ? prevRawPrevTime - 0.0001 : prevRawPrevTime;\n\t\t\t\tthis._cycle = prevCycle;\n\t\t\t\tthis._locked = true; //prevents changes to totalTime and skips repeat/yoyo behavior when we recursively call render()\n\t\t\t\tprevTime = (backwards) ? 0 : dur;\n\t\t\t\tthis.render(prevTime, suppressEvents, (dur === 0));\n\t\t\t\tif (!suppressEvents) if (!this._gc) {\n\t\t\t\t\tif (this.vars.onRepeat) {\n\t\t\t\t\t\tthis._cycle = recCycle; //in case the onRepeat alters the playhead or invalidates(), we shouldn't stay locked or use the previous cycle.\n\t\t\t\t\t\tthis._locked = false;\n\t\t\t\t\t\tthis._callback(\"onRepeat\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (prevTime !== this._time) { //in case there's a callback like onComplete in a nested tween/timeline that changes the playhead position, like via seek(), we should just abort.\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (wrap) {\n\t\t\t\t\tthis._cycle = prevCycle; //if there's an onRepeat, we reverted this above, so make sure it's set properly again. We also unlocked in that scenario, so reset that too.\n\t\t\t\t\tthis._locked = true;\n\t\t\t\t\tprevTime = (backwards) ? dur + 0.0001 : -0.0001;\n\t\t\t\t\tthis.render(prevTime, true, false);\n\t\t\t\t}\n\t\t\t\tthis._locked = false;\n\t\t\t\tif (this._paused && !prevPaused) { //if the render() triggered callback that paused this timeline, we should abort (very rare, but possible)\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis._time = recTime;\n\t\t\t\tthis._totalTime = recTotalTime;\n\t\t\t\tthis._cycle = recCycle;\n\t\t\t\tthis._rawPrevTime = recRawPrevTime;\n\t\t\t}\n\n\t\t\tif ((this._time === prevTime || !this._first) && !force && !internalForce && !pauseTween) {\n\t\t\t\tif (prevTotalTime !== this._totalTime) if (this._onUpdate) if (!suppressEvents) { //so that onUpdate fires even during the repeatDelay - as long as the totalTime changed, we should trigger onUpdate.\n\t\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._initted = true;\n\t\t\t}\n\n\t\t\tif (!this._active) if (!this._paused && this._totalTime !== prevTotalTime && time > 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders the timeline (as opposed to the parent timeline rendering it), it is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the timeline already finished but the user manually re-renders it as halfway done, for example.\n\t\t\t}\n\n\t\t\tif (prevTotalTime === 0) if (this.vars.onStart) if (this._totalTime !== 0 || !this._totalDuration) if (!suppressEvents) {\n\t\t\t\tthis._callback(\"onStart\");\n\t\t\t}\n\n\t\t\tcurTime = this._time;\n\t\t\tif (curTime >= prevTime) {\n\t\t\t\ttween = this._first;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== this._time || (this._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= this._time && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttween = this._last;\n\t\t\t\twhile (tween) {\n\t\t\t\t\tnext = tween._prev; //record it here because the value could change after rendering...\n\t\t\t\t\tif (curTime !== this._time || (this._paused && !prevPaused)) { //in case a tween pauses or seeks the timeline when rendering, like inside of an onUpdate/onComplete\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (tween._active || (tween._startTime <= prevTime && !tween._paused && !tween._gc)) {\n\t\t\t\t\t\tif (pauseTween === tween) {\n\t\t\t\t\t\t\tpauseTween = tween._prev; //the linked list is organized by _startTime, thus it's possible that a tween could start BEFORE the pause and end after it, in which case it would be positioned before the pause tween in the linked list, but we should render it before we pause() the timeline and cease rendering. This is only a concern when going in reverse.\n\t\t\t\t\t\t\twhile (pauseTween && pauseTween.endTime() > this._time) {\n\t\t\t\t\t\t\t\tpauseTween.render( (pauseTween._reversed ? pauseTween.totalDuration() - ((time - pauseTween._startTime) * pauseTween._timeScale) : (time - pauseTween._startTime) * pauseTween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t\t\tpauseTween = pauseTween._prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpauseTween = null;\n\t\t\t\t\t\t\tthis.pause();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttween = next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._onUpdate) if (!suppressEvents) {\n\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onUpdate on a timeline that reports/checks tweened values.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t}\n\t\t\tif (callback) if (!this._locked) if (!this._gc) if (prevStart === this._startTime || prevTimeScale !== this._timeScale) if (this._time === 0 || totalDur >= this.totalDuration()) { //if one of the tweens that was rendered altered this timeline's startTime (like if an onComplete reversed the timeline), it probably isn't complete. If it is, don't worry, because whatever call altered the startTime would complete if it was necessary at the new time. The only exception is the timeScale property. Also check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when a timeline finishes, users expect things to have rendered fully. Imagine an onComplete on a timeline that reports/checks tweened values.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis._callback(callback);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.getActive = function(nested, tweens, timelines) {\n\t\t\tif (nested == null) {\n\t\t\t\tnested = true;\n\t\t\t}\n\t\t\tif (tweens == null) {\n\t\t\t\ttweens = true;\n\t\t\t}\n\t\t\tif (timelines == null) {\n\t\t\t\ttimelines = false;\n\t\t\t}\n\t\t\tvar a = [],\n\t\t\t\tall = this.getChildren(nested, tweens, timelines),\n\t\t\t\tcnt = 0,\n\t\t\t\tl = all.length,\n\t\t\t\ti, tween;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\ttween = all[i];\n\t\t\t\tif (tween.isActive()) {\n\t\t\t\t\ta[cnt++] = tween;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\n\t\tp.getLabelAfter = function(time) {\n\t\t\tif (!time) if (time !== 0) { //faster than isNan()\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\tl = labels.length,\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\tif (labels[i].time > time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tp.getLabelBefore = function(time) {\n\t\t\tif (time == null) {\n\t\t\t\ttime = this._time;\n\t\t\t}\n\t\t\tvar labels = this.getLabelsArray(),\n\t\t\t\ti = labels.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (labels[i].time < time) {\n\t\t\t\t\treturn labels[i].name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\n\t\tp.getLabelsArray = function() {\n\t\t\tvar a = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tp;\n\t\t\tfor (p in this._labels) {\n\t\t\t\ta[cnt++] = {time:this._labels[p], name:p};\n\t\t\t}\n\t\t\ta.sort(function(a,b) {\n\t\t\t\treturn a.time - b.time;\n\t\t\t});\n\t\t\treturn a;\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tthis._locked = false; //unlock and set cycle in case invalidate() is called from inside an onRepeat\n\t\t\treturn TimelineLite.prototype.invalidate.call(this);\n\t\t};\n\n\n//---- GETTERS / SETTERS -------------------------------------------------------------------------------------------------------\n\n\t\tp.progress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? this._time / this.duration() : this.totalTime( this.duration() * ((this._yoyo && (this._cycle & 1) !== 0) ? 1 - value : value) + (this._cycle * (this._duration + this._repeatDelay)), suppressEvents);\n\t\t};\n\n\t\tp.totalProgress = function(value, suppressEvents) {\n\t\t\treturn (!arguments.length) ? this._totalTime / this.totalDuration() : this.totalTime( this.totalDuration() * value, suppressEvents);\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tif (this._dirty) {\n\t\t\t\t\tTimelineLite.prototype.totalDuration.call(this); //just forces refresh\n\t\t\t\t\t//Instead of Infinity, we use 999999999999 so that we can accommodate reverses.\n\t\t\t\t\tthis._totalDuration = (this._repeat === -1) ? 999999999999 : this._duration * (this._repeat + 1) + (this._repeatDelay * this._repeat);\n\t\t\t\t}\n\t\t\t\treturn this._totalDuration;\n\t\t\t}\n\t\t\treturn (this._repeat === -1 || !value) ? this : this.timeScale( this.totalDuration() / value );\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\tif (value > this._duration) {\n\t\t\t\tvalue = this._duration;\n\t\t\t}\n\t\t\tif (this._yoyo && (this._cycle & 1) !== 0) {\n\t\t\t\tvalue = (this._duration - value) + (this._cycle * (this._duration + this._repeatDelay));\n\t\t\t} else if (this._repeat !== 0) {\n\t\t\t\tvalue += this._cycle * (this._duration + this._repeatDelay);\n\t\t\t}\n\t\t\treturn this.totalTime(value, suppressEvents);\n\t\t};\n\n\t\tp.repeat = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeat;\n\t\t\t}\n\t\t\tthis._repeat = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.repeatDelay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._repeatDelay;\n\t\t\t}\n\t\t\tthis._repeatDelay = value;\n\t\t\treturn this._uncache(true);\n\t\t};\n\n\t\tp.yoyo = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._yoyo;\n\t\t\t}\n\t\t\tthis._yoyo = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.currentLabel = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this.getLabelBefore(this._time + 0.00000001);\n\t\t\t}\n\t\t\treturn this.seek(value, true);\n\t\t};\n\n\t\treturn TimelineMax;\n\n\t}, true);\n\t\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * BezierPlugin\n * ----------------------------------------------------------------\n */\n\t(function() {\n\n\t\tvar _RAD2DEG = 180 / Math.PI,\n\t\t\t_r1 = [],\n\t\t\t_r2 = [],\n\t\t\t_r3 = [],\n\t\t\t_corProps = {},\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\tSegment = function(a, b, c, d) {\n\t\t\t\tif (c === d) { //if c and d match, the final autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tc = d - (d - b) / 1000000;\n\t\t\t\t}\n\t\t\t\tif (a === b) { //if a and b match, the starting autoRotate value could lock at -90 degrees, so differentiate them slightly.\n\t\t\t\t\tb = a + (c - a) / 1000000;\n\t\t\t\t}\n\t\t\t\tthis.a = a;\n\t\t\t\tthis.b = b;\n\t\t\t\tthis.c = c;\n\t\t\t\tthis.d = d;\n\t\t\t\tthis.da = d - a;\n\t\t\t\tthis.ca = c - a;\n\t\t\t\tthis.ba = b - a;\n\t\t\t},\n\t\t\t_correlate = \",x,y,z,left,top,right,bottom,marginTop,marginLeft,marginRight,marginBottom,paddingLeft,paddingTop,paddingRight,paddingBottom,backgroundPosition,backgroundPosition_y,\",\n\t\t\tcubicToQuadratic = function(a, b, c, d) {\n\t\t\t\tvar q1 = {a:a},\n\t\t\t\t\tq2 = {},\n\t\t\t\t\tq3 = {},\n\t\t\t\t\tq4 = {c:d},\n\t\t\t\t\tmab = (a + b) / 2,\n\t\t\t\t\tmbc = (b + c) / 2,\n\t\t\t\t\tmcd = (c + d) / 2,\n\t\t\t\t\tmabc = (mab + mbc) / 2,\n\t\t\t\t\tmbcd = (mbc + mcd) / 2,\n\t\t\t\t\tm8 = (mbcd - mabc) / 8;\n\t\t\t\tq1.b = mab + (a - mab) / 4;\n\t\t\t\tq2.b = mabc + m8;\n\t\t\t\tq1.c = q2.a = (q1.b + q2.b) / 2;\n\t\t\t\tq2.c = q3.a = (mabc + mbcd) / 2;\n\t\t\t\tq3.b = mbcd - m8;\n\t\t\t\tq4.b = mcd + (d - mcd) / 4;\n\t\t\t\tq3.c = q4.a = (q3.b + q4.b) / 2;\n\t\t\t\treturn [q1, q2, q3, q4];\n\t\t\t},\n\t\t\t_calculateControlPoints = function(a, curviness, quad, basic, correlate) {\n\t\t\t\tvar l = a.length - 1,\n\t\t\t\t\tii = 0,\n\t\t\t\t\tcp1 = a[0].a,\n\t\t\t\t\ti, p1, p2, p3, seg, m1, m2, mm, cp2, qb, r1, r2, tl;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tseg = a[ii];\n\t\t\t\t\tp1 = seg.a;\n\t\t\t\t\tp2 = seg.d;\n\t\t\t\t\tp3 = a[ii+1].d;\n\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tr1 = _r1[i];\n\t\t\t\t\t\tr2 = _r2[i];\n\t\t\t\t\t\ttl = ((r2 + r1) * curviness * 0.25) / (basic ? 0.5 : _r3[i] || 0.5);\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * (basic ? curviness * 0.5 : (r1 !== 0 ? tl / r1 : 0));\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * (basic ? curviness * 0.5 : (r2 !== 0 ? tl / r2 : 0));\n\t\t\t\t\t\tmm = p2 - (m1 + (((m2 - m1) * ((r1 * 3 / (r1 + r2)) + 0.5) / 4) || 0));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tm1 = p2 - (p2 - p1) * curviness * 0.5;\n\t\t\t\t\t\tm2 = p2 + (p3 - p2) * curviness * 0.5;\n\t\t\t\t\t\tmm = p2 - (m1 + m2) / 2;\n\t\t\t\t\t}\n\t\t\t\t\tm1 += mm;\n\t\t\t\t\tm2 += mm;\n\n\t\t\t\t\tseg.c = cp2 = m1;\n\t\t\t\t\tif (i !== 0) {\n\t\t\t\t\t\tseg.b = cp1;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tseg.b = cp1 = seg.a + (seg.c - seg.a) * 0.6; //instead of placing b on a exactly, we move it inline with c so that if the user specifies an ease like Back.easeIn or Elastic.easeIn which goes BEYOND the beginning, it will do so smoothly.\n\t\t\t\t\t}\n\n\t\t\t\t\tseg.da = p2 - p1;\n\t\t\t\t\tseg.ca = cp2 - p1;\n\t\t\t\t\tseg.ba = cp1 - p1;\n\n\t\t\t\t\tif (quad) {\n\t\t\t\t\t\tqb = cubicToQuadratic(p1, cp1, cp2, p2);\n\t\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t\t\tii += 4;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tii++;\n\t\t\t\t\t}\n\n\t\t\t\t\tcp1 = m2;\n\t\t\t\t}\n\t\t\t\tseg = a[ii];\n\t\t\t\tseg.b = cp1;\n\t\t\t\tseg.c = cp1 + (seg.d - cp1) * 0.4; //instead of placing c on d exactly, we move it inline with b so that if the user specifies an ease like Back.easeOut or Elastic.easeOut which goes BEYOND the end, it will do so smoothly.\n\t\t\t\tseg.da = seg.d - seg.a;\n\t\t\t\tseg.ca = seg.c - seg.a;\n\t\t\t\tseg.ba = cp1 - seg.a;\n\t\t\t\tif (quad) {\n\t\t\t\t\tqb = cubicToQuadratic(seg.a, cp1, seg.c, seg.d);\n\t\t\t\t\ta.splice(ii, 1, qb[0], qb[1], qb[2], qb[3]);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseAnchors = function(values, p, correlate, prepend) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tl, i, p1, p2, p3, tmp;\n\t\t\t\tif (prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t\ti = values.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (typeof( (tmp = values[i][p]) ) === \"string\") if (tmp.charAt(1) === \"=\") {\n\t\t\t\t\t\t\tvalues[i][p] = prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)); //accommodate relative values. Do it inline instead of breaking it out into a function for speed reasons\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tl = values.length - 2;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\ta[0] = new Segment(values[0][p], 0, 0, values[(l < -1) ? 0 : 1][p]);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tp1 = values[i][p];\n\t\t\t\t\tp2 = values[i+1][p];\n\t\t\t\t\ta[i] = new Segment(p1, 0, 0, p2);\n\t\t\t\t\tif (correlate) {\n\t\t\t\t\t\tp3 = values[i+2][p];\n\t\t\t\t\t\t_r1[i] = (_r1[i] || 0) + (p2 - p1) * (p2 - p1);\n\t\t\t\t\t\t_r2[i] = (_r2[i] || 0) + (p3 - p2) * (p3 - p2);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[i] = new Segment(values[i][p], 0, 0, values[i+1][p]);\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\tbezierThrough = function(values, curviness, quadratic, basic, correlate, prepend) {\n\t\t\t\tvar obj = {},\n\t\t\t\t\tprops = [],\n\t\t\t\t\tfirst = prepend || values[0],\n\t\t\t\t\ti, p, a, j, r, l, seamless, last;\n\t\t\t\tcorrelate = (typeof(correlate) === \"string\") ? \",\"+correlate+\",\" : _correlate;\n\t\t\t\tif (curviness == null) {\n\t\t\t\t\tcurviness = 1;\n\t\t\t\t}\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\t//check to see if the last and first values are identical (well, within 0.05). If so, make seamless by appending the second element to the very end of the values array and the 2nd-to-last element to the very beginning (we'll remove those segments later)\n\t\t\t\tif (values.length > 1) {\n\t\t\t\t\tlast = values[values.length - 1];\n\t\t\t\t\tseamless = true;\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = props[i];\n\t\t\t\t\t\tif (Math.abs(first[p] - last[p]) > 0.05) { //build in a tolerance of +/-0.05 to accommodate rounding errors.\n\t\t\t\t\t\t\tseamless = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\tvalues = values.concat(); //duplicate the array to avoid contaminating the original which the user may be reusing for other tweens\n\t\t\t\t\t\tif (prepend) {\n\t\t\t\t\t\t\tvalues.unshift(prepend);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvalues.push(values[1]);\n\t\t\t\t\t\tprepend = values[values.length - 3];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_r1.length = _r2.length = _r3.length = 0;\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\t_corProps[p] = (correlate.indexOf(\",\"+p+\",\") !== -1);\n\t\t\t\t\tobj[p] = _parseAnchors(values, p, _corProps[p], prepend);\n\t\t\t\t}\n\t\t\t\ti = _r1.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t_r1[i] = Math.sqrt(_r1[i]);\n\t\t\t\t\t_r2[i] = Math.sqrt(_r2[i]);\n\t\t\t\t}\n\t\t\t\tif (!basic) {\n\t\t\t\t\ti = props.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (_corProps[p]) {\n\t\t\t\t\t\t\ta = obj[props[i]];\n\t\t\t\t\t\t\tl = a.length - 1;\n\t\t\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\t\t\tr = (a[j+1].da / _r2[j] + a[j].da / _r1[j]) || 0;\n\t\t\t\t\t\t\t\t_r3[j] = (_r3[j] || 0) + r * r;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ti = _r3.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_r3[i] = Math.sqrt(_r3[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\tj = quadratic ? 4 : 1;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\ta = obj[p];\n\t\t\t\t\t_calculateControlPoints(a, curviness, quadratic, basic, _corProps[p]); //this method requires that _parseAnchors() and _setSegmentRatios() ran first so that _r1, _r2, and _r3 values are populated for all properties\n\t\t\t\t\tif (seamless) {\n\t\t\t\t\t\ta.splice(0, j);\n\t\t\t\t\t\ta.splice(a.length - j, j);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_parseBezierData = function(values, type, prepend) {\n\t\t\t\ttype = type || \"soft\";\n\t\t\t\tvar obj = {},\n\t\t\t\t\tinc = (type === \"cubic\") ? 3 : 2,\n\t\t\t\t\tsoft = (type === \"soft\"),\n\t\t\t\t\tprops = [],\n\t\t\t\t\ta, b, c, d, cur, i, j, l, p, cnt, tmp;\n\t\t\t\tif (soft && prepend) {\n\t\t\t\t\tvalues = [prepend].concat(values);\n\t\t\t\t}\n\t\t\t\tif (values == null || values.length < inc + 1) { throw \"invalid Bezier data\"; }\n\t\t\t\tfor (p in values[0]) {\n\t\t\t\t\tprops.push(p);\n\t\t\t\t}\n\t\t\t\ti = props.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tp = props[i];\n\t\t\t\t\tobj[p] = cur = [];\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tl = values.length;\n\t\t\t\t\tfor (j = 0; j < l; j++) {\n\t\t\t\t\t\ta = (prepend == null) ? values[j][p] : (typeof( (tmp = values[j][p]) ) === \"string\" && tmp.charAt(1) === \"=\") ? prepend[p] + Number(tmp.charAt(0) + tmp.substr(2)) : Number(tmp);\n\t\t\t\t\t\tif (soft) if (j > 1) if (j < l - 1) {\n\t\t\t\t\t\t\tcur[cnt++] = (a + cur[cnt-2]) / 2;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcur[cnt++] = a;\n\t\t\t\t\t}\n\t\t\t\t\tl = cnt - inc + 1;\n\t\t\t\t\tcnt = 0;\n\t\t\t\t\tfor (j = 0; j < l; j += inc) {\n\t\t\t\t\t\ta = cur[j];\n\t\t\t\t\t\tb = cur[j+1];\n\t\t\t\t\t\tc = cur[j+2];\n\t\t\t\t\t\td = (inc === 2) ? 0 : cur[j+3];\n\t\t\t\t\t\tcur[cnt++] = tmp = (inc === 3) ? new Segment(a, b, c, d) : new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t\t\t\t}\n\t\t\t\t\tcur.length = cnt;\n\t\t\t\t}\n\t\t\t\treturn obj;\n\t\t\t},\n\t\t\t_addCubicLengths = function(a, steps, resolution) {\n\t\t\t\tvar inc = 1 / resolution,\n\t\t\t\t\tj = a.length,\n\t\t\t\t\td, d1, s, da, ca, ba, p, i, inv, bez, index;\n\t\t\t\twhile (--j > -1) {\n\t\t\t\t\tbez = a[j];\n\t\t\t\t\ts = bez.a;\n\t\t\t\t\tda = bez.d - s;\n\t\t\t\t\tca = bez.c - s;\n\t\t\t\t\tba = bez.b - s;\n\t\t\t\t\td = d1 = 0;\n\t\t\t\t\tfor (i = 1; i <= resolution; i++) {\n\t\t\t\t\t\tp = inc * i;\n\t\t\t\t\t\tinv = 1 - p;\n\t\t\t\t\t\td = d1 - (d1 = (p * p * da + 3 * inv * (p * ca + inv * ba)) * p);\n\t\t\t\t\t\tindex = j * resolution + i - 1;\n\t\t\t\t\t\tsteps[index] = (steps[index] || 0) + d * d;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_parseLengthData = function(obj, resolution) {\n\t\t\t\tresolution = resolution >> 0 || 6;\n\t\t\t\tvar a = [],\n\t\t\t\t\tlengths = [],\n\t\t\t\t\td = 0,\n\t\t\t\t\ttotal = 0,\n\t\t\t\t\tthreshold = resolution - 1,\n\t\t\t\t\tsegments = [],\n\t\t\t\t\tcurLS = [], //current length segments array\n\t\t\t\t\tp, i, l, index;\n\t\t\t\tfor (p in obj) {\n\t\t\t\t\t_addCubicLengths(obj[p], a, resolution);\n\t\t\t\t}\n\t\t\t\tl = a.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\td += Math.sqrt(a[i]);\n\t\t\t\t\tindex = i % resolution;\n\t\t\t\t\tcurLS[index] = d;\n\t\t\t\t\tif (index === threshold) {\n\t\t\t\t\t\ttotal += d;\n\t\t\t\t\t\tindex = (i / resolution) >> 0;\n\t\t\t\t\t\tsegments[index] = curLS;\n\t\t\t\t\t\tlengths[index] = total;\n\t\t\t\t\t\td = 0;\n\t\t\t\t\t\tcurLS = [];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {length:total, lengths:lengths, segments:segments};\n\t\t\t},\n\n\n\n\t\t\tBezierPlugin = _gsScope._gsDefine.plugin({\n\t\t\t\t\tpropName: \"bezier\",\n\t\t\t\t\tpriority: -1,\n\t\t\t\t\tversion: \"1.3.7\",\n\t\t\t\t\tAPI: 2,\n\t\t\t\t\tglobal:true,\n\n\t\t\t\t\t//gets called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\t\tinit: function(target, vars, tween) {\n\t\t\t\t\t\tthis._target = target;\n\t\t\t\t\t\tif (vars instanceof Array) {\n\t\t\t\t\t\t\tvars = {values:vars};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._func = {};\n\t\t\t\t\t\tthis._mod = {};\n\t\t\t\t\t\tthis._props = [];\n\t\t\t\t\t\tthis._timeRes = (vars.timeResolution == null) ? 6 : parseInt(vars.timeResolution, 10);\n\t\t\t\t\t\tvar values = vars.values || [],\n\t\t\t\t\t\t\tfirst = {},\n\t\t\t\t\t\t\tsecond = values[0],\n\t\t\t\t\t\t\tautoRotate = vars.autoRotate || tween.vars.orientToBezier,\n\t\t\t\t\t\t\tp, isFunc, i, j, prepend;\n\n\t\t\t\t\t\tthis._autoRotate = autoRotate ? (autoRotate instanceof Array) ? autoRotate : [[\"x\",\"y\",\"rotation\",((autoRotate === true) ? 0 : Number(autoRotate) || 0)]] : null;\n\t\t\t\t\t\tfor (p in second) {\n\t\t\t\t\t\t\tthis._props.push(p);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\n\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\tisFunc = this._func[p] = (typeof(target[p]) === \"function\");\n\t\t\t\t\t\t\tfirst[p] = (!isFunc) ? parseFloat(target[p]) : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]();\n\t\t\t\t\t\t\tif (!prepend) if (first[p] !== values[0][p]) {\n\t\t\t\t\t\t\t\tprepend = first;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._beziers = (vars.type !== \"cubic\" && vars.type !== \"quadratic\" && vars.type !== \"soft\") ? bezierThrough(values, isNaN(vars.curviness) ? 1 : vars.curviness, false, (vars.type === \"thruBasic\"), vars.correlate, prepend) : _parseBezierData(values, vars.type, first);\n\t\t\t\t\t\tthis._segCount = this._beziers[p].length;\n\n\t\t\t\t\t\tif (this._timeRes) {\n\t\t\t\t\t\t\tvar ld = _parseLengthData(this._beziers, this._timeRes);\n\t\t\t\t\t\t\tthis._length = ld.length;\n\t\t\t\t\t\t\tthis._lengths = ld.lengths;\n\t\t\t\t\t\t\tthis._segments = ld.segments;\n\t\t\t\t\t\t\tthis._l1 = this._li = this._s1 = this._si = 0;\n\t\t\t\t\t\t\tthis._l2 = this._lengths[0];\n\t\t\t\t\t\t\tthis._curSeg = this._segments[0];\n\t\t\t\t\t\t\tthis._s2 = this._curSeg[0];\n\t\t\t\t\t\t\tthis._prec = 1 / this._curSeg.length;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((autoRotate = this._autoRotate)) {\n\t\t\t\t\t\t\tthis._initialRotations = [];\n\t\t\t\t\t\t\tif (!(autoRotate[0] instanceof Array)) {\n\t\t\t\t\t\t\t\tthis._autoRotate = autoRotate = [autoRotate];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ti = autoRotate.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tfor (j = 0; j < 3; j++) {\n\t\t\t\t\t\t\t\t\tp = autoRotate[i][j];\n\t\t\t\t\t\t\t\t\tthis._func[p] = (typeof(target[p]) === \"function\") ? target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ] : false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tp = autoRotate[i][2];\n\t\t\t\t\t\t\t\tthis._initialRotations[i] = (this._func[p] ? this._func[p].call(this._target) : this._target[p]) || 0;\n\t\t\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._startRatio = tween.vars.runBackwards ? 1 : 0; //we determine the starting ratio when the tween inits which is always 0 unless the tween has runBackwards:true (indicating it's a from() tween) in which case it's 1.\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\n\t\t\t\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\t\t\t\tset: function(v) {\n\t\t\t\t\t\tvar segments = this._segCount,\n\t\t\t\t\t\t\tfunc = this._func,\n\t\t\t\t\t\t\ttarget = this._target,\n\t\t\t\t\t\t\tnotStart = (v !== this._startRatio),\n\t\t\t\t\t\t\tcurIndex, inv, i, p, b, t, val, l, lengths, curSeg;\n\t\t\t\t\t\tif (!this._timeRes) {\n\t\t\t\t\t\t\tcurIndex = (v < 0) ? 0 : (v >= 1) ? segments - 1 : (segments * v) >> 0;\n\t\t\t\t\t\t\tt = (v - (curIndex * (1 / segments))) * segments;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlengths = this._lengths;\n\t\t\t\t\t\t\tcurSeg = this._curSeg;\n\t\t\t\t\t\t\tv *= this._length;\n\t\t\t\t\t\t\ti = this._li;\n\t\t\t\t\t\t\t//find the appropriate segment (if the currently cached one isn't correct)\n\t\t\t\t\t\t\tif (v > this._l2 && i < segments - 1) {\n\t\t\t\t\t\t\t\tl = segments - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._l2 = lengths[++i]) <= v) {\t}\n\t\t\t\t\t\t\t\tthis._l1 = lengths[i-1];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[(this._s1 = this._si = 0)];\n\t\t\t\t\t\t\t} else if (v < this._l1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._l1 = lengths[--i]) >= v) { }\n\t\t\t\t\t\t\t\tif (i === 0 && v < this._l1) {\n\t\t\t\t\t\t\t\t\tthis._l1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._l2 = lengths[i];\n\t\t\t\t\t\t\t\tthis._li = i;\n\t\t\t\t\t\t\t\tthis._curSeg = curSeg = this._segments[i];\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[(this._si = curSeg.length - 1) - 1] || 0;\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[this._si];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcurIndex = i;\n\t\t\t\t\t\t\t//now find the appropriate sub-segment (we split it into the number of pieces that was defined by \"precision\" and measured each one)\n\t\t\t\t\t\t\tv -= this._l1;\n\t\t\t\t\t\t\ti = this._si;\n\t\t\t\t\t\t\tif (v > this._s2 && i < curSeg.length - 1) {\n\t\t\t\t\t\t\t\tl = curSeg.length - 1;\n\t\t\t\t\t\t\t\twhile (i < l && (this._s2 = curSeg[++i]) <= v) {\t}\n\t\t\t\t\t\t\t\tthis._s1 = curSeg[i-1];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t} else if (v < this._s1 && i > 0) {\n\t\t\t\t\t\t\t\twhile (i > 0 && (this._s1 = curSeg[--i]) >= v) {\t}\n\t\t\t\t\t\t\t\tif (i === 0 && v < this._s1) {\n\t\t\t\t\t\t\t\t\tthis._s1 = 0;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis._s2 = curSeg[i];\n\t\t\t\t\t\t\t\tthis._si = i;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tt = ((i + (v - this._s1) / (this._s2 - this._s1)) * this._prec) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinv = 1 - t;\n\n\t\t\t\t\t\ti = this._props.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = this._props[i];\n\t\t\t\t\t\t\tb = this._beziers[p][curIndex];\n\t\t\t\t\t\t\tval = (t * t * b.da + 3 * inv * (t * b.ca + inv * b.ba)) * t + b.a;\n\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\tval = this._mod[p](val, target);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (this._autoRotate) {\n\t\t\t\t\t\t\tvar ar = this._autoRotate,\n\t\t\t\t\t\t\t\tb2, x1, y1, x2, y2, add, conv;\n\t\t\t\t\t\t\ti = ar.length;\n\t\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\t\tp = ar[i][2];\n\t\t\t\t\t\t\t\tadd = ar[i][3] || 0;\n\t\t\t\t\t\t\t\tconv = (ar[i][4] === true) ? 1 : _RAD2DEG;\n\t\t\t\t\t\t\t\tb = this._beziers[ar[i][0]];\n\t\t\t\t\t\t\t\tb2 = this._beziers[ar[i][1]];\n\n\t\t\t\t\t\t\t\tif (b && b2) { //in case one of the properties got overwritten.\n\t\t\t\t\t\t\t\t\tb = b[curIndex];\n\t\t\t\t\t\t\t\t\tb2 = b2[curIndex];\n\n\t\t\t\t\t\t\t\t\tx1 = b.a + (b.b - b.a) * t;\n\t\t\t\t\t\t\t\t\tx2 = b.b + (b.c - b.b) * t;\n\t\t\t\t\t\t\t\t\tx1 += (x2 - x1) * t;\n\t\t\t\t\t\t\t\t\tx2 += ((b.c + (b.d - b.c) * t) - x2) * t;\n\n\t\t\t\t\t\t\t\t\ty1 = b2.a + (b2.b - b2.a) * t;\n\t\t\t\t\t\t\t\t\ty2 = b2.b + (b2.c - b2.b) * t;\n\t\t\t\t\t\t\t\t\ty1 += (y2 - y1) * t;\n\t\t\t\t\t\t\t\t\ty2 += ((b2.c + (b2.d - b2.c) * t) - y2) * t;\n\n\t\t\t\t\t\t\t\t\tval = notStart ? Math.atan2(y2 - y1, x2 - x1) * conv + add : this._initialRotations[i];\n\n\t\t\t\t\t\t\t\t\tif (this._mod[p]) {\n\t\t\t\t\t\t\t\t\t\tval = this._mod[p](val, target); //for modProps\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (func[p]) {\n\t\t\t\t\t\t\t\t\t\ttarget[p](val);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\ttarget[p] = val;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}),\n\t\t\tp = BezierPlugin.prototype;\n\n\n\t\tBezierPlugin.bezierThrough = bezierThrough;\n\t\tBezierPlugin.cubicToQuadratic = cubicToQuadratic;\n\t\tBezierPlugin._autoCSS = true; //indicates that this plugin can be inserted into the \"css\" object using the autoCSS feature of TweenLite\n\t\tBezierPlugin.quadraticToCubic = function(a, b, c) {\n\t\t\treturn new Segment(a, (2 * b + a) / 3, (2 * b + c) / 3, c);\n\t\t};\n\n\t\tBezierPlugin._cssRegister = function() {\n\t\t\tvar CSSPlugin = _globals.CSSPlugin;\n\t\t\tif (!CSSPlugin) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar _internals = CSSPlugin._internals,\n\t\t\t\t_parseToProxy = _internals._parseToProxy,\n\t\t\t\t_setPluginRatio = _internals._setPluginRatio,\n\t\t\t\tCSSPropTween = _internals.CSSPropTween;\n\t\t\t_internals._registerComplexSpecialProp(\"bezier\", {parser:function(t, e, prop, cssp, pt, plugin) {\n\t\t\t\tif (e instanceof Array) {\n\t\t\t\t\te = {values:e};\n\t\t\t\t}\n\t\t\t\tplugin = new BezierPlugin();\n\t\t\t\tvar values = e.values,\n\t\t\t\t\tl = values.length - 1,\n\t\t\t\t\tpluginValues = [],\n\t\t\t\t\tv = {},\n\t\t\t\t\ti, p, data;\n\t\t\t\tif (l < 0) {\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t\tfor (i = 0; i <= l; i++) {\n\t\t\t\t\tdata = _parseToProxy(t, values[i], cssp, pt, plugin, (l !== i));\n\t\t\t\t\tpluginValues[i] = data.end;\n\t\t\t\t}\n\t\t\t\tfor (p in e) {\n\t\t\t\t\tv[p] = e[p]; //duplicate the vars object because we need to alter some things which would cause problems if the user plans to reuse the same vars object for another tween.\n\t\t\t\t}\n\t\t\t\tv.values = pluginValues;\n\t\t\t\tpt = new CSSPropTween(t, \"bezier\", 0, 0, data.pt, 2);\n\t\t\t\tpt.data = data;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setPluginRatio;\n\t\t\t\tif (v.autoRotate === 0) {\n\t\t\t\t\tv.autoRotate = true;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate && !(v.autoRotate instanceof Array)) {\n\t\t\t\t\ti = (v.autoRotate === true) ? 0 : Number(v.autoRotate);\n\t\t\t\t\tv.autoRotate = (data.end.left != null) ? [[\"left\",\"top\",\"rotation\",i,false]] : (data.end.x != null) ? [[\"x\",\"y\",\"rotation\",i,false]] : false;\n\t\t\t\t}\n\t\t\t\tif (v.autoRotate) {\n\t\t\t\t\tif (!cssp._transform) {\n\t\t\t\t\t\tcssp._enableTransforms(false);\n\t\t\t\t\t}\n\t\t\t\t\tdata.autoRotate = cssp._target._gsTransform;\n\t\t\t\t\tdata.proxy.rotation = data.autoRotate.rotation || 0;\n\t\t\t\t\tcssp._overwriteProps.push(\"rotation\");\n\t\t\t\t}\n\t\t\t\tplugin._onInitTween(data.proxy, v, cssp._tween);\n\t\t\t\treturn pt;\n\t\t\t}});\n\t\t};\n\n\t\tp._mod = function(lookup) {\n\t\t\tvar op = this._overwriteProps,\n\t\t\t\ti = op.length,\n\t\t\t\tval;\n\t\t\twhile (--i > -1) {\n\t\t\t\tval = lookup[op[i]];\n\t\t\t\tif (val && typeof(val) === \"function\") {\n\t\t\t\t\tthis._mod[op[i]] = val;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._props,\n\t\t\t\tp, i;\n\t\t\tfor (p in this._beziers) {\n\t\t\t\tif (p in lookup) {\n\t\t\t\t\tdelete this._beziers[p];\n\t\t\t\t\tdelete this._func[p];\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (a[i] === p) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\ta = this._autoRotate;\n\t\t\tif (a) {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i][2]]) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._super._kill.call(this, lookup);\n\t\t};\n\n\t}());\n\n\n\n\n\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * CSSPlugin\n * ----------------------------------------------------------------\n */\n\t_gsScope._gsDefine(\"plugins.CSSPlugin\", [\"plugins.TweenPlugin\",\"TweenLite\"], function(TweenPlugin, TweenLite) {\n\n\t\t/** @constructor **/\n\t\tvar CSSPlugin = function() {\n\t\t\t\tTweenPlugin.call(this, \"css\");\n\t\t\t\tthis._overwriteProps.length = 0;\n\t\t\t\tthis.setRatio = CSSPlugin.prototype.setRatio; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\t\t\t},\n\t\t\t_globals = _gsScope._gsDefine.globals,\n\t\t\t_hasPriority, //turns true whenever a CSSPropTween instance is created that has a priority other than 0. This helps us discern whether or not we should spend the time organizing the linked list or not after a CSSPlugin's _onInitTween() method is called.\n\t\t\t_suffixMap, //we set this in _onInitTween() each time as a way to have a persistent variable we can use in other methods like _parse() without having to pass it around as a parameter and we keep _parse() decoupled from a particular CSSPlugin instance\n\t\t\t_cs, //computed style (we store this in a shared variable to conserve memory and make minification tighter\n\t\t\t_overwriteProps, //alias to the currently instantiating CSSPlugin's _overwriteProps array. We use this closure in order to avoid having to pass a reference around from method to method and aid in minification.\n\t\t\t_specialProps = {},\n\t\t\tp = CSSPlugin.prototype = new TweenPlugin(\"css\");\n\n\t\tp.constructor = CSSPlugin;\n\t\tCSSPlugin.version = \"1.19.1\";\n\t\tCSSPlugin.API = 2;\n\t\tCSSPlugin.defaultTransformPerspective = 0;\n\t\tCSSPlugin.defaultSkewType = \"compensated\";\n\t\tCSSPlugin.defaultSmoothOrigin = true;\n\t\tp = \"px\"; //we'll reuse the \"p\" variable to keep file size down\n\t\tCSSPlugin.suffixMap = {top:p, right:p, bottom:p, left:p, width:p, height:p, fontSize:p, padding:p, margin:p, perspective:p, lineHeight:\"\"};\n\n\n\t\tvar _numExp = /(?:\\-|\\.|\\b)(\\d|\\.|e\\-)+/g,\n\t\t\t_relNumExp = /(?:\\d|\\-\\d|\\.\\d|\\-\\.\\d|\\+=\\d|\\-=\\d|\\+=.\\d|\\-=\\.\\d)+/g,\n\t\t\t_valuesExp = /(?:\\+=|\\-=|\\-|\\b)[\\d\\-\\.]+[a-zA-Z0-9]*(?:%|\\b)/gi, //finds all the values that begin with numbers or += or -= and then a number. Includes suffixes. We use this to split complex values apart like \"1px 5px 20px rgb(255,102,51)\"\n\t\t\t_NaNExp = /(?![+-]?\\d*\\.?\\d+|[+-]|e[+-]\\d+)[^0-9]/g, //also allows scientific notation and doesn't kill the leading -/+ in -= and +=\n\t\t\t_suffixExp = /(?:\\d|\\-|\\+|=|#|\\.)*/g,\n\t\t\t_opacityExp = /opacity *= *([^)]*)/i,\n\t\t\t_opacityValExp = /opacity:([^;]*)/i,\n\t\t\t_alphaFilterExp = /alpha\\(opacity *=.+?\\)/i,\n\t\t\t_rgbhslExp = /^(rgb|hsl)/,\n\t\t\t_capsExp = /([A-Z])/g,\n\t\t\t_camelExp = /-([a-z])/gi,\n\t\t\t_urlExp = /(^(?:url\\(\\\"|url\\())|(?:(\\\"\\))$|\\)$)/gi, //for pulling out urls from url(...) or url(\"...\") strings (some browsers wrap urls in quotes, some don't when reporting things like backgroundImage)\n\t\t\t_camelFunc = function(s, g) { return g.toUpperCase(); },\n\t\t\t_horizExp = /(?:Left|Right|Width)/i,\n\t\t\t_ieGetMatrixExp = /(M11|M12|M21|M22)=[\\d\\-\\.e]+/gi,\n\t\t\t_ieSetMatrixExp = /progid\\:DXImageTransform\\.Microsoft\\.Matrix\\(.+?\\)/i,\n\t\t\t_commasOutsideParenExp = /,(?=[^\\)]*(?:\\(|$))/gi, //finds any commas that are not within parenthesis\n\t\t\t_complexExp = /[\\s,\\(]/i, //for testing a string to find if it has a space, comma, or open parenthesis (clues that it's a complex value)\n\t\t\t_DEG2RAD = Math.PI / 180,\n\t\t\t_RAD2DEG = 180 / Math.PI,\n\t\t\t_forcePT = {},\n\t\t\t_dummyElement = {style:{}},\n\t\t\t_doc = _gsScope.document || {createElement: function() {return _dummyElement;}},\n\t\t\t_createElement = function(type, ns) {\n\t\t\t\treturn _doc.createElementNS ? _doc.createElementNS(ns || \"http://www.w3.org/1999/xhtml\", type) : _doc.createElement(type);\n\t\t\t},\n\t\t\t_tempDiv = _createElement(\"div\"),\n\t\t\t_tempImg = _createElement(\"img\"),\n\t\t\t_internals = CSSPlugin._internals = {_specialProps:_specialProps}, //provides a hook to a few internal methods that we need to access from inside other plugins\n\t\t\t_agent = (_gsScope.navigator || {}).userAgent || \"\",\n\t\t\t_autoRound,\n\t\t\t_reqSafariFix, //we won't apply the Safari transform fix until we actually come across a tween that affects a transform property (to maintain best performance).\n\n\t\t\t_isSafari,\n\t\t\t_isFirefox, //Firefox has a bug that causes 3D transformed elements to randomly disappear unless a repaint is forced after each update on each element.\n\t\t\t_isSafariLT6, //Safari (and Android 4 which uses a flavor of Safari) has a bug that prevents changes to \"top\" and \"left\" properties from rendering properly if changed on the same frame as a transform UNLESS we set the element's WebkitBackfaceVisibility to hidden (weird, I know). Doing this for Android 3 and earlier seems to actually cause other problems, though (fun!)\n\t\t\t_ieVers,\n\t\t\t_supportsOpacity = (function() { //we set _isSafari, _ieVers, _isFirefox, and _supportsOpacity all in one function here to reduce file size slightly, especially in the minified version.\n\t\t\t\tvar i = _agent.indexOf(\"Android\"),\n\t\t\t\t\ta = _createElement(\"a\");\n\t\t\t\t_isSafari = (_agent.indexOf(\"Safari\") !== -1 && _agent.indexOf(\"Chrome\") === -1 && (i === -1 || parseFloat(_agent.substr(i+8, 2)) > 3));\n\t\t\t\t_isSafariLT6 = (_isSafari && (parseFloat(_agent.substr(_agent.indexOf(\"Version/\")+8, 2)) < 6));\n\t\t\t\t_isFirefox = (_agent.indexOf(\"Firefox\") !== -1);\n\t\t\t\tif ((/MSIE ([0-9]{1,}[\\.0-9]{0,})/).exec(_agent) || (/Trident\\/.*rv:([0-9]{1,}[\\.0-9]{0,})/).exec(_agent)) {\n\t\t\t\t\t_ieVers = parseFloat( RegExp.$1 );\n\t\t\t\t}\n\t\t\t\tif (!a) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\ta.style.cssText = \"top:1px;opacity:.55;\";\n\t\t\t\treturn /^0.55/.test(a.style.opacity);\n\t\t\t}()),\n\t\t\t_getIEOpacity = function(v) {\n\t\t\t\treturn (_opacityExp.test( ((typeof(v) === \"string\") ? v : (v.currentStyle ? v.currentStyle.filter : v.style.filter) || \"\") ) ? ( parseFloat( RegExp.$1 ) / 100 ) : 1);\n\t\t\t},\n\t\t\t_log = function(s) {//for logging messages, but in a way that won't throw errors in old versions of IE.\n\t\t\t\tif (_gsScope.console) {\n\t\t\t\t\tconsole.log(s);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_target, //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params\n\t\t\t_index, //when initting a CSSPlugin, we set this variable so that we can access it from within many other functions without having to pass it around as params\n\n\t\t\t_prefixCSS = \"\", //the non-camelCase vendor prefix like \"-o-\", \"-moz-\", \"-ms-\", or \"-webkit-\"\n\t\t\t_prefix = \"\", //camelCase vendor prefix like \"O\", \"ms\", \"Webkit\", or \"Moz\".\n\n\t\t\t// @private feed in a camelCase property name like \"transform\" and it will check to see if it is valid as-is or if it needs a vendor prefix. It returns the corrected camelCase property name (i.e. \"WebkitTransform\" or \"MozTransform\" or \"transform\" or null if no such property is found, like if the browser is IE8 or before, \"transform\" won't be found at all)\n\t\t\t_checkPropPrefix = function(p, e) {\n\t\t\t\te = e || _tempDiv;\n\t\t\t\tvar s = e.style,\n\t\t\t\t\ta, i;\n\t\t\t\tif (s[p] !== undefined) {\n\t\t\t\t\treturn p;\n\t\t\t\t}\n\t\t\t\tp = p.charAt(0).toUpperCase() + p.substr(1);\n\t\t\t\ta = [\"O\",\"Moz\",\"ms\",\"Ms\",\"Webkit\"];\n\t\t\t\ti = 5;\n\t\t\t\twhile (--i > -1 && s[a[i]+p] === undefined) { }\n\t\t\t\tif (i >= 0) {\n\t\t\t\t\t_prefix = (i === 3) ? \"ms\" : a[i];\n\t\t\t\t\t_prefixCSS = \"-\" + _prefix.toLowerCase() + \"-\";\n\t\t\t\t\treturn _prefix + p;\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t},\n\n\t\t\t_getComputedStyle = _doc.defaultView ? _doc.defaultView.getComputedStyle : function() {},\n\n\t\t\t/**\n\t\t\t * @private Returns the css style for a particular property of an element. For example, to get whatever the current \"left\" css value for an element with an ID of \"myElement\", you could do:\n\t\t\t * var currentLeft = CSSPlugin.getStyle( document.getElementById(\"myElement\"), \"left\");\n\t\t\t *\n\t\t\t * @param {!Object} t Target element whose style property you want to query\n\t\t\t * @param {!string} p Property name (like \"left\" or \"top\" or \"marginTop\", etc.)\n\t\t\t * @param {Object=} cs Computed style object. This just provides a way to speed processing if you're going to get several properties on the same element in quick succession - you can reuse the result of the getComputedStyle() call.\n\t\t\t * @param {boolean=} calc If true, the value will not be read directly from the element's \"style\" property (if it exists there), but instead the getComputedStyle() result will be used. This can be useful when you want to ensure that the browser itself is interpreting the value.\n\t\t\t * @param {string=} dflt Default value that should be returned in the place of null, \"none\", \"auto\" or \"auto auto\".\n\t\t\t * @return {?string} The current property value\n\t\t\t */\n\t\t\t_getStyle = CSSPlugin.getStyle = function(t, p, cs, calc, dflt) {\n\t\t\t\tvar rv;\n\t\t\t\tif (!_supportsOpacity) if (p === \"opacity\") { //several versions of IE don't use the standard \"opacity\" property - they use things like filter:alpha(opacity=50), so we parse that here.\n\t\t\t\t\treturn _getIEOpacity(t);\n\t\t\t\t}\n\t\t\t\tif (!calc && t.style[p]) {\n\t\t\t\t\trv = t.style[p];\n\t\t\t\t} else if ((cs = cs || _getComputedStyle(t))) {\n\t\t\t\t\trv = cs[p] || cs.getPropertyValue(p) || cs.getPropertyValue(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t} else if (t.currentStyle) {\n\t\t\t\t\trv = t.currentStyle[p];\n\t\t\t\t}\n\t\t\t\treturn (dflt != null && (!rv || rv === \"none\" || rv === \"auto\" || rv === \"auto auto\")) ? dflt : rv;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Pass the target element, the property name, the numeric value, and the suffix (like \"%\", \"em\", \"px\", etc.) and it will spit back the equivalent pixel number.\n\t\t\t * @param {!Object} t Target element\n\t\t\t * @param {!string} p Property name (like \"left\", \"top\", \"marginLeft\", etc.)\n\t\t\t * @param {!number} v Value\n\t\t\t * @param {string=} sfx Suffix (like \"px\" or \"%\" or \"em\")\n\t\t\t * @param {boolean=} recurse If true, the call is a recursive one. In some browsers (like IE7/8), occasionally the value isn't accurately reported initially, but if we run the function again it will take effect.\n\t\t\t * @return {number} value in pixels\n\t\t\t */\n\t\t\t_convertToPixels = _internals.convertToPixels = function(t, p, v, sfx, recurse) {\n\t\t\t\tif (sfx === \"px\" || !sfx) { return v; }\n\t\t\t\tif (sfx === \"auto\" || !v) { return 0; }\n\t\t\t\tvar horiz = _horizExp.test(p),\n\t\t\t\t\tnode = t,\n\t\t\t\t\tstyle = _tempDiv.style,\n\t\t\t\t\tneg = (v < 0),\n\t\t\t\t\tprecise = (v === 1),\n\t\t\t\t\tpix, cache, time;\n\t\t\t\tif (neg) {\n\t\t\t\t\tv = -v;\n\t\t\t\t}\n\t\t\t\tif (precise) {\n\t\t\t\t\tv *= 100;\n\t\t\t\t}\n\t\t\t\tif (sfx === \"%\" && p.indexOf(\"border\") !== -1) {\n\t\t\t\t\tpix = (v / 100) * (horiz ? t.clientWidth : t.clientHeight);\n\t\t\t\t} else {\n\t\t\t\t\tstyle.cssText = \"border:0 solid red;position:\" + _getStyle(t, \"position\") + \";line-height:0;\";\n\t\t\t\t\tif (sfx === \"%\" || !node.appendChild || sfx.charAt(0) === \"v\" || sfx === \"rem\") {\n\t\t\t\t\t\tnode = t.parentNode || _doc.body;\n\t\t\t\t\t\tcache = node._gsCache;\n\t\t\t\t\t\ttime = TweenLite.ticker.frame;\n\t\t\t\t\t\tif (cache && horiz && cache.time === time) { //performance optimization: we record the width of elements along with the ticker frame so that we can quickly get it again on the same tick (seems relatively safe to assume it wouldn't change on the same tick)\n\t\t\t\t\t\t\treturn cache.width * v / 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle[(horiz ? \"width\" : \"height\")] = v + sfx;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle[(horiz ? \"borderLeftWidth\" : \"borderTopWidth\")] = v + sfx;\n\t\t\t\t\t}\n\t\t\t\t\tnode.appendChild(_tempDiv);\n\t\t\t\t\tpix = parseFloat(_tempDiv[(horiz ? \"offsetWidth\" : \"offsetHeight\")]);\n\t\t\t\t\tnode.removeChild(_tempDiv);\n\t\t\t\t\tif (horiz && sfx === \"%\" && CSSPlugin.cacheWidths !== false) {\n\t\t\t\t\t\tcache = node._gsCache = node._gsCache || {};\n\t\t\t\t\t\tcache.time = time;\n\t\t\t\t\t\tcache.width = pix / v * 100;\n\t\t\t\t\t}\n\t\t\t\t\tif (pix === 0 && !recurse) {\n\t\t\t\t\t\tpix = _convertToPixels(t, p, v, sfx, true);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (precise) {\n\t\t\t\t\tpix /= 100;\n\t\t\t\t}\n\t\t\t\treturn neg ? -pix : pix;\n\t\t\t},\n\t\t\t_calculateOffset = _internals.calculateOffset = function(t, p, cs) { //for figuring out \"top\" or \"left\" in px when it's \"auto\". We need to factor in margin with the offsetLeft/offsetTop\n\t\t\t\tif (_getStyle(t, \"position\", cs) !== \"absolute\") { return 0; }\n\t\t\t\tvar dim = ((p === \"left\") ? \"Left\" : \"Top\"),\n\t\t\t\t\tv = _getStyle(t, \"margin\" + dim, cs);\n\t\t\t\treturn t[\"offset\" + dim] - (_convertToPixels(t, p, parseFloat(v), v.replace(_suffixExp, \"\")) || 0);\n\t\t\t},\n\n\t\t\t// @private returns at object containing ALL of the style properties in camelCase and their associated values.\n\t\t\t_getAllStyles = function(t, cs) {\n\t\t\t\tvar s = {},\n\t\t\t\t\ti, tr, p;\n\t\t\t\tif ((cs = cs || _getComputedStyle(t, null))) {\n\t\t\t\t\tif ((i = cs.length)) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tp = cs[i];\n\t\t\t\t\t\t\tif (p.indexOf(\"-transform\") === -1 || _transformPropCSS === p) { //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed (\"transform\" and \"WebkitTransform\"), so we must weed out the extra one here.\n\t\t\t\t\t\t\t\ts[p.replace(_camelExp, _camelFunc)] = cs.getPropertyValue(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else { //some browsers behave differently - cs.length is always 0, so we must do a for...in loop.\n\t\t\t\t\t\tfor (i in cs) {\n\t\t\t\t\t\t\tif (i.indexOf(\"Transform\") === -1 || _transformProp === i) { //Some webkit browsers duplicate transform values, one non-prefixed and one prefixed (\"transform\" and \"WebkitTransform\"), so we must weed out the extra one here.\n\t\t\t\t\t\t\t\ts[i] = cs[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if ((cs = t.currentStyle || t.style)) {\n\t\t\t\t\tfor (i in cs) {\n\t\t\t\t\t\tif (typeof(i) === \"string\" && s[i] === undefined) {\n\t\t\t\t\t\t\ts[i.replace(_camelExp, _camelFunc)] = cs[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!_supportsOpacity) {\n\t\t\t\t\ts.opacity = _getIEOpacity(t);\n\t\t\t\t}\n\t\t\t\ttr = _getTransform(t, cs, false);\n\t\t\t\ts.rotation = tr.rotation;\n\t\t\t\ts.skewX = tr.skewX;\n\t\t\t\ts.scaleX = tr.scaleX;\n\t\t\t\ts.scaleY = tr.scaleY;\n\t\t\t\ts.x = tr.x;\n\t\t\t\ts.y = tr.y;\n\t\t\t\tif (_supports3D) {\n\t\t\t\t\ts.z = tr.z;\n\t\t\t\t\ts.rotationX = tr.rotationX;\n\t\t\t\t\ts.rotationY = tr.rotationY;\n\t\t\t\t\ts.scaleZ = tr.scaleZ;\n\t\t\t\t}\n\t\t\t\tif (s.filters) {\n\t\t\t\t\tdelete s.filters;\n\t\t\t\t}\n\t\t\t\treturn s;\n\t\t\t},\n\n\t\t\t// @private analyzes two style objects (as returned by _getAllStyles()) and only looks for differences between them that contain tweenable values (like a number or color). It returns an object with a \"difs\" property which refers to an object containing only those isolated properties and values for tweening, and a \"firstMPT\" property which refers to the first MiniPropTween instance in a linked list that recorded all the starting values of the different properties so that we can revert to them at the end or beginning of the tween - we don't want the cascading to get messed up. The forceLookup parameter is an optional generic object with properties that should be forced into the results - this is necessary for className tweens that are overwriting others because imagine a scenario where a rollover/rollout adds/removes a class and the user swipes the mouse over the target SUPER fast, thus nothing actually changed yet and the subsequent comparison of the properties would indicate they match (especially when px rounding is taken into consideration), thus no tweening is necessary even though it SHOULD tween and remove those properties after the tween (otherwise the inline styles will contaminate things). See the className SpecialProp code for details.\n\t\t\t_cssDif = function(t, s1, s2, vars, forceLookup) {\n\t\t\t\tvar difs = {},\n\t\t\t\t\tstyle = t.style,\n\t\t\t\t\tval, p, mpt;\n\t\t\t\tfor (p in s2) {\n\t\t\t\t\tif (p !== \"cssText\") if (p !== \"length\") if (isNaN(p)) if (s1[p] !== (val = s2[p]) || (forceLookup && forceLookup[p])) if (p.indexOf(\"Origin\") === -1) if (typeof(val) === \"number\" || typeof(val) === \"string\") {\n\t\t\t\t\t\tdifs[p] = (val === \"auto\" && (p === \"left\" || p === \"top\")) ? _calculateOffset(t, p) : ((val === \"\" || val === \"auto\" || val === \"none\") && typeof(s1[p]) === \"string\" && s1[p].replace(_NaNExp, \"\") !== \"\") ? 0 : val; //if the ending value is defaulting (\"\" or \"auto\"), we check the starting value and if it can be parsed into a number (a string which could have a suffix too, like 700px), then we swap in 0 for \"\" or \"auto\" so that things actually tween.\n\t\t\t\t\t\tif (style[p] !== undefined) { //for className tweens, we must remember which properties already existed inline - the ones that didn't should be removed when the tween isn't in progress because they were only introduced to facilitate the transition between classes.\n\t\t\t\t\t\t\tmpt = new MiniPropTween(style, p, style[p], mpt);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (vars) {\n\t\t\t\t\tfor (p in vars) { //copy properties (except className)\n\t\t\t\t\t\tif (p !== \"className\") {\n\t\t\t\t\t\t\tdifs[p] = vars[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn {difs:difs, firstMPT:mpt};\n\t\t\t},\n\t\t\t_dimensions = {width:[\"Left\",\"Right\"], height:[\"Top\",\"Bottom\"]},\n\t\t\t_margins = [\"marginLeft\",\"marginRight\",\"marginTop\",\"marginBottom\"],\n\n\t\t\t/**\n\t\t\t * @private Gets the width or height of an element\n\t\t\t * @param {!Object} t Target element\n\t\t\t * @param {!string} p Property name (\"width\" or \"height\")\n\t\t\t * @param {Object=} cs Computed style object (if one exists). Just a speed optimization.\n\t\t\t * @return {number} Dimension (in pixels)\n\t\t\t */\n\t\t\t_getDimension = function(t, p, cs) {\n\t\t\t\tif ((t.nodeName + \"\").toLowerCase() === \"svg\") { //Chrome no longer supports offsetWidth/offsetHeight on SVG elements.\n\t\t\t\t\treturn (cs || _getComputedStyle(t))[p] || 0;\n\t\t\t\t} else if (t.getCTM && _isSVG(t)) {\n\t\t\t\t\treturn t.getBBox()[p] || 0;\n\t\t\t\t}\n\t\t\t\tvar v = parseFloat((p === \"width\") ? t.offsetWidth : t.offsetHeight),\n\t\t\t\t\ta = _dimensions[p],\n\t\t\t\t\ti = a.length;\n\t\t\t\tcs = cs || _getComputedStyle(t, null);\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tv -= parseFloat( _getStyle(t, \"padding\" + a[i], cs, true) ) || 0;\n\t\t\t\t\tv -= parseFloat( _getStyle(t, \"border\" + a[i] + \"Width\", cs, true) ) || 0;\n\t\t\t\t}\n\t\t\t\treturn v;\n\t\t\t},\n\n\t\t\t// @private Parses position-related complex strings like \"top left\" or \"50px 10px\" or \"70% 20%\", etc. which are used for things like transformOrigin or backgroundPosition. Optionally decorates a supplied object (recObj) with the following properties: \"ox\" (offsetX), \"oy\" (offsetY), \"oxp\" (if true, \"ox\" is a percentage not a pixel value), and \"oxy\" (if true, \"oy\" is a percentage not a pixel value)\n\t\t\t_parsePosition = function(v, recObj) {\n\t\t\t\tif (v === \"contain\" || v === \"auto\" || v === \"auto auto\") { //note: Firefox uses \"auto auto\" as default whereas Chrome uses \"auto\".\n\t\t\t\t\treturn v + \" \";\n\t\t\t\t}\n\t\t\t\tif (v == null || v === \"\") {\n\t\t\t\t\tv = \"0 0\";\n\t\t\t\t}\n\t\t\t\tvar a = v.split(\" \"),\n\t\t\t\t\tx = (v.indexOf(\"left\") !== -1) ? \"0%\" : (v.indexOf(\"right\") !== -1) ? \"100%\" : a[0],\n\t\t\t\t\ty = (v.indexOf(\"top\") !== -1) ? \"0%\" : (v.indexOf(\"bottom\") !== -1) ? \"100%\" : a[1],\n\t\t\t\t\ti;\n\t\t\t\tif (a.length > 3 && !recObj) { //multiple positions\n\t\t\t\t\ta = v.split(\", \").join(\",\").split(\",\");\n\t\t\t\t\tv = [];\n\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\tv.push(_parsePosition(a[i]));\n\t\t\t\t\t}\n\t\t\t\t\treturn v.join(\",\");\n\t\t\t\t}\n\t\t\t\tif (y == null) {\n\t\t\t\t\ty = (x === \"center\") ? \"50%\" : \"0\";\n\t\t\t\t} else if (y === \"center\") {\n\t\t\t\t\ty = \"50%\";\n\t\t\t\t}\n\t\t\t\tif (x === \"center\" || (isNaN(parseFloat(x)) && (x + \"\").indexOf(\"=\") === -1)) { //remember, the user could flip-flop the values and say \"bottom center\" or \"center bottom\", etc. \"center\" is ambiguous because it could be used to describe horizontal or vertical, hence the isNaN(). If there's an \"=\" sign in the value, it's relative.\n\t\t\t\t\tx = \"50%\";\n\t\t\t\t}\n\t\t\t\tv = x + \" \" + y + ((a.length > 2) ? \" \" + a[2] : \"\");\n\t\t\t\tif (recObj) {\n\t\t\t\t\trecObj.oxp = (x.indexOf(\"%\") !== -1);\n\t\t\t\t\trecObj.oyp = (y.indexOf(\"%\") !== -1);\n\t\t\t\t\trecObj.oxr = (x.charAt(1) === \"=\");\n\t\t\t\t\trecObj.oyr = (y.charAt(1) === \"=\");\n\t\t\t\t\trecObj.ox = parseFloat(x.replace(_NaNExp, \"\"));\n\t\t\t\t\trecObj.oy = parseFloat(y.replace(_NaNExp, \"\"));\n\t\t\t\t\trecObj.v = v;\n\t\t\t\t}\n\t\t\t\treturn recObj || v;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Takes an ending value (typically a string, but can be a number) and a starting value and returns the change between the two, looking for relative value indicators like += and -= and it also ignores suffixes (but make sure the ending value starts with a number or +=/-= and that the starting value is a NUMBER!)\n\t\t\t * @param {(number|string)} e End value which is typically a string, but could be a number\n\t\t\t * @param {(number|string)} b Beginning value which is typically a string but could be a number\n\t\t\t * @return {number} Amount of change between the beginning and ending values (relative values that have a \"+=\" or \"-=\" are recognized)\n\t\t\t */\n\t\t\t_parseChange = function(e, b) {\n\t\t\t\tif (typeof(e) === \"function\") {\n\t\t\t\t\te = e(_index, _target);\n\t\t\t\t}\n\t\t\t\treturn (typeof(e) === \"string\" && e.charAt(1) === \"=\") ? parseInt(e.charAt(0) + \"1\", 10) * parseFloat(e.substr(2)) : (parseFloat(e) - parseFloat(b)) || 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Takes a value and a default number, checks if the value is relative, null, or numeric and spits back a normalized number accordingly. Primarily used in the _parseTransform() function.\n\t\t\t * @param {Object} v Value to be parsed\n\t\t\t * @param {!number} d Default value (which is also used for relative calculations if \"+=\" or \"-=\" is found in the first parameter)\n\t\t\t * @return {number} Parsed value\n\t\t\t */\n\t\t\t_parseVal = function(v, d) {\n\t\t\t\tif (typeof(v) === \"function\") {\n\t\t\t\t\tv = v(_index, _target);\n\t\t\t\t}\n\t\t\t\treturn (v == null) ? d : (typeof(v) === \"string\" && v.charAt(1) === \"=\") ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(v.substr(2)) + d : parseFloat(v) || 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Translates strings like \"40deg\" or \"40\" or 40rad\" or \"+=40deg\" or \"270_short\" or \"-90_cw\" or \"+=45_ccw\" to a numeric radian angle. Of course a starting/default value must be fed in too so that relative values can be calculated properly.\n\t\t\t * @param {Object} v Value to be parsed\n\t\t\t * @param {!number} d Default value (which is also used for relative calculations if \"+=\" or \"-=\" is found in the first parameter)\n\t\t\t * @param {string=} p property name for directionalEnd (optional - only used when the parsed value is directional (\"_short\", \"_cw\", or \"_ccw\" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation). Property name would be \"rotation\", \"rotationX\", or \"rotationY\"\n\t\t\t * @param {Object=} directionalEnd An object that will store the raw end values for directional angles (\"_short\", \"_cw\", or \"_ccw\" suffix). We need a way to store the uncompensated value so that at the end of the tween, we set it to exactly what was requested with no directional compensation.\n\t\t\t * @return {number} parsed angle in radians\n\t\t\t */\n\t\t\t_parseAngle = function(v, d, p, directionalEnd) {\n\t\t\t\tvar min = 0.000001,\n\t\t\t\t\tcap, split, dif, result, isRelative;\n\t\t\t\tif (typeof(v) === \"function\") {\n\t\t\t\t\tv = v(_index, _target);\n\t\t\t\t}\n\t\t\t\tif (v == null) {\n\t\t\t\t\tresult = d;\n\t\t\t\t} else if (typeof(v) === \"number\") {\n\t\t\t\t\tresult = v;\n\t\t\t\t} else {\n\t\t\t\t\tcap = 360;\n\t\t\t\t\tsplit = v.split(\"_\");\n\t\t\t\t\tisRelative = (v.charAt(1) === \"=\");\n\t\t\t\t\tdif = (isRelative ? parseInt(v.charAt(0) + \"1\", 10) * parseFloat(split[0].substr(2)) : parseFloat(split[0])) * ((v.indexOf(\"rad\") === -1) ? 1 : _RAD2DEG) - (isRelative ? 0 : d);\n\t\t\t\t\tif (split.length) {\n\t\t\t\t\t\tif (directionalEnd) {\n\t\t\t\t\t\t\tdirectionalEnd[p] = d + dif;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"short\") !== -1) {\n\t\t\t\t\t\t\tdif = dif % cap;\n\t\t\t\t\t\t\tif (dif !== dif % (cap / 2)) {\n\t\t\t\t\t\t\t\tdif = (dif < 0) ? dif + cap : dif - cap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t\t\t\t\t\t\tdif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t} else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t\t\t\t\t\t\tdif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult = d + dif;\n\t\t\t\t}\n\t\t\t\tif (result < min && result > -min) {\n\t\t\t\t\tresult = 0;\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t},\n\n\t\t\t_colorLookup = {aqua:[0,255,255],\n\t\t\t\tlime:[0,255,0],\n\t\t\t\tsilver:[192,192,192],\n\t\t\t\tblack:[0,0,0],\n\t\t\t\tmaroon:[128,0,0],\n\t\t\t\tteal:[0,128,128],\n\t\t\t\tblue:[0,0,255],\n\t\t\t\tnavy:[0,0,128],\n\t\t\t\twhite:[255,255,255],\n\t\t\t\tfuchsia:[255,0,255],\n\t\t\t\tolive:[128,128,0],\n\t\t\t\tyellow:[255,255,0],\n\t\t\t\torange:[255,165,0],\n\t\t\t\tgray:[128,128,128],\n\t\t\t\tpurple:[128,0,128],\n\t\t\t\tgreen:[0,128,0],\n\t\t\t\tred:[255,0,0],\n\t\t\t\tpink:[255,192,203],\n\t\t\t\tcyan:[0,255,255],\n\t\t\t\ttransparent:[255,255,255,0]},\n\n\t\t\t_hue = function(h, m1, m2) {\n\t\t\t\th = (h < 0) ? h + 1 : (h > 1) ? h - 1 : h;\n\t\t\t\treturn ((((h * 6 < 1) ? m1 + (m2 - m1) * h * 6 : (h < 0.5) ? m2 : (h * 3 < 2) ? m1 + (m2 - m1) * (2 / 3 - h) * 6 : m1) * 255) + 0.5) | 0;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Parses a color (like #9F0, #FF9900, rgb(255,51,153) or hsl(108, 50%, 10%)) into an array with 3 elements for red, green, and blue or if toHSL parameter is true, it will populate the array with hue, saturation, and lightness values. If a relative value is found in an hsl() or hsla() string, it will preserve those relative prefixes and all the values in the array will be strings instead of numbers (in all other cases it will be populated with numbers).\n\t\t\t * @param {(string|number)} v The value the should be parsed which could be a string like #9F0 or rgb(255,102,51) or rgba(255,0,0,0.5) or it could be a number like 0xFF00CC or even a named color like red, blue, purple, etc.\n\t\t\t * @param {(boolean)} toHSL If true, an hsl() or hsla() value will be returned instead of rgb() or rgba()\n\t\t\t * @return {Array.<number>} An array containing red, green, and blue (and optionally alpha) in that order, or if the toHSL parameter was true, the array will contain hue, saturation and lightness (and optionally alpha) in that order. Always numbers unless there's a relative prefix found in an hsl() or hsla() string and toHSL is true.\n\t\t\t */\n\t\t\t_parseColor = CSSPlugin.parseColor = function(v, toHSL) {\n\t\t\t\tvar a, r, g, b, h, s, l, max, min, d, wasHSL;\n\t\t\t\tif (!v) {\n\t\t\t\t\ta = _colorLookup.black;\n\t\t\t\t} else if (typeof(v) === \"number\") {\n\t\t\t\t\ta = [v >> 16, (v >> 8) & 255, v & 255];\n\t\t\t\t} else {\n\t\t\t\t\tif (v.charAt(v.length - 1) === \",\") { //sometimes a trailing comma is included and we should chop it off (typically from a comma-delimited list of values like a textShadow:\"2px 2px 2px blue, 5px 5px 5px rgb(255,0,0)\" - in this example \"blue,\" has a trailing comma. We could strip it out inside parseComplex() but we'd need to do it to the beginning and ending values plus it wouldn't provide protection from other potential scenarios like if the user passes in a similar value.\n\t\t\t\t\t\tv = v.substr(0, v.length - 1);\n\t\t\t\t\t}\n\t\t\t\t\tif (_colorLookup[v]) {\n\t\t\t\t\t\ta = _colorLookup[v];\n\t\t\t\t\t} else if (v.charAt(0) === \"#\") {\n\t\t\t\t\t\tif (v.length === 4) { //for shorthand like #9F0\n\t\t\t\t\t\t\tr = v.charAt(1);\n\t\t\t\t\t\t\tg = v.charAt(2);\n\t\t\t\t\t\t\tb = v.charAt(3);\n\t\t\t\t\t\t\tv = \"#\" + r + r + g + g + b + b;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tv = parseInt(v.substr(1), 16);\n\t\t\t\t\t\ta = [v >> 16, (v >> 8) & 255, v & 255];\n\t\t\t\t\t} else if (v.substr(0, 3) === \"hsl\") {\n\t\t\t\t\t\ta = wasHSL = v.match(_numExp);\n\t\t\t\t\t\tif (!toHSL) {\n\t\t\t\t\t\t\th = (Number(a[0]) % 360) / 360;\n\t\t\t\t\t\t\ts = Number(a[1]) / 100;\n\t\t\t\t\t\t\tl = Number(a[2]) / 100;\n\t\t\t\t\t\t\tg = (l <= 0.5) ? l * (s + 1) : l + s - l * s;\n\t\t\t\t\t\t\tr = l * 2 - g;\n\t\t\t\t\t\t\tif (a.length > 3) {\n\t\t\t\t\t\t\t\ta[3] = Number(v[3]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ta[0] = _hue(h + 1 / 3, r, g);\n\t\t\t\t\t\t\ta[1] = _hue(h, r, g);\n\t\t\t\t\t\t\ta[2] = _hue(h - 1 / 3, r, g);\n\t\t\t\t\t\t} else if (v.indexOf(\"=\") !== -1) { //if relative values are found, just return the raw strings with the relative prefixes in place.\n\t\t\t\t\t\t\treturn v.match(_relNumExp);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta = v.match(_numExp) || _colorLookup.transparent;\n\t\t\t\t\t}\n\t\t\t\t\ta[0] = Number(a[0]);\n\t\t\t\t\ta[1] = Number(a[1]);\n\t\t\t\t\ta[2] = Number(a[2]);\n\t\t\t\t\tif (a.length > 3) {\n\t\t\t\t\t\ta[3] = Number(a[3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (toHSL && !wasHSL) {\n\t\t\t\t\tr = a[0] / 255;\n\t\t\t\t\tg = a[1] / 255;\n\t\t\t\t\tb = a[2] / 255;\n\t\t\t\t\tmax = Math.max(r, g, b);\n\t\t\t\t\tmin = Math.min(r, g, b);\n\t\t\t\t\tl = (max + min) / 2;\n\t\t\t\t\tif (max === min) {\n\t\t\t\t\t\th = s = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\td = max - min;\n\t\t\t\t\t\ts = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\t\t\t\t\t\th = (max === r) ? (g - b) / d + (g < b ? 6 : 0) : (max === g) ? (b - r) / d + 2 : (r - g) / d + 4;\n\t\t\t\t\t\th *= 60;\n\t\t\t\t\t}\n\t\t\t\t\ta[0] = (h + 0.5) | 0;\n\t\t\t\t\ta[1] = (s * 100 + 0.5) | 0;\n\t\t\t\t\ta[2] = (l * 100 + 0.5) | 0;\n\t\t\t\t}\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\t_formatColors = function(s, toHSL) {\n\t\t\t\tvar colors = s.match(_colorExp) || [],\n\t\t\t\t\tcharIndex = 0,\n\t\t\t\t\tparsed = colors.length ? \"\" : s,\n\t\t\t\t\ti, color, temp;\n\t\t\t\tfor (i = 0; i < colors.length; i++) {\n\t\t\t\t\tcolor = colors[i];\n\t\t\t\t\ttemp = s.substr(charIndex, s.indexOf(color, charIndex)-charIndex);\n\t\t\t\t\tcharIndex += temp.length + color.length;\n\t\t\t\t\tcolor = _parseColor(color, toHSL);\n\t\t\t\t\tif (color.length === 3) {\n\t\t\t\t\t\tcolor.push(1);\n\t\t\t\t\t}\n\t\t\t\t\tparsed += temp + (toHSL ? \"hsla(\" + color[0] + \",\" + color[1] + \"%,\" + color[2] + \"%,\" + color[3] : \"rgba(\" + color.join(\",\")) + \")\";\n\t\t\t\t}\n\t\t\t\treturn parsed + s.substr(charIndex);\n\t\t\t},\n\t\t\t_colorExp = \"(?:\\\\b(?:(?:rgb|rgba|hsl|hsla)\\\\(.+?\\\\))|\\\\B#(?:[0-9a-f]{3}){1,2}\\\\b\"; //we'll dynamically build this Regular Expression to conserve file size. After building it, it will be able to find rgb(), rgba(), # (hexadecimal), and named color values like red, blue, purple, etc.\n\n\t\tfor (p in _colorLookup) {\n\t\t\t_colorExp += \"|\" + p + \"\\\\b\";\n\t\t}\n\t\t_colorExp = new RegExp(_colorExp+\")\", \"gi\");\n\n\t\tCSSPlugin.colorStringFilter = function(a) {\n\t\t\tvar combined = a[0] + a[1],\n\t\t\t\ttoHSL;\n\t\t\tif (_colorExp.test(combined)) {\n\t\t\t\ttoHSL = (combined.indexOf(\"hsl(\") !== -1 || combined.indexOf(\"hsla(\") !== -1);\n\t\t\t\ta[0] = _formatColors(a[0], toHSL);\n\t\t\t\ta[1] = _formatColors(a[1], toHSL);\n\t\t\t}\n\t\t\t_colorExp.lastIndex = 0;\n\t\t};\n\n\t\tif (!TweenLite.defaultStringFilter) {\n\t\t\tTweenLite.defaultStringFilter = CSSPlugin.colorStringFilter;\n\t\t}\n\n\t\t/**\n\t\t * @private Returns a formatter function that handles taking a string (or number in some cases) and returning a consistently formatted one in terms of delimiters, quantity of values, etc. For example, we may get boxShadow values defined as \"0px red\" or \"0px 0px 10px rgb(255,0,0)\" or \"0px 0px 20px 20px #F00\" and we need to ensure that what we get back is described with 4 numbers and a color. This allows us to feed it into the _parseComplex() method and split the values up appropriately. The neat thing about this _getFormatter() function is that the dflt defines a pattern as well as a default, so for example, _getFormatter(\"0px 0px 0px 0px #777\", true) not only sets the default as 0px for all distances and #777 for the color, but also sets the pattern such that 4 numbers and a color will always get returned.\n\t\t * @param {!string} dflt The default value and pattern to follow. So \"0px 0px 0px 0px #777\" will ensure that 4 numbers and a color will always get returned.\n\t\t * @param {boolean=} clr If true, the values should be searched for color-related data. For example, boxShadow values typically contain a color whereas borderRadius don't.\n\t\t * @param {boolean=} collapsible If true, the value is a top/left/right/bottom style one that acts like margin or padding, where if only one value is received, it's used for all 4; if 2 are received, the first is duplicated for 3rd (bottom) and the 2nd is duplicated for the 4th spot (left), etc.\n\t\t * @return {Function} formatter function\n\t\t */\n\t\tvar _getFormatter = function(dflt, clr, collapsible, multi) {\n\t\t\t\tif (dflt == null) {\n\t\t\t\t\treturn function(v) {return v;};\n\t\t\t\t}\n\t\t\t\tvar dColor = clr ? (dflt.match(_colorExp) || [\"\"])[0] : \"\",\n\t\t\t\t\tdVals = dflt.split(dColor).join(\"\").match(_valuesExp) || [],\n\t\t\t\t\tpfx = dflt.substr(0, dflt.indexOf(dVals[0])),\n\t\t\t\t\tsfx = (dflt.charAt(dflt.length - 1) === \")\") ? \")\" : \"\",\n\t\t\t\t\tdelim = (dflt.indexOf(\" \") !== -1) ? \" \" : \",\",\n\t\t\t\t\tnumVals = dVals.length,\n\t\t\t\t\tdSfx = (numVals > 0) ? dVals[0].replace(_numExp, \"\") : \"\",\n\t\t\t\t\tformatter;\n\t\t\t\tif (!numVals) {\n\t\t\t\t\treturn function(v) {return v;};\n\t\t\t\t}\n\t\t\t\tif (clr) {\n\t\t\t\t\tformatter = function(v) {\n\t\t\t\t\t\tvar color, vals, i, a;\n\t\t\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\t\t\tv += dSfx;\n\t\t\t\t\t\t} else if (multi && _commasOutsideParenExp.test(v)) {\n\t\t\t\t\t\t\ta = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\t\t\ta[i] = formatter(a[i]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn a.join(\",\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcolor = (v.match(_colorExp) || [dColor])[0];\n\t\t\t\t\t\tvals = v.split(color).join(\"\").match(_valuesExp) || [];\n\t\t\t\t\t\ti = vals.length;\n\t\t\t\t\t\tif (numVals > i--) {\n\t\t\t\t\t\t\twhile (++i < numVals) {\n\t\t\t\t\t\t\t\tvals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn pfx + vals.join(delim) + delim + color + sfx + (v.indexOf(\"inset\") !== -1 ? \" inset\" : \"\");\n\t\t\t\t\t};\n\t\t\t\t\treturn formatter;\n\n\t\t\t\t}\n\t\t\t\tformatter = function(v) {\n\t\t\t\t\tvar vals, a, i;\n\t\t\t\t\tif (typeof(v) === \"number\") {\n\t\t\t\t\t\tv += dSfx;\n\t\t\t\t\t} else if (multi && _commasOutsideParenExp.test(v)) {\n\t\t\t\t\t\ta = v.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\t\t\ta[i] = formatter(a[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn a.join(\",\");\n\t\t\t\t\t}\n\t\t\t\t\tvals = v.match(_valuesExp) || [];\n\t\t\t\t\ti = vals.length;\n\t\t\t\t\tif (numVals > i--) {\n\t\t\t\t\t\twhile (++i < numVals) {\n\t\t\t\t\t\t\tvals[i] = collapsible ? vals[(((i - 1) / 2) | 0)] : dVals[i];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn pfx + vals.join(delim) + sfx;\n\t\t\t\t};\n\t\t\t\treturn formatter;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private returns a formatter function that's used for edge-related values like marginTop, marginLeft, paddingBottom, paddingRight, etc. Just pass a comma-delimited list of property names related to the edges.\n\t\t\t * @param {!string} props a comma-delimited list of property names in order from top to left, like \"marginTop,marginRight,marginBottom,marginLeft\"\n\t\t\t * @return {Function} a formatter function\n\t\t\t */\n\t\t\t_getEdgeParser = function(props) {\n\t\t\t\tprops = props.split(\",\");\n\t\t\t\treturn function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\t\tvar a = (e + \"\").split(\" \"),\n\t\t\t\t\t\ti;\n\t\t\t\t\tvars = {};\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tvars[props[i]] = a[i] = a[i] || a[(((i - 1) / 2) >> 0)];\n\t\t\t\t\t}\n\t\t\t\t\treturn cssp.parse(t, vars, pt, plugin);\n\t\t\t\t};\n\t\t\t},\n\n\t\t\t// @private used when other plugins must tween values first, like BezierPlugin or ThrowPropsPlugin, etc. That plugin's setRatio() gets called first so that the values are updated, and then we loop through the MiniPropTweens which handle copying the values into their appropriate slots so that they can then be applied correctly in the main CSSPlugin setRatio() method. Remember, we typically create a proxy object that has a bunch of uniquely-named properties that we feed to the sub-plugin and it does its magic normally, and then we must interpret those values and apply them to the css because often numbers must get combined/concatenated, suffixes added, etc. to work with css, like boxShadow could have 4 values plus a color.\n\t\t\t_setPluginRatio = _internals._setPluginRatio = function(v) {\n\t\t\t\tthis.plugin.setRatio(v);\n\t\t\t\tvar d = this.data,\n\t\t\t\t\tproxy = d.proxy,\n\t\t\t\t\tmpt = d.firstMPT,\n\t\t\t\t\tmin = 0.000001,\n\t\t\t\t\tval, pt, i, str, p;\n\t\t\t\twhile (mpt) {\n\t\t\t\t\tval = proxy[mpt.v];\n\t\t\t\t\tif (mpt.r) {\n\t\t\t\t\t\tval = Math.round(val);\n\t\t\t\t\t} else if (val < min && val > -min) {\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tmpt.t[mpt.p] = val;\n\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t}\n\t\t\t\tif (d.autoRotate) {\n\t\t\t\t\td.autoRotate.rotation = d.mod ? d.mod(proxy.rotation, this.t) : proxy.rotation; //special case for ModifyPlugin to hook into an auto-rotating bezier\n\t\t\t\t}\n\t\t\t\t//at the end, we must set the CSSPropTween's \"e\" (end) value dynamically here because that's what is used in the final setRatio() method. Same for \"b\" at the beginning.\n\t\t\t\tif (v === 1 || v === 0) {\n\t\t\t\t\tmpt = d.firstMPT;\n\t\t\t\t\tp = (v === 1) ? \"e\" : \"b\";\n\t\t\t\t\twhile (mpt) {\n\t\t\t\t\t\tpt = mpt.t;\n\t\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\t\tpt[p] = pt.s + pt.xs0;\n\t\t\t\t\t\t} else if (pt.type === 1) {\n\t\t\t\t\t\t\tstr = pt.xs0 + pt.s + pt.xs1;\n\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt[p] = str;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private @constructor Used by a few SpecialProps to hold important values for proxies. For example, _parseToProxy() creates a MiniPropTween instance for each property that must get tweened on the proxy, and we record the original property name as well as the unique one we create for the proxy, plus whether or not the value needs to be rounded plus the original value.\n\t\t\t * @param {!Object} t target object whose property we're tweening (often a CSSPropTween)\n\t\t\t * @param {!string} p property name\n\t\t\t * @param {(number|string|object)} v value\n\t\t\t * @param {MiniPropTween=} next next MiniPropTween in the linked list\n\t\t\t * @param {boolean=} r if true, the tweened value should be rounded to the nearest integer\n\t\t\t */\n\t\t\tMiniPropTween = function(t, p, v, next, r) {\n\t\t\t\tthis.t = t;\n\t\t\t\tthis.p = p;\n\t\t\t\tthis.v = v;\n\t\t\t\tthis.r = r;\n\t\t\t\tif (next) {\n\t\t\t\t\tnext._prev = this;\n\t\t\t\t\tthis._next = next;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * @private Most other plugins (like BezierPlugin and ThrowPropsPlugin and others) can only tween numeric values, but CSSPlugin must accommodate special values that have a bunch of extra data (like a suffix or strings between numeric values, etc.). For example, boxShadow has values like \"10px 10px 20px 30px rgb(255,0,0)\" which would utterly confuse other plugins. This method allows us to split that data apart and grab only the numeric data and attach it to uniquely-named properties of a generic proxy object ({}) so that we can feed that to virtually any plugin to have the numbers tweened. However, we must also keep track of which properties from the proxy go with which CSSPropTween values and instances. So we create a linked list of MiniPropTweens. Each one records a target (the original CSSPropTween), property (like \"s\" or \"xn1\" or \"xn2\") that we're tweening and the unique property name that was used for the proxy (like \"boxShadow_xn1\" and \"boxShadow_xn2\") and whether or not they need to be rounded. That way, in the _setPluginRatio() method we can simply copy the values over from the proxy to the CSSPropTween instance(s). Then, when the main CSSPlugin setRatio() method runs and applies the CSSPropTween values accordingly, they're updated nicely. So the external plugin tweens the numbers, _setPluginRatio() copies them over, and setRatio() acts normally, applying css-specific values to the element.\n\t\t\t * This method returns an object that has the following properties:\n\t\t\t *  - proxy: a generic object containing the starting values for all the properties that will be tweened by the external plugin.  This is what we feed to the external _onInitTween() as the target\n\t\t\t *  - end: a generic object containing the ending values for all the properties that will be tweened by the external plugin. This is what we feed to the external plugin's _onInitTween() as the destination values\n\t\t\t *  - firstMPT: the first MiniPropTween in the linked list\n\t\t\t *  - pt: the first CSSPropTween in the linked list that was created when parsing. If shallow is true, this linked list will NOT attach to the one passed into the _parseToProxy() as the \"pt\" (4th) parameter.\n\t\t\t * @param {!Object} t target object to be tweened\n\t\t\t * @param {!(Object|string)} vars the object containing the information about the tweening values (typically the end/destination values) that should be parsed\n\t\t\t * @param {!CSSPlugin} cssp The CSSPlugin instance\n\t\t\t * @param {CSSPropTween=} pt the next CSSPropTween in the linked list\n\t\t\t * @param {TweenPlugin=} plugin the external TweenPlugin instance that will be handling tweening the numeric values\n\t\t\t * @param {boolean=} shallow if true, the resulting linked list from the parse will NOT be attached to the CSSPropTween that was passed in as the \"pt\" (4th) parameter.\n\t\t\t * @return An object containing the following properties: proxy, end, firstMPT, and pt (see above for descriptions)\n\t\t\t */\n\t\t\t_parseToProxy = _internals._parseToProxy = function(t, vars, cssp, pt, plugin, shallow) {\n\t\t\t\tvar bpt = pt,\n\t\t\t\t\tstart = {},\n\t\t\t\t\tend = {},\n\t\t\t\t\ttransform = cssp._transform,\n\t\t\t\t\toldForce = _forcePT,\n\t\t\t\t\ti, p, xp, mpt, firstPT;\n\t\t\t\tcssp._transform = null;\n\t\t\t\t_forcePT = vars;\n\t\t\t\tpt = firstPT = cssp.parse(t, vars, pt, plugin);\n\t\t\t\t_forcePT = oldForce;\n\t\t\t\t//break off from the linked list so the new ones are isolated.\n\t\t\t\tif (shallow) {\n\t\t\t\t\tcssp._transform = transform;\n\t\t\t\t\tif (bpt) {\n\t\t\t\t\t\tbpt._prev = null;\n\t\t\t\t\t\tif (bpt._prev) {\n\t\t\t\t\t\t\tbpt._prev._next = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\twhile (pt && pt !== bpt) {\n\t\t\t\t\tif (pt.type <= 1) {\n\t\t\t\t\t\tp = pt.p;\n\t\t\t\t\t\tend[p] = pt.s + pt.c;\n\t\t\t\t\t\tstart[p] = pt.s;\n\t\t\t\t\t\tif (!shallow) {\n\t\t\t\t\t\t\tmpt = new MiniPropTween(pt, \"s\", p, mpt, pt.r);\n\t\t\t\t\t\t\tpt.c = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (pt.type === 1) {\n\t\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\t\twhile (--i > 0) {\n\t\t\t\t\t\t\t\txp = \"xn\" + i;\n\t\t\t\t\t\t\t\tp = pt.p + \"_\" + xp;\n\t\t\t\t\t\t\t\tend[p] = pt.data[xp];\n\t\t\t\t\t\t\t\tstart[p] = pt[xp];\n\t\t\t\t\t\t\t\tif (!shallow) {\n\t\t\t\t\t\t\t\t\tmpt = new MiniPropTween(pt, xp, p, mpt, pt.rxp[xp]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t\treturn {proxy:start, end:end, firstMPT:mpt, pt:firstPT};\n\t\t\t},\n\n\n\n\t\t\t/**\n\t\t\t * @constructor Each property that is tweened has at least one CSSPropTween associated with it. These instances store important information like the target, property, starting value, amount of change, etc. They can also optionally have a number of \"extra\" strings and numeric values named xs1, xn1, xs2, xn2, xs3, xn3, etc. where \"s\" indicates string and \"n\" indicates number. These can be pieced together in a complex-value tween (type:1) that has alternating types of data like a string, number, string, number, etc. For example, boxShadow could be \"5px 5px 8px rgb(102, 102, 51)\". In that value, there are 6 numbers that may need to tween and then pieced back together into a string again with spaces, suffixes, etc. xs0 is special in that it stores the suffix for standard (type:0) tweens, -OR- the first string (prefix) in a complex-value (type:1) CSSPropTween -OR- it can be the non-tweening value in a type:-1 CSSPropTween. We do this to conserve memory.\n\t\t\t * CSSPropTweens have the following optional properties as well (not defined through the constructor):\n\t\t\t *  - l: Length in terms of the number of extra properties that the CSSPropTween has (default: 0). For example, for a boxShadow we may need to tween 5 numbers in which case l would be 5; Keep in mind that the start/end values for the first number that's tweened are always stored in the s and c properties to conserve memory. All additional values thereafter are stored in xn1, xn2, etc.\n\t\t\t *  - xfirst: The first instance of any sub-CSSPropTweens that are tweening properties of this instance. For example, we may split up a boxShadow tween so that there's a main CSSPropTween of type:1 that has various xs* and xn* values associated with the h-shadow, v-shadow, blur, color, etc. Then we spawn a CSSPropTween for each of those that has a higher priority and runs BEFORE the main CSSPropTween so that the values are all set by the time it needs to re-assemble them. The xfirst gives us an easy way to identify the first one in that chain which typically ends at the main one (because they're all prepende to the linked list)\n\t\t\t *  - plugin: The TweenPlugin instance that will handle the tweening of any complex values. For example, sometimes we don't want to use normal subtweens (like xfirst refers to) to tween the values - we might want ThrowPropsPlugin or BezierPlugin some other plugin to do the actual tweening, so we create a plugin instance and store a reference here. We need this reference so that if we get a request to round values or disable a tween, we can pass along that request.\n\t\t\t *  - data: Arbitrary data that needs to be stored with the CSSPropTween. Typically if we're going to have a plugin handle the tweening of a complex-value tween, we create a generic object that stores the END values that we're tweening to and the CSSPropTween's xs1, xs2, etc. have the starting values. We store that object as data. That way, we can simply pass that object to the plugin and use the CSSPropTween as the target.\n\t\t\t *  - setRatio: Only used for type:2 tweens that require custom functionality. In this case, we call the CSSPropTween's setRatio() method and pass the ratio each time the tween updates. This isn't quite as efficient as doing things directly in the CSSPlugin's setRatio() method, but it's very convenient and flexible.\n\t\t\t * @param {!Object} t Target object whose property will be tweened. Often a DOM element, but not always. It could be anything.\n\t\t\t * @param {string} p Property to tween (name). For example, to tween element.width, p would be \"width\".\n\t\t\t * @param {number} s Starting numeric value\n\t\t\t * @param {number} c Change in numeric value over the course of the entire tween. For example, if element.width starts at 5 and should end at 100, c would be 95.\n\t\t\t * @param {CSSPropTween=} next The next CSSPropTween in the linked list. If one is defined, we will define its _prev as the new instance, and the new instance's _next will be pointed at it.\n\t\t\t * @param {number=} type The type of CSSPropTween where -1 = a non-tweening value, 0 = a standard simple tween, 1 = a complex value (like one that has multiple numbers in a comma- or space-delimited string like border:\"1px solid red\"), and 2 = one that uses a custom setRatio function that does all of the work of applying the values on each update.\n\t\t\t * @param {string=} n Name of the property that should be used for overwriting purposes which is typically the same as p but not always. For example, we may need to create a subtween for the 2nd part of a \"clip:rect(...)\" tween in which case \"p\" might be xs1 but \"n\" is still \"clip\"\n\t\t\t * @param {boolean=} r If true, the value(s) should be rounded\n\t\t\t * @param {number=} pr Priority in the linked list order. Higher priority CSSPropTweens will be updated before lower priority ones. The default priority is 0.\n\t\t\t * @param {string=} b Beginning value. We store this to ensure that it is EXACTLY what it was when the tween began without any risk of interpretation issues.\n\t\t\t * @param {string=} e Ending value. We store this to ensure that it is EXACTLY what the user defined at the end of the tween without any risk of interpretation issues.\n\t\t\t */\n\t\t\tCSSPropTween = _internals.CSSPropTween = function(t, p, s, c, next, type, n, r, pr, b, e) {\n\t\t\t\tthis.t = t; //target\n\t\t\t\tthis.p = p; //property\n\t\t\t\tthis.s = s; //starting value\n\t\t\t\tthis.c = c; //change value\n\t\t\t\tthis.n = n || p; //name that this CSSPropTween should be associated to (usually the same as p, but not always - n is what overwriting looks at)\n\t\t\t\tif (!(t instanceof CSSPropTween)) {\n\t\t\t\t\t_overwriteProps.push(this.n);\n\t\t\t\t}\n\t\t\t\tthis.r = r; //round (boolean)\n\t\t\t\tthis.type = type || 0; //0 = normal tween, -1 = non-tweening (in which case xs0 will be applied to the target's property, like tp.t[tp.p] = tp.xs0), 1 = complex-value SpecialProp, 2 = custom setRatio() that does all the work\n\t\t\t\tif (pr) {\n\t\t\t\t\tthis.pr = pr;\n\t\t\t\t\t_hasPriority = true;\n\t\t\t\t}\n\t\t\t\tthis.b = (b === undefined) ? s : b;\n\t\t\t\tthis.e = (e === undefined) ? s + c : e;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis._next = next;\n\t\t\t\t\tnext._prev = this;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t_addNonTweeningNumericPT = function(target, prop, start, end, next, overwriteProp) { //cleans up some code redundancies and helps minification. Just a fast way to add a NUMERIC non-tweening CSSPropTween\n\t\t\t\tvar pt = new CSSPropTween(target, prop, start, end - start, next, -1, overwriteProp);\n\t\t\t\tpt.b = start;\n\t\t\t\tpt.e = pt.xs0 = end;\n\t\t\t\treturn pt;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Takes a target, the beginning value and ending value (as strings) and parses them into a CSSPropTween (possibly with child CSSPropTweens) that accommodates multiple numbers, colors, comma-delimited values, etc. For example:\n\t\t\t * sp.parseComplex(element, \"boxShadow\", \"5px 10px 20px rgb(255,102,51)\", \"0px 0px 0px red\", true, \"0px 0px 0px rgb(0,0,0,0)\", pt);\n\t\t\t * It will walk through the beginning and ending values (which should be in the same format with the same number and type of values) and figure out which parts are numbers, what strings separate the numeric/tweenable values, and then create the CSSPropTweens accordingly. If a plugin is defined, no child CSSPropTweens will be created. Instead, the ending values will be stored in the \"data\" property of the returned CSSPropTween like: {s:-5, xn1:-10, xn2:-20, xn3:255, xn4:0, xn5:0} so that it can be fed to any other plugin and it'll be plain numeric tweens but the recomposition of the complex value will be handled inside CSSPlugin's setRatio().\n\t\t\t * If a setRatio is defined, the type of the CSSPropTween will be set to 2 and recomposition of the values will be the responsibility of that method.\n\t\t\t *\n\t\t\t * @param {!Object} t Target whose property will be tweened\n\t\t\t * @param {!string} p Property that will be tweened (its name, like \"left\" or \"backgroundColor\" or \"boxShadow\")\n\t\t\t * @param {string} b Beginning value\n\t\t\t * @param {string} e Ending value\n\t\t\t * @param {boolean} clrs If true, the value could contain a color value like \"rgb(255,0,0)\" or \"#F00\" or \"red\". The default is false, so no colors will be recognized (a performance optimization)\n\t\t\t * @param {(string|number|Object)} dflt The default beginning value that should be used if no valid beginning value is defined or if the number of values inside the complex beginning and ending values don't match\n\t\t\t * @param {?CSSPropTween} pt CSSPropTween instance that is the current head of the linked list (we'll prepend to this).\n\t\t\t * @param {number=} pr Priority in the linked list order. Higher priority properties will be updated before lower priority ones. The default priority is 0.\n\t\t\t * @param {TweenPlugin=} plugin If a plugin should handle the tweening of extra properties, pass the plugin instance here. If one is defined, then NO subtweens will be created for any extra properties (the properties will be created - just not additional CSSPropTween instances to tween them) because the plugin is expected to do so. However, the end values WILL be populated in the \"data\" property, like {s:100, xn1:50, xn2:300}\n\t\t\t * @param {function(number)=} setRatio If values should be set in a custom function instead of being pieced together in a type:1 (complex-value) CSSPropTween, define that custom function here.\n\t\t\t * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parseComplex() call.\n\t\t\t */\n\t\t\t_parseComplex = CSSPlugin.parseComplex = function(t, p, b, e, clrs, dflt, pt, pr, plugin, setRatio) {\n\t\t\t\t//DEBUG: _log(\"parseComplex: \"+p+\", b: \"+b+\", e: \"+e);\n\t\t\t\tb = b || dflt || \"\";\n\t\t\t\tif (typeof(e) === \"function\") {\n\t\t\t\t\te = e(_index, _target);\n\t\t\t\t}\n\t\t\t\tpt = new CSSPropTween(t, p, 0, 0, pt, (setRatio ? 2 : 1), null, false, pr, b, e);\n\t\t\t\te += \"\"; //ensures it's a string\n\t\t\t\tif (clrs && _colorExp.test(e + b)) { //if colors are found, normalize the formatting to rgba() or hsla().\n\t\t\t\t\te = [b, e];\n\t\t\t\t\tCSSPlugin.colorStringFilter(e);\n\t\t\t\t\tb = e[0];\n\t\t\t\t\te = e[1];\n\t\t\t\t}\n\t\t\t\tvar ba = b.split(\", \").join(\",\").split(\" \"), //beginning array\n\t\t\t\t\tea = e.split(\", \").join(\",\").split(\" \"), //ending array\n\t\t\t\t\tl = ba.length,\n\t\t\t\t\tautoRound = (_autoRound !== false),\n\t\t\t\t\ti, xi, ni, bv, ev, bnums, enums, bn, hasAlpha, temp, cv, str, useHSL;\n\t\t\t\tif (e.indexOf(\",\") !== -1 || b.indexOf(\",\") !== -1) {\n\t\t\t\t\tba = ba.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t\t\t\t\tea = ea.join(\" \").replace(_commasOutsideParenExp, \", \").split(\" \");\n\t\t\t\t\tl = ba.length;\n\t\t\t\t}\n\t\t\t\tif (l !== ea.length) {\n\t\t\t\t\t//DEBUG: _log(\"mismatched formatting detected on \" + p + \" (\" + b + \" vs \" + e + \")\");\n\t\t\t\t\tba = (dflt || \"\").split(\" \");\n\t\t\t\t\tl = ba.length;\n\t\t\t\t}\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = setRatio;\n\t\t\t\t_colorExp.lastIndex = 0;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tbv = ba[i];\n\t\t\t\t\tev = ea[i];\n\t\t\t\t\tbn = parseFloat(bv);\n\t\t\t\t\t//if the value begins with a number (most common). It's fine if it has a suffix like px\n\t\t\t\t\tif (bn || bn === 0) {\n\t\t\t\t\t\tpt.appendXtra(\"\", bn, _parseChange(ev, bn), ev.replace(_relNumExp, \"\"), (autoRound && ev.indexOf(\"px\") !== -1), true);\n\n\t\t\t\t\t//if the value is a color\n\t\t\t\t\t} else if (clrs && _colorExp.test(bv)) {\n\t\t\t\t\t\tstr = ev.indexOf(\")\") + 1;\n\t\t\t\t\t\tstr = \")\" + (str ? ev.substr(str) : \"\"); //if there's a comma or ) at the end, retain it.\n\t\t\t\t\t\tuseHSL = (ev.indexOf(\"hsl\") !== -1 && _supportsOpacity);\n\t\t\t\t\t\tbv = _parseColor(bv, useHSL);\n\t\t\t\t\t\tev = _parseColor(ev, useHSL);\n\t\t\t\t\t\thasAlpha = (bv.length + ev.length > 6);\n\t\t\t\t\t\tif (hasAlpha && !_supportsOpacity && ev[3] === 0) { //older versions of IE don't support rgba(), so if the destination alpha is 0, just use \"transparent\" for the end color\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += pt.l ? \" transparent\" : \"transparent\";\n\t\t\t\t\t\t\tpt.e = pt.e.split(ea[i]).join(\"transparent\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (!_supportsOpacity) { //old versions of IE don't support rgba().\n\t\t\t\t\t\t\t\thasAlpha = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (useHSL) {\n\t\t\t\t\t\t\t\tpt.appendXtra((hasAlpha ? \"hsla(\" : \"hsl(\"), bv[0], _parseChange(ev[0], bv[0]), \",\", false, true)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[1], _parseChange(ev[1], bv[1]), \"%,\", false)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[2], _parseChange(ev[2], bv[2]), (hasAlpha ? \"%,\" : \"%\" + str), false);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tpt.appendXtra((hasAlpha ? \"rgba(\" : \"rgb(\"), bv[0], ev[0] - bv[0], \",\", true, true)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[1], ev[1] - bv[1], \",\", true)\n\t\t\t\t\t\t\t\t\t.appendXtra(\"\", bv[2], ev[2] - bv[2], (hasAlpha ? \",\" : str), true);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (hasAlpha) {\n\t\t\t\t\t\t\t\tbv = (bv.length < 4) ? 1 : bv[3];\n\t\t\t\t\t\t\t\tpt.appendXtra(\"\", bv, ((ev.length < 4) ? 1 : ev[3]) - bv, str, false);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_colorExp.lastIndex = 0; //otherwise the test() on the RegExp could move the lastIndex and taint future results.\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbnums = bv.match(_numExp); //gets each group of numbers in the beginning value string and drops them into an array\n\n\t\t\t\t\t\t//if no number is found, treat it as a non-tweening value and just append the string to the current xs.\n\t\t\t\t\t\tif (!bnums) {\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += (pt.l || pt[\"xs\" + pt.l]) ? \" \" + ev : ev;\n\n\t\t\t\t\t\t//loop through all the numbers that are found and construct the extra values on the pt.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tenums = ev.match(_relNumExp); //get each group of numbers in the end value string and drop them into an array. We allow relative values too, like +=50 or -=.5\n\t\t\t\t\t\t\tif (!enums || enums.length !== bnums.length) {\n\t\t\t\t\t\t\t\t//DEBUG: _log(\"mismatched formatting detected on \" + p + \" (\" + b + \" vs \" + e + \")\");\n\t\t\t\t\t\t\t\treturn pt;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tni = 0;\n\t\t\t\t\t\t\tfor (xi = 0; xi < bnums.length; xi++) {\n\t\t\t\t\t\t\t\tcv = bnums[xi];\n\t\t\t\t\t\t\t\ttemp = bv.indexOf(cv, ni);\n\t\t\t\t\t\t\t\tpt.appendXtra(bv.substr(ni, temp - ni), Number(cv), _parseChange(enums[xi], cv), \"\", (autoRound && bv.substr(temp + cv.length, 2) === \"px\"), (xi === 0));\n\t\t\t\t\t\t\t\tni = temp + cv.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt[\"xs\" + pt.l] += bv.substr(ni);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//if there are relative values (\"+=\" or \"-=\" prefix), we need to adjust the ending value to eliminate the prefixes and combine the values properly.\n\t\t\t\tif (e.indexOf(\"=\") !== -1) if (pt.data) {\n\t\t\t\t\tstr = pt.xs0 + pt.data.s;\n\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\tstr += pt[\"xs\" + i] + pt.data[\"xn\" + i];\n\t\t\t\t\t}\n\t\t\t\t\tpt.e = str + pt[\"xs\" + i];\n\t\t\t\t}\n\t\t\t\tif (!pt.l) {\n\t\t\t\t\tpt.type = -1;\n\t\t\t\t\tpt.xs0 = pt.e;\n\t\t\t\t}\n\t\t\t\treturn pt.xfirst || pt;\n\t\t\t},\n\t\t\ti = 9;\n\n\n\t\tp = CSSPropTween.prototype;\n\t\tp.l = p.pr = 0; //length (number of extra properties like xn1, xn2, xn3, etc.\n\t\twhile (--i > 0) {\n\t\t\tp[\"xn\" + i] = 0;\n\t\t\tp[\"xs\" + i] = \"\";\n\t\t}\n\t\tp.xs0 = \"\";\n\t\tp._next = p._prev = p.xfirst = p.data = p.plugin = p.setRatio = p.rxp = null;\n\n\n\t\t/**\n\t\t * Appends and extra tweening value to a CSSPropTween and automatically manages any prefix and suffix strings. The first extra value is stored in the s and c of the main CSSPropTween instance, but thereafter any extras are stored in the xn1, xn2, xn3, etc. The prefixes and suffixes are stored in the xs0, xs1, xs2, etc. properties. For example, if I walk through a clip value like \"rect(10px, 5px, 0px, 20px)\", the values would be stored like this:\n\t\t * xs0:\"rect(\", s:10, xs1:\"px, \", xn1:5, xs2:\"px, \", xn2:0, xs3:\"px, \", xn3:20, xn4:\"px)\"\n\t\t * And they'd all get joined together when the CSSPlugin renders (in the setRatio() method).\n\t\t * @param {string=} pfx Prefix (if any)\n\t\t * @param {!number} s Starting value\n\t\t * @param {!number} c Change in numeric value over the course of the entire tween. For example, if the start is 5 and the end is 100, the change would be 95.\n\t\t * @param {string=} sfx Suffix (if any)\n\t\t * @param {boolean=} r Round (if true).\n\t\t * @param {boolean=} pad If true, this extra value should be separated by the previous one by a space. If there is no previous extra and pad is true, it will automatically drop the space.\n\t\t * @return {CSSPropTween} returns itself so that multiple methods can be chained together.\n\t\t */\n\t\tp.appendXtra = function(pfx, s, c, sfx, r, pad) {\n\t\t\tvar pt = this,\n\t\t\t\tl = pt.l;\n\t\t\tpt[\"xs\" + l] += (pad && (l || pt[\"xs\" + l])) ? \" \" + pfx : pfx || \"\";\n\t\t\tif (!c) if (l !== 0 && !pt.plugin) { //typically we'll combine non-changing values right into the xs to optimize performance, but we don't combine them when there's a plugin that will be tweening the values because it may depend on the values being split apart, like for a bezier, if a value doesn't change between the first and second iteration but then it does on the 3rd, we'll run into trouble because there's no xn slot for that value!\n\t\t\t\tpt[\"xs\" + l] += s + (sfx || \"\");\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t\tpt.l++;\n\t\t\tpt.type = pt.setRatio ? 2 : 1;\n\t\t\tpt[\"xs\" + pt.l] = sfx || \"\";\n\t\t\tif (l > 0) {\n\t\t\t\tpt.data[\"xn\" + l] = s + c;\n\t\t\t\tpt.rxp[\"xn\" + l] = r; //round extra property (we need to tap into this in the _parseToProxy() method)\n\t\t\t\tpt[\"xn\" + l] = s;\n\t\t\t\tif (!pt.plugin) {\n\t\t\t\t\tpt.xfirst = new CSSPropTween(pt, \"xn\" + l, s, c, pt.xfirst || pt, 0, pt.n, r, pt.pr);\n\t\t\t\t\tpt.xfirst.xs0 = 0; //just to ensure that the property stays numeric which helps modern browsers speed up processing. Remember, in the setRatio() method, we do pt.t[pt.p] = val + pt.xs0 so if pt.xs0 is \"\" (the default), it'll cast the end value as a string. When a property is a number sometimes and a string sometimes, it prevents the compiler from locking in the data type, slowing things down slightly.\n\t\t\t\t}\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t\tpt.data = {s:s + c};\n\t\t\tpt.rxp = {};\n\t\t\tpt.s = s;\n\t\t\tpt.c = c;\n\t\t\tpt.r = r;\n\t\t\treturn pt;\n\t\t};\n\n\t\t/**\n\t\t * @constructor A SpecialProp is basically a css property that needs to be treated in a non-standard way, like if it may contain a complex value like boxShadow:\"5px 10px 15px rgb(255, 102, 51)\" or if it is associated with another plugin like ThrowPropsPlugin or BezierPlugin. Every SpecialProp is associated with a particular property name like \"boxShadow\" or \"throwProps\" or \"bezier\" and it will intercept those values in the vars object that's passed to the CSSPlugin and handle them accordingly.\n\t\t * @param {!string} p Property name (like \"boxShadow\" or \"throwProps\")\n\t\t * @param {Object=} options An object containing any of the following configuration options:\n\t\t *                      - defaultValue: the default value\n\t\t *                      - parser: A function that should be called when the associated property name is found in the vars. This function should return a CSSPropTween instance and it should ensure that it is properly inserted into the linked list. It will receive 4 paramters: 1) The target, 2) The value defined in the vars, 3) The CSSPlugin instance (whose _firstPT should be used for the linked list), and 4) A computed style object if one was calculated (this is a speed optimization that allows retrieval of starting values quicker)\n\t\t *                      - formatter: a function that formats any value received for this special property (for example, boxShadow could take \"5px 5px red\" and format it to \"5px 5px 0px 0px red\" so that both the beginning and ending values have a common order and quantity of values.)\n\t\t *                      - prefix: if true, we'll determine whether or not this property requires a vendor prefix (like Webkit or Moz or ms or O)\n\t\t *                      - color: set this to true if the value for this SpecialProp may contain color-related values like rgb(), rgba(), etc.\n\t\t *                      - priority: priority in the linked list order. Higher priority SpecialProps will be updated before lower priority ones. The default priority is 0.\n\t\t *                      - multi: if true, the formatter should accommodate a comma-delimited list of values, like boxShadow could have multiple boxShadows listed out.\n\t\t *                      - collapsible: if true, the formatter should treat the value like it's a top/right/bottom/left value that could be collapsed, like \"5px\" would apply to all, \"5px, 10px\" would use 5px for top/bottom and 10px for right/left, etc.\n\t\t *                      - keyword: a special keyword that can [optionally] be found inside the value (like \"inset\" for boxShadow). This allows us to validate beginning/ending values to make sure they match (if the keyword is found in one, it'll be added to the other for consistency by default).\n\t\t */\n\t\tvar SpecialProp = function(p, options) {\n\t\t\t\toptions = options || {};\n\t\t\t\tthis.p = options.prefix ? _checkPropPrefix(p) || p : p;\n\t\t\t\t_specialProps[p] = _specialProps[this.p] = this;\n\t\t\t\tthis.format = options.formatter || _getFormatter(options.defaultValue, options.color, options.collapsible, options.multi);\n\t\t\t\tif (options.parser) {\n\t\t\t\t\tthis.parse = options.parser;\n\t\t\t\t}\n\t\t\t\tthis.clrs = options.color;\n\t\t\t\tthis.multi = options.multi;\n\t\t\t\tthis.keyword = options.keyword;\n\t\t\t\tthis.dflt = options.defaultValue;\n\t\t\t\tthis.pr = options.priority || 0;\n\t\t\t},\n\n\t\t\t//shortcut for creating a new SpecialProp that can accept multiple properties as a comma-delimited list (helps minification). dflt can be an array for multiple values (we don't do a comma-delimited list because the default value may contain commas, like rect(0px,0px,0px,0px)). We attach this method to the SpecialProp class/object instead of using a private _createSpecialProp() method so that we can tap into it externally if necessary, like from another plugin.\n\t\t\t_registerComplexSpecialProp = _internals._registerComplexSpecialProp = function(p, options, defaults) {\n\t\t\t\tif (typeof(options) !== \"object\") {\n\t\t\t\t\toptions = {parser:defaults}; //to make backwards compatible with older versions of BezierPlugin and ThrowPropsPlugin\n\t\t\t\t}\n\t\t\t\tvar a = p.split(\",\"),\n\t\t\t\t\td = options.defaultValue,\n\t\t\t\t\ti, temp;\n\t\t\t\tdefaults = defaults || [d];\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\toptions.prefix = (i === 0 && options.prefix);\n\t\t\t\t\toptions.defaultValue = defaults[i] || d;\n\t\t\t\t\ttemp = new SpecialProp(a[i], options);\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//creates a placeholder special prop for a plugin so that the property gets caught the first time a tween of it is attempted, and at that time it makes the plugin register itself, thus taking over for all future tweens of that property. This allows us to not mandate that things load in a particular order and it also allows us to log() an error that informs the user when they attempt to tween an external plugin-related property without loading its .js file.\n\t\t\t_registerPluginProp = _internals._registerPluginProp = function(p) {\n\t\t\t\tif (!_specialProps[p]) {\n\t\t\t\t\tvar pluginName = p.charAt(0).toUpperCase() + p.substr(1) + \"Plugin\";\n\t\t\t\t\t_registerComplexSpecialProp(p, {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\t\t\tvar pluginClass = _globals.com.greensock.plugins[pluginName];\n\t\t\t\t\t\tif (!pluginClass) {\n\t\t\t\t\t\t\t_log(\"Error: \" + pluginName + \" js file not loaded.\");\n\t\t\t\t\t\t\treturn pt;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpluginClass._cssRegister();\n\t\t\t\t\t\treturn _specialProps[p].parse(t, e, p, cssp, pt, plugin, vars);\n\t\t\t\t\t}});\n\t\t\t\t}\n\t\t\t};\n\n\n\t\tp = SpecialProp.prototype;\n\n\t\t/**\n\t\t * Alias for _parseComplex() that automatically plugs in certain values for this SpecialProp, like its property name, whether or not colors should be sensed, the default value, and priority. It also looks for any keyword that the SpecialProp defines (like \"inset\" for boxShadow) and ensures that the beginning and ending values have the same number of values for SpecialProps where multi is true (like boxShadow and textShadow can have a comma-delimited list)\n\t\t * @param {!Object} t target element\n\t\t * @param {(string|number|object)} b beginning value\n\t\t * @param {(string|number|object)} e ending (destination) value\n\t\t * @param {CSSPropTween=} pt next CSSPropTween in the linked list\n\t\t * @param {TweenPlugin=} plugin If another plugin will be tweening the complex value, that TweenPlugin instance goes here.\n\t\t * @param {function=} setRatio If a custom setRatio() method should be used to handle this complex value, that goes here.\n\t\t * @return {CSSPropTween=} First CSSPropTween in the linked list\n\t\t */\n\t\tp.parseComplex = function(t, b, e, pt, plugin, setRatio) {\n\t\t\tvar kwd = this.keyword,\n\t\t\t\ti, ba, ea, l, bi, ei;\n\t\t\t//if this SpecialProp's value can contain a comma-delimited list of values (like boxShadow or textShadow), we must parse them in a special way, and look for a keyword (like \"inset\" for boxShadow) and ensure that the beginning and ending BOTH have it if the end defines it as such. We also must ensure that there are an equal number of values specified (we can't tween 1 boxShadow to 3 for example)\n\t\t\tif (this.multi) if (_commasOutsideParenExp.test(e) || _commasOutsideParenExp.test(b)) {\n\t\t\t\tba = b.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t\tea = e.replace(_commasOutsideParenExp, \"|\").split(\"|\");\n\t\t\t} else if (kwd) {\n\t\t\t\tba = [b];\n\t\t\t\tea = [e];\n\t\t\t}\n\t\t\tif (ea) {\n\t\t\t\tl = (ea.length > ba.length) ? ea.length : ba.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tb = ba[i] = ba[i] || this.dflt;\n\t\t\t\t\te = ea[i] = ea[i] || this.dflt;\n\t\t\t\t\tif (kwd) {\n\t\t\t\t\t\tbi = b.indexOf(kwd);\n\t\t\t\t\t\tei = e.indexOf(kwd);\n\t\t\t\t\t\tif (bi !== ei) {\n\t\t\t\t\t\t\tif (ei === -1) { //if the keyword isn't in the end value, remove it from the beginning one.\n\t\t\t\t\t\t\t\tba[i] = ba[i].split(kwd).join(\"\");\n\t\t\t\t\t\t\t} else if (bi === -1) { //if the keyword isn't in the beginning, add it.\n\t\t\t\t\t\t\t\tba[i] += \" \" + kwd;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tb = ba.join(\", \");\n\t\t\t\te = ea.join(\", \");\n\t\t\t}\n\t\t\treturn _parseComplex(t, this.p, b, e, this.clrs, this.dflt, pt, this.pr, plugin, setRatio);\n\t\t};\n\n\t\t/**\n\t\t * Accepts a target and end value and spits back a CSSPropTween that has been inserted into the CSSPlugin's linked list and conforms with all the conventions we use internally, like type:-1, 0, 1, or 2, setting up any extra property tweens, priority, etc. For example, if we have a boxShadow SpecialProp and call:\n\t\t * this._firstPT = sp.parse(element, \"5px 10px 20px rgb(2550,102,51)\", \"boxShadow\", this);\n\t\t * It should figure out the starting value of the element's boxShadow, compare it to the provided end value and create all the necessary CSSPropTweens of the appropriate types to tween the boxShadow. The CSSPropTween that gets spit back should already be inserted into the linked list (the 4th parameter is the current head, so prepend to that).\n\t\t * @param {!Object} t Target object whose property is being tweened\n\t\t * @param {Object} e End value as provided in the vars object (typically a string, but not always - like a throwProps would be an object).\n\t\t * @param {!string} p Property name\n\t\t * @param {!CSSPlugin} cssp The CSSPlugin instance that should be associated with this tween.\n\t\t * @param {?CSSPropTween} pt The CSSPropTween that is the current head of the linked list (we'll prepend to it)\n\t\t * @param {TweenPlugin=} plugin If a plugin will be used to tween the parsed value, this is the plugin instance.\n\t\t * @param {Object=} vars Original vars object that contains the data for parsing.\n\t\t * @return {CSSPropTween} The first CSSPropTween in the linked list which includes the new one(s) added by the parse() call.\n\t\t */\n\t\tp.parse = function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\treturn this.parseComplex(t.style, this.format(_getStyle(t, this.p, _cs, false, this.dflt)), this.format(e), pt, plugin);\n\t\t};\n\n\t\t/**\n\t\t * Registers a special property that should be intercepted from any \"css\" objects defined in tweens. This allows you to handle them however you want without CSSPlugin doing it for you. The 2nd parameter should be a function that accepts 3 parameters:\n\t\t *  1) Target object whose property should be tweened (typically a DOM element)\n\t\t *  2) The end/destination value (could be a string, number, object, or whatever you want)\n\t\t *  3) The tween instance (you probably don't need to worry about this, but it can be useful for looking up information like the duration)\n\t\t *\n\t\t * Then, your function should return a function which will be called each time the tween gets rendered, passing a numeric \"ratio\" parameter to your function that indicates the change factor (usually between 0 and 1). For example:\n\t\t *\n\t\t * CSSPlugin.registerSpecialProp(\"myCustomProp\", function(target, value, tween) {\n\t\t *      var start = target.style.width;\n\t\t *      return function(ratio) {\n\t\t *              target.style.width = (start + value * ratio) + \"px\";\n\t\t *              console.log(\"set width to \" + target.style.width);\n\t\t *          }\n\t\t * }, 0);\n\t\t *\n\t\t * Then, when I do this tween, it will trigger my special property:\n\t\t *\n\t\t * TweenLite.to(element, 1, {css:{myCustomProp:100}});\n\t\t *\n\t\t * In the example, of course, we're just changing the width, but you can do anything you want.\n\t\t *\n\t\t * @param {!string} name Property name (or comma-delimited list of property names) that should be intercepted and handled by your function. For example, if I define \"myCustomProp\", then it would handle that portion of the following tween: TweenLite.to(element, 1, {css:{myCustomProp:100}})\n\t\t * @param {!function(Object, Object, Object, string):function(number)} onInitTween The function that will be called when a tween of this special property is performed. The function will receive 4 parameters: 1) Target object that should be tweened, 2) Value that was passed to the tween, 3) The tween instance itself (rarely used), and 4) The property name that's being tweened. Your function should return a function that should be called on every update of the tween. That function will receive a single parameter that is a \"change factor\" value (typically between 0 and 1) indicating the amount of change as a ratio. You can use this to determine how to set the values appropriately in your function.\n\t\t * @param {number=} priority Priority that helps the engine determine the order in which to set the properties (default: 0). Higher priority properties will be updated before lower priority ones.\n\t\t */\n\t\tCSSPlugin.registerSpecialProp = function(name, onInitTween, priority) {\n\t\t\t_registerComplexSpecialProp(name, {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\t\tvar rv = new CSSPropTween(t, p, 0, 0, pt, 2, p, false, priority);\n\t\t\t\trv.plugin = plugin;\n\t\t\t\trv.setRatio = onInitTween(t, e, cssp._tween, p);\n\t\t\t\treturn rv;\n\t\t\t}, priority:priority});\n\t\t};\n\n\n\n\n\n\n\t\t//transform-related methods and properties\n\t\tCSSPlugin.useSVGTransformAttr = true; //Safari and Firefox both have some rendering bugs when applying CSS transforms to SVG elements, so default to using the \"transform\" attribute instead (users can override this).\n\t\tvar _transformProps = (\"scaleX,scaleY,scaleZ,x,y,z,skewX,skewY,rotation,rotationX,rotationY,perspective,xPercent,yPercent\").split(\",\"),\n\t\t\t_transformProp = _checkPropPrefix(\"transform\"), //the Javascript (camelCase) transform property, like msTransform, WebkitTransform, MozTransform, or OTransform.\n\t\t\t_transformPropCSS = _prefixCSS + \"transform\",\n\t\t\t_transformOriginProp = _checkPropPrefix(\"transformOrigin\"),\n\t\t\t_supports3D = (_checkPropPrefix(\"perspective\") !== null),\n\t\t\tTransform = _internals.Transform = function() {\n\t\t\t\tthis.perspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0;\n\t\t\t\tthis.force3D = (CSSPlugin.defaultForce3D === false || !_supports3D) ? false : CSSPlugin.defaultForce3D || \"auto\";\n\t\t\t},\n\t\t\t_SVGElement = _gsScope.SVGElement,\n\t\t\t_useSVGTransformAttr,\n\t\t\t//Some browsers (like Firefox and IE) don't honor transform-origin properly in SVG elements, so we need to manually adjust the matrix accordingly. We feature detect here rather than always doing the conversion for certain browsers because they may fix the problem at some point in the future.\n\n\t\t\t_createSVG = function(type, container, attributes) {\n\t\t\t\tvar element = _doc.createElementNS(\"http://www.w3.org/2000/svg\", type),\n\t\t\t\t\treg = /([a-z])([A-Z])/g,\n\t\t\t\t\tp;\n\t\t\t\tfor (p in attributes) {\n\t\t\t\t\telement.setAttributeNS(null, p.replace(reg, \"$1-$2\").toLowerCase(), attributes[p]);\n\t\t\t\t}\n\t\t\t\tcontainer.appendChild(element);\n\t\t\t\treturn element;\n\t\t\t},\n\t\t\t_docElement = _doc.documentElement || {},\n\t\t\t_forceSVGTransformAttr = (function() {\n\t\t\t\t//IE and Android stock don't support CSS transforms on SVG elements, so we must write them to the \"transform\" attribute. We populate this variable in the _parseTransform() method, and only if/when we come across an SVG element\n\t\t\t\tvar force = _ieVers || (/Android/i.test(_agent) && !_gsScope.chrome),\n\t\t\t\t\tsvg, rect, width;\n\t\t\t\tif (_doc.createElementNS && !force) { //IE8 and earlier doesn't support SVG anyway\n\t\t\t\t\tsvg = _createSVG(\"svg\", _docElement);\n\t\t\t\t\trect = _createSVG(\"rect\", svg, {width:100, height:50, x:100});\n\t\t\t\t\twidth = rect.getBoundingClientRect().width;\n\t\t\t\t\trect.style[_transformOriginProp] = \"50% 50%\";\n\t\t\t\t\trect.style[_transformProp] = \"scaleX(0.5)\";\n\t\t\t\t\tforce = (width === rect.getBoundingClientRect().width && !(_isFirefox && _supports3D)); //note: Firefox fails the test even though it does support CSS transforms in 3D. Since we can't push 3D stuff into the transform attribute, we force Firefox to pass the test here (as long as it does truly support 3D).\n\t\t\t\t\t_docElement.removeChild(svg);\n\t\t\t\t}\n\t\t\t\treturn force;\n\t\t\t})(),\n\t\t\t_parseSVGOrigin = function(e, local, decoratee, absolute, smoothOrigin, skipRecord) {\n\t\t\t\tvar tm = e._gsTransform,\n\t\t\t\t\tm = _getMatrix(e, true),\n\t\t\t\t\tv, x, y, xOrigin, yOrigin, a, b, c, d, tx, ty, determinant, xOriginOld, yOriginOld;\n\t\t\t\tif (tm) {\n\t\t\t\t\txOriginOld = tm.xOrigin; //record the original values before we alter them.\n\t\t\t\t\tyOriginOld = tm.yOrigin;\n\t\t\t\t}\n\t\t\t\tif (!absolute || (v = absolute.split(\" \")).length < 2) {\n\t\t\t\t\tb = e.getBBox();\n\t\t\t\t\tif (b.x === 0 && b.y === 0 && b.width + b.height === 0) { //some browsers (like Firefox) misreport the bounds if the element has zero width and height (it just assumes it's at x:0, y:0), thus we need to manually grab the position in that case.\n\t\t\t\t\t\tb = {x: parseFloat(e.hasAttribute(\"x\") ? e.getAttribute(\"x\") : e.hasAttribute(\"cx\") ? e.getAttribute(\"cx\") : 0) || 0, y: parseFloat(e.hasAttribute(\"y\") ? e.getAttribute(\"y\") : e.hasAttribute(\"cy\") ? e.getAttribute(\"cy\") : 0) || 0, width:0, height:0};\n\t\t\t\t\t}\n\t\t\t\t\tlocal = _parsePosition(local).split(\" \");\n\t\t\t\t\tv = [(local[0].indexOf(\"%\") !== -1 ? parseFloat(local[0]) / 100 * b.width : parseFloat(local[0])) + b.x,\n\t\t\t\t\t\t (local[1].indexOf(\"%\") !== -1 ? parseFloat(local[1]) / 100 * b.height : parseFloat(local[1])) + b.y];\n\t\t\t\t}\n\t\t\t\tdecoratee.xOrigin = xOrigin = parseFloat(v[0]);\n\t\t\t\tdecoratee.yOrigin = yOrigin = parseFloat(v[1]);\n\t\t\t\tif (absolute && m !== _identity2DMatrix) { //if svgOrigin is being set, we must invert the matrix and determine where the absolute point is, factoring in the current transforms. Otherwise, the svgOrigin would be based on the element's non-transformed position on the canvas.\n\t\t\t\t\ta = m[0];\n\t\t\t\t\tb = m[1];\n\t\t\t\t\tc = m[2];\n\t\t\t\t\td = m[3];\n\t\t\t\t\ttx = m[4];\n\t\t\t\t\tty = m[5];\n\t\t\t\t\tdeterminant = (a * d - b * c);\n\t\t\t\t\tif (determinant) { //if it's zero (like if scaleX and scaleY are zero), skip it to avoid errors with dividing by zero.\n\t\t\t\t\t\tx = xOrigin * (d / determinant) + yOrigin * (-c / determinant) + ((c * ty - d * tx) / determinant);\n\t\t\t\t\t\ty = xOrigin * (-b / determinant) + yOrigin * (a / determinant) - ((a * ty - b * tx) / determinant);\n\t\t\t\t\t\txOrigin = decoratee.xOrigin = v[0] = x;\n\t\t\t\t\t\tyOrigin = decoratee.yOrigin = v[1] = y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (tm) { //avoid jump when transformOrigin is changed - adjust the x/y values accordingly\n\t\t\t\t\tif (skipRecord) {\n\t\t\t\t\t\tdecoratee.xOffset = tm.xOffset;\n\t\t\t\t\t\tdecoratee.yOffset = tm.yOffset;\n\t\t\t\t\t\ttm = decoratee;\n\t\t\t\t\t}\n\t\t\t\t\tif (smoothOrigin || (smoothOrigin !== false && CSSPlugin.defaultSmoothOrigin !== false)) {\n\t\t\t\t\t\tx = xOrigin - xOriginOld;\n\t\t\t\t\t\ty = yOrigin - yOriginOld;\n\t\t\t\t\t\t//originally, we simply adjusted the x and y values, but that would cause problems if, for example, you created a rotational tween part-way through an x/y tween. Managing the offset in a separate variable gives us ultimate flexibility.\n\t\t\t\t\t\t//tm.x -= x - (x * m[0] + y * m[2]);\n\t\t\t\t\t\t//tm.y -= y - (x * m[1] + y * m[3]);\n\t\t\t\t\t\ttm.xOffset += (x * m[0] + y * m[2]) - x;\n\t\t\t\t\t\ttm.yOffset += (x * m[1] + y * m[3]) - y;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttm.xOffset = tm.yOffset = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skipRecord) {\n\t\t\t\t\te.setAttribute(\"data-svg-origin\", v.join(\" \"));\n\t\t\t\t}\n\t\t\t},\n\t\t\t_getBBoxHack = function(swapIfPossible) { //works around issues in some browsers (like Firefox) that don't correctly report getBBox() on SVG elements inside a <defs> element and/or <mask>. We try creating an SVG, adding it to the documentElement and toss the element in there so that it's definitely part of the rendering tree, then grab the bbox and if it works, we actually swap out the original getBBox() method for our own that does these extra steps whenever getBBox is needed. This helps ensure that performance is optimal (only do all these extra steps when absolutely necessary...most elements don't need it).\n\t\t\t\tvar svg = _createElement(\"svg\", this.ownerSVGElement.getAttribute(\"xmlns\") || \"http://www.w3.org/2000/svg\"),\n\t\t\t\t\toldParent = this.parentNode,\n\t\t\t\t\toldSibling = this.nextSibling,\n\t\t\t\t\toldCSS = this.style.cssText,\n\t\t\t\t\tbbox;\n\t\t\t\t_docElement.appendChild(svg);\n\t\t\t\tsvg.appendChild(this);\n\t\t\t\tthis.style.display = \"block\";\n\t\t\t\tif (swapIfPossible) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tbbox = this.getBBox();\n\t\t\t\t\t\tthis._originalGetBBox = this.getBBox;\n\t\t\t\t\t\tthis.getBBox = _getBBoxHack;\n\t\t\t\t\t} catch (e) { }\n\t\t\t\t} else if (this._originalGetBBox) {\n\t\t\t\t\tbbox = this._originalGetBBox();\n\t\t\t\t}\n\t\t\t\tif (oldSibling) {\n\t\t\t\t\toldParent.insertBefore(this, oldSibling);\n\t\t\t\t} else {\n\t\t\t\t\toldParent.appendChild(this);\n\t\t\t\t}\n\t\t\t\t_docElement.removeChild(svg);\n\t\t\t\tthis.style.cssText = oldCSS;\n\t\t\t\treturn bbox;\n\t\t\t},\n\t\t\t_getBBox = function(e) {\n\t\t\t\ttry {\n\t\t\t\t\treturn e.getBBox(); //Firefox throws errors if you try calling getBBox() on an SVG element that's not rendered (like in a <symbol> or <defs>). https://bugzilla.mozilla.org/show_bug.cgi?id=612118\n\t\t\t\t} catch (error) {\n\t\t\t\t\treturn _getBBoxHack.call(e, true);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_isSVG = function(e) { //reports if the element is an SVG on which getBBox() actually works\n\t\t\t\treturn !!(_SVGElement && e.getCTM && _getBBox(e) && (!e.parentNode || e.ownerSVGElement));\n\t\t\t},\n\t\t\t_identity2DMatrix = [1,0,0,1,0,0],\n\t\t\t_getMatrix = function(e, force2D) {\n\t\t\t\tvar tm = e._gsTransform || new Transform(),\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\tstyle = e.style,\n\t\t\t\t\tisDefault, s, m, n, dec, none;\n\t\t\t\tif (_transformProp) {\n\t\t\t\t\ts = _getStyle(e, _transformPropCSS, null, true);\n\t\t\t\t} else if (e.currentStyle) {\n\t\t\t\t\t//for older versions of IE, we need to interpret the filter portion that is in the format: progid:DXImageTransform.Microsoft.Matrix(M11=6.123233995736766e-17, M12=-1, M21=1, M22=6.123233995736766e-17, sizingMethod='auto expand') Notice that we need to swap b and c compared to a normal matrix.\n\t\t\t\t\ts = e.currentStyle.filter.match(_ieGetMatrixExp);\n\t\t\t\t\ts = (s && s.length === 4) ? [s[0].substr(4), Number(s[2].substr(4)), Number(s[1].substr(4)), s[3].substr(4), (tm.x || 0), (tm.y || 0)].join(\",\") : \"\";\n\t\t\t\t}\n\t\t\t\tisDefault = (!s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\");\n\t\t\t\tif (isDefault && _transformProp && ((none = (_getComputedStyle(e).display === \"none\")) || !e.parentNode)) {\n\t\t\t\t\tif (none) { //browsers don't report transforms accurately unless the element is in the DOM and has a display value that's not \"none\".\n\t\t\t\t\t\tn = style.display;\n\t\t\t\t\t\tstyle.display = \"block\";\n\t\t\t\t\t}\n\t\t\t\t\tif (!e.parentNode) {\n\t\t\t\t\t\tdec = 1; //flag\n\t\t\t\t\t\t_docElement.appendChild(e);\n\t\t\t\t\t}\n\t\t\t\t\ts = _getStyle(e, _transformPropCSS, null, true);\n\t\t\t\t\tisDefault = (!s || s === \"none\" || s === \"matrix(1, 0, 0, 1, 0, 0)\");\n\t\t\t\t\tif (n) {\n\t\t\t\t\t\tstyle.display = n;\n\t\t\t\t\t} else if (none) {\n\t\t\t\t\t\t_removeProp(style, \"display\");\n\t\t\t\t\t}\n\t\t\t\t\tif (dec) {\n\t\t\t\t\t\t_docElement.removeChild(e);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (tm.svg || (e.getCTM && _isSVG(e))) {\n\t\t\t\t\tif (isDefault && (style[_transformProp] + \"\").indexOf(\"matrix\") !== -1) { //some browsers (like Chrome 40) don't correctly report transforms that are applied inline on an SVG element (they don't get included in the computed style), so we double-check here and accept matrix values\n\t\t\t\t\t\ts = style[_transformProp];\n\t\t\t\t\t\tisDefault = 0;\n\t\t\t\t\t}\n\t\t\t\t\tm = e.getAttribute(\"transform\");\n\t\t\t\t\tif (isDefault && m) {\n\t\t\t\t\t\tif (m.indexOf(\"matrix\") !== -1) { //just in case there's a \"transform\" value specified as an attribute instead of CSS style. Accept either a matrix() or simple translate() value though.\n\t\t\t\t\t\t\ts = m;\n\t\t\t\t\t\t\tisDefault = 0;\n\t\t\t\t\t\t} else if (m.indexOf(\"translate\") !== -1) {\n\t\t\t\t\t\t\ts = \"matrix(1,0,0,1,\" + m.match(/(?:\\-|\\b)[\\d\\-\\.e]+\\b/gi).join(\",\") + \")\";\n\t\t\t\t\t\t\tisDefault = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (isDefault) {\n\t\t\t\t\treturn _identity2DMatrix;\n\t\t\t\t}\n\t\t\t\t//split the matrix values out into an array (m for matrix)\n\t\t\t\tm = (s || \"\").match(_numExp) || [];\n\t\t\t\ti = m.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tn = Number(m[i]);\n\t\t\t\t\tm[i] = (dec = n - (n |= 0)) ? ((dec * rnd + (dec < 0 ? -0.5 : 0.5)) | 0) / rnd + n : n; //convert strings to Numbers and round to 5 decimal places to avoid issues with tiny numbers. Roughly 20x faster than Number.toFixed(). We also must make sure to round before dividing so that values like 0.9999999999 become 1 to avoid glitches in browser rendering and interpretation of flipped/rotated 3D matrices. And don't just multiply the number by rnd, floor it, and then divide by rnd because the bitwise operations max out at a 32-bit signed integer, thus it could get clipped at a relatively low value (like 22,000.00000 for example).\n\t\t\t\t}\n\t\t\t\treturn (force2D && m.length > 6) ? [m[0], m[1], m[4], m[5], m[12], m[13]] : m;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Parses the transform values for an element, returning an object with x, y, z, scaleX, scaleY, scaleZ, rotation, rotationX, rotationY, skewX, and skewY properties. Note: by default (for performance reasons), all skewing is combined into skewX and rotation but skewY still has a place in the transform object so that we can record how much of the skew is attributed to skewX vs skewY. Remember, a skewY of 10 looks the same as a rotation of 10 and skewX of -10.\n\t\t\t * @param {!Object} t target element\n\t\t\t * @param {Object=} cs computed style object (optional)\n\t\t\t * @param {boolean=} rec if true, the transform values will be recorded to the target element's _gsTransform object, like target._gsTransform = {x:0, y:0, z:0, scaleX:1...}\n\t\t\t * @param {boolean=} parse if true, we'll ignore any _gsTransform values that already exist on the element, and force a reparsing of the css (calculated style)\n\t\t\t * @return {object} object containing all of the transform properties/values like {x:0, y:0, z:0, scaleX:1...}\n\t\t\t */\n\t\t\t_getTransform = _internals.getTransform = function(t, cs, rec, parse) {\n\t\t\t\tif (t._gsTransform && rec && !parse) {\n\t\t\t\t\treturn t._gsTransform; //if the element already has a _gsTransform, use that. Note: some browsers don't accurately return the calculated style for the transform (particularly for SVG), so it's almost always safest to just use the values we've already applied rather than re-parsing things.\n\t\t\t\t}\n\t\t\t\tvar tm = rec ? t._gsTransform || new Transform() : new Transform(),\n\t\t\t\t\tinvX = (tm.scaleX < 0), //in order to interpret things properly, we need to know if the user applied a negative scaleX previously so that we can adjust the rotation and skewX accordingly. Otherwise, if we always interpret a flipped matrix as affecting scaleY and the user only wants to tween the scaleX on multiple sequential tweens, it would keep the negative scaleY without that being the user's intent.\n\t\t\t\t\tmin = 0.00002,\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\tzOrigin = _supports3D ? parseFloat(_getStyle(t, _transformOriginProp, cs, false, \"0 0 0\").split(\" \")[2]) || tm.zOrigin  || 0 : 0,\n\t\t\t\t\tdefaultTransformPerspective = parseFloat(CSSPlugin.defaultTransformPerspective) || 0,\n\t\t\t\t\tm, i, scaleX, scaleY, rotation, skewX;\n\n\t\t\t\ttm.svg = !!(t.getCTM && _isSVG(t));\n\t\t\t\tif (tm.svg) {\n\t\t\t\t\t_parseSVGOrigin(t, _getStyle(t, _transformOriginProp, cs, false, \"50% 50%\") + \"\", tm, t.getAttribute(\"data-svg-origin\"));\n\t\t\t\t\t_useSVGTransformAttr = CSSPlugin.useSVGTransformAttr || _forceSVGTransformAttr;\n\t\t\t\t}\n\t\t\t\tm = _getMatrix(t);\n\t\t\t\tif (m !== _identity2DMatrix) {\n\n\t\t\t\t\tif (m.length === 16) {\n\t\t\t\t\t\t//we'll only look at these position-related 6 variables first because if x/y/z all match, it's relatively safe to assume we don't need to re-parse everything which risks losing important rotational information (like rotationX:180 plus rotationY:180 would look the same as rotation:180 - there's no way to know for sure which direction was taken based solely on the matrix3d() values)\n\t\t\t\t\t\tvar a11 = m[0], a21 = m[1], a31 = m[2], a41 = m[3],\n\t\t\t\t\t\t\ta12 = m[4], a22 = m[5], a32 = m[6], a42 = m[7],\n\t\t\t\t\t\t\ta13 = m[8], a23 = m[9], a33 = m[10],\n\t\t\t\t\t\t\ta14 = m[12], a24 = m[13], a34 = m[14],\n\t\t\t\t\t\t\ta43 = m[11],\n\t\t\t\t\t\t\tangle = Math.atan2(a32, a33),\n\t\t\t\t\t\t\tt1, t2, t3, t4, cos, sin;\n\n\t\t\t\t\t\t//we manually compensate for non-zero z component of transformOrigin to work around bugs in Safari\n\t\t\t\t\t\tif (tm.zOrigin) {\n\t\t\t\t\t\t\ta34 = -tm.zOrigin;\n\t\t\t\t\t\t\ta14 = a13*a34-m[12];\n\t\t\t\t\t\t\ta24 = a23*a34-m[13];\n\t\t\t\t\t\t\ta34 = a33*a34+tm.zOrigin-m[14];\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttm.rotationX = angle * _RAD2DEG;\n\t\t\t\t\t\t//rotationX\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\tt1 = a12*cos+a13*sin;\n\t\t\t\t\t\t\tt2 = a22*cos+a23*sin;\n\t\t\t\t\t\t\tt3 = a32*cos+a33*sin;\n\t\t\t\t\t\t\ta13 = a12*-sin+a13*cos;\n\t\t\t\t\t\t\ta23 = a22*-sin+a23*cos;\n\t\t\t\t\t\t\ta33 = a32*-sin+a33*cos;\n\t\t\t\t\t\t\ta43 = a42*-sin+a43*cos;\n\t\t\t\t\t\t\ta12 = t1;\n\t\t\t\t\t\t\ta22 = t2;\n\t\t\t\t\t\t\ta32 = t3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotationY\n\t\t\t\t\t\tangle = Math.atan2(-a31, a33);\n\t\t\t\t\t\ttm.rotationY = angle * _RAD2DEG;\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\tt1 = a11*cos-a13*sin;\n\t\t\t\t\t\t\tt2 = a21*cos-a23*sin;\n\t\t\t\t\t\t\tt3 = a31*cos-a33*sin;\n\t\t\t\t\t\t\ta23 = a21*sin+a23*cos;\n\t\t\t\t\t\t\ta33 = a31*sin+a33*cos;\n\t\t\t\t\t\t\ta43 = a41*sin+a43*cos;\n\t\t\t\t\t\t\ta11 = t1;\n\t\t\t\t\t\t\ta21 = t2;\n\t\t\t\t\t\t\ta31 = t3;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//rotationZ\n\t\t\t\t\t\tangle = Math.atan2(a21, a11);\n\t\t\t\t\t\ttm.rotation = angle * _RAD2DEG;\n\t\t\t\t\t\tif (angle) {\n\t\t\t\t\t\t\tcos = Math.cos(-angle);\n\t\t\t\t\t\t\tsin = Math.sin(-angle);\n\t\t\t\t\t\t\ta11 = a11*cos+a12*sin;\n\t\t\t\t\t\t\tt2 = a21*cos+a22*sin;\n\t\t\t\t\t\t\ta22 = a21*-sin+a22*cos;\n\t\t\t\t\t\t\ta32 = a31*-sin+a32*cos;\n\t\t\t\t\t\t\ta21 = t2;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (tm.rotationX && Math.abs(tm.rotationX) + Math.abs(tm.rotation) > 359.9) { //when rotationY is set, it will often be parsed as 180 degrees different than it should be, and rotationX and rotation both being 180 (it looks the same), so we adjust for that here.\n\t\t\t\t\t\t\ttm.rotationX = tm.rotation = 0;\n\t\t\t\t\t\t\ttm.rotationY = 180 - tm.rotationY;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttm.scaleX = ((Math.sqrt(a11 * a11 + a21 * a21) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.scaleY = ((Math.sqrt(a22 * a22 + a23 * a23) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\ttm.scaleZ = ((Math.sqrt(a32 * a32 + a33 * a33) * rnd + 0.5) | 0) / rnd;\n\t\t\t\t\t\tif (tm.rotationX || tm.rotationY) {\n\t\t\t\t\t\t\ttm.skewX = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttm.skewX = (a12 || a22) ? Math.atan2(a12, a22) * _RAD2DEG + tm.rotation : tm.skewX || 0;\n\t\t\t\t\t\t\tif (Math.abs(tm.skewX) > 90 && Math.abs(tm.skewX) < 270) {\n\t\t\t\t\t\t\t\tif (invX) {\n\t\t\t\t\t\t\t\t\ttm.scaleX *= -1;\n\t\t\t\t\t\t\t\t\ttm.skewX += (tm.rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t\t\t\ttm.rotation += (tm.rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\ttm.scaleY *= -1;\n\t\t\t\t\t\t\t\t\ttm.skewX += (tm.skewX <= 0) ? 180 : -180;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttm.perspective = a43 ? 1 / ((a43 < 0) ? -a43 : a43) : 0;\n\t\t\t\t\t\ttm.x = a14;\n\t\t\t\t\t\ttm.y = a24;\n\t\t\t\t\t\ttm.z = a34;\n\t\t\t\t\t\tif (tm.svg) {\n\t\t\t\t\t\t\ttm.x -= tm.xOrigin - (tm.xOrigin * a11 - tm.yOrigin * a12);\n\t\t\t\t\t\t\ttm.y -= tm.yOrigin - (tm.yOrigin * a21 - tm.xOrigin * a22);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ((!_supports3D || parse || !m.length || tm.x !== m[4] || tm.y !== m[5] || (!tm.rotationX && !tm.rotationY))) { //sometimes a 6-element matrix is returned even when we performed 3D transforms, like if rotationX and rotationY are 180. In cases like this, we still need to honor the 3D transforms. If we just rely on the 2D info, it could affect how the data is interpreted, like scaleY might get set to -1 or rotation could get offset by 180 degrees. For example, do a TweenLite.to(element, 1, {css:{rotationX:180, rotationY:180}}) and then later, TweenLite.to(element, 1, {css:{rotationX:0}}) and without this conditional logic in place, it'd jump to a state of being unrotated when the 2nd tween starts. Then again, we need to honor the fact that the user COULD alter the transforms outside of CSSPlugin, like by manually applying new css, so we try to sense that by looking at x and y because if those changed, we know the changes were made outside CSSPlugin and we force a reinterpretation of the matrix values. Also, in Webkit browsers, if the element's \"display\" is \"none\", its calculated style value will always return empty, so if we've already recorded the values in the _gsTransform object, we'll just rely on those.\n\t\t\t\t\t\tvar k = (m.length >= 6),\n\t\t\t\t\t\t\ta = k ? m[0] : 1,\n\t\t\t\t\t\t\tb = m[1] || 0,\n\t\t\t\t\t\t\tc = m[2] || 0,\n\t\t\t\t\t\t\td = k ? m[3] : 1;\n\t\t\t\t\t\ttm.x = m[4] || 0;\n\t\t\t\t\t\ttm.y = m[5] || 0;\n\t\t\t\t\t\tscaleX = Math.sqrt(a * a + b * b);\n\t\t\t\t\t\tscaleY = Math.sqrt(d * d + c * c);\n\t\t\t\t\t\trotation = (a || b) ? Math.atan2(b, a) * _RAD2DEG : tm.rotation || 0; //note: if scaleX is 0, we cannot accurately measure rotation. Same for skewX with a scaleY of 0. Therefore, we default to the previously recorded value (or zero if that doesn't exist).\n\t\t\t\t\t\tskewX = (c || d) ? Math.atan2(c, d) * _RAD2DEG + rotation : tm.skewX || 0;\n\t\t\t\t\t\tif (Math.abs(skewX) > 90 && Math.abs(skewX) < 270) {\n\t\t\t\t\t\t\tif (invX) {\n\t\t\t\t\t\t\t\tscaleX *= -1;\n\t\t\t\t\t\t\t\tskewX += (rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t\t\trotation += (rotation <= 0) ? 180 : -180;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tscaleY *= -1;\n\t\t\t\t\t\t\t\tskewX += (skewX <= 0) ? 180 : -180;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttm.scaleX = scaleX;\n\t\t\t\t\t\ttm.scaleY = scaleY;\n\t\t\t\t\t\ttm.rotation = rotation;\n\t\t\t\t\t\ttm.skewX = skewX;\n\t\t\t\t\t\tif (_supports3D) {\n\t\t\t\t\t\t\ttm.rotationX = tm.rotationY = tm.z = 0;\n\t\t\t\t\t\t\ttm.perspective = defaultTransformPerspective;\n\t\t\t\t\t\t\ttm.scaleZ = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (tm.svg) {\n\t\t\t\t\t\t\ttm.x -= tm.xOrigin - (tm.xOrigin * a + tm.yOrigin * c);\n\t\t\t\t\t\t\ttm.y -= tm.yOrigin - (tm.xOrigin * b + tm.yOrigin * d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ttm.zOrigin = zOrigin;\n\t\t\t\t\t//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the \"e-\" towards the end) and would render the object slightly off. So we round to 0 in these cases. The conditional logic here is faster than calling Math.abs(). Also, browsers tend to render a SLIGHTLY rotated object in a fuzzy way, so we need to snap to exactly 0 when appropriate.\n\t\t\t\t\tfor (i in tm) {\n\t\t\t\t\t\tif (tm[i] < min) if (tm[i] > -min) {\n\t\t\t\t\t\t\ttm[i] = 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t//DEBUG: _log(\"parsed rotation of \" + t.getAttribute(\"id\")+\": \"+(tm.rotationX)+\", \"+(tm.rotationY)+\", \"+(tm.rotation)+\", scale: \"+tm.scaleX+\", \"+tm.scaleY+\", \"+tm.scaleZ+\", position: \"+tm.x+\", \"+tm.y+\", \"+tm.z+\", perspective: \"+tm.perspective+ \", origin: \"+ tm.xOrigin+ \",\"+ tm.yOrigin);\n\t\t\t\tif (rec) {\n\t\t\t\t\tt._gsTransform = tm; //record to the object's _gsTransform which we use so that tweens can control individual properties independently (we need all the properties to accurately recompose the matrix in the setRatio() method)\n\t\t\t\t\tif (tm.svg) { //if we're supposed to apply transforms to the SVG element's \"transform\" attribute, make sure there aren't any CSS transforms applied or they'll override the attribute ones. Also clear the transform attribute if we're using CSS, just to be clean.\n\t\t\t\t\t\tif (_useSVGTransformAttr && t.style[_transformProp]) {\n\t\t\t\t\t\t\tTweenLite.delayedCall(0.001, function(){ //if we apply this right away (before anything has rendered), we risk there being no transforms for a brief moment and it also interferes with adjusting the transformOrigin in a tween with immediateRender:true (it'd try reading the matrix and it wouldn't have the appropriate data in place because we just removed it).\n\t\t\t\t\t\t\t\t_removeProp(t.style, _transformProp);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else if (!_useSVGTransformAttr && t.getAttribute(\"transform\")) {\n\t\t\t\t\t\t\tTweenLite.delayedCall(0.001, function(){\n\t\t\t\t\t\t\t\tt.removeAttribute(\"transform\");\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn tm;\n\t\t\t},\n\n\t\t\t//for setting 2D transforms in IE6, IE7, and IE8 (must use a \"filter\" to emulate the behavior of modern day browser transforms)\n\t\t\t_setIETransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\tang = -t.rotation * _DEG2RAD,\n\t\t\t\t\tskew = ang + t.skewX * _DEG2RAD,\n\t\t\t\t\trnd = 100000,\n\t\t\t\t\ta = ((Math.cos(ang) * t.scaleX * rnd) | 0) / rnd,\n\t\t\t\t\tb = ((Math.sin(ang) * t.scaleX * rnd) | 0) / rnd,\n\t\t\t\t\tc = ((Math.sin(skew) * -t.scaleY * rnd) | 0) / rnd,\n\t\t\t\t\td = ((Math.cos(skew) * t.scaleY * rnd) | 0) / rnd,\n\t\t\t\t\tstyle = this.t.style,\n\t\t\t\t\tcs = this.t.currentStyle,\n\t\t\t\t\tfilters, val;\n\t\t\t\tif (!cs) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tval = b; //just for swapping the variables an inverting them (reused \"val\" to avoid creating another variable in memory). IE's filter matrix uses a non-standard matrix configuration (angle goes the opposite way, and b and c are reversed and inverted)\n\t\t\t\tb = -c;\n\t\t\t\tc = -val;\n\t\t\t\tfilters = cs.filter;\n\t\t\t\tstyle.filter = \"\"; //remove filters so that we can accurately measure offsetWidth/offsetHeight\n\t\t\t\tvar w = this.t.offsetWidth,\n\t\t\t\t\th = this.t.offsetHeight,\n\t\t\t\t\tclip = (cs.position !== \"absolute\"),\n\t\t\t\t\tm = \"progid:DXImageTransform.Microsoft.Matrix(M11=\" + a + \", M12=\" + b + \", M21=\" + c + \", M22=\" + d,\n\t\t\t\t\tox = t.x + (w * t.xPercent / 100),\n\t\t\t\t\toy = t.y + (h * t.yPercent / 100),\n\t\t\t\t\tdx, dy;\n\n\t\t\t\t//if transformOrigin is being used, adjust the offset x and y\n\t\t\t\tif (t.ox != null) {\n\t\t\t\t\tdx = ((t.oxp) ? w * t.ox * 0.01 : t.ox) - w / 2;\n\t\t\t\t\tdy = ((t.oyp) ? h * t.oy * 0.01 : t.oy) - h / 2;\n\t\t\t\t\tox += dx - (dx * a + dy * b);\n\t\t\t\t\toy += dy - (dx * c + dy * d);\n\t\t\t\t}\n\n\t\t\t\tif (!clip) {\n\t\t\t\t\tm += \", sizingMethod='auto expand')\";\n\t\t\t\t} else {\n\t\t\t\t\tdx = (w / 2);\n\t\t\t\t\tdy = (h / 2);\n\t\t\t\t\t//translate to ensure that transformations occur around the correct origin (default is center).\n\t\t\t\t\tm += \", Dx=\" + (dx - (dx * a + dy * b) + ox) + \", Dy=\" + (dy - (dx * c + dy * d) + oy) + \")\";\n\t\t\t\t}\n\t\t\t\tif (filters.indexOf(\"DXImageTransform.Microsoft.Matrix(\") !== -1) {\n\t\t\t\t\tstyle.filter = filters.replace(_ieSetMatrixExp, m);\n\t\t\t\t} else {\n\t\t\t\t\tstyle.filter = m + \" \" + filters; //we must always put the transform/matrix FIRST (before alpha(opacity=xx)) to avoid an IE bug that slices part of the object when rotation is applied with alpha.\n\t\t\t\t}\n\n\t\t\t\t//at the end or beginning of the tween, if the matrix is normal (1, 0, 0, 1) and opacity is 100 (or doesn't exist), remove the filter to improve browser performance.\n\t\t\t\tif (v === 0 || v === 1) if (a === 1) if (b === 0) if (c === 0) if (d === 1) if (!clip || m.indexOf(\"Dx=0, Dy=0\") !== -1) if (!_opacityExp.test(filters) || parseFloat(RegExp.$1) === 100) if (filters.indexOf(\"gradient(\" && filters.indexOf(\"Alpha\")) === -1) {\n\t\t\t\t\tstyle.removeAttribute(\"filter\");\n\t\t\t\t}\n\n\t\t\t\t//we must set the margins AFTER applying the filter in order to avoid some bugs in IE8 that could (in rare scenarios) cause them to be ignored intermittently (vibration).\n\t\t\t\tif (!clip) {\n\t\t\t\t\tvar mult = (_ieVers < 8) ? 1 : -1, //in Internet Explorer 7 and before, the box model is broken, causing the browser to treat the width/height of the actual rotated filtered image as the width/height of the box itself, but Microsoft corrected that in IE8. We must use a negative offset in IE8 on the right/bottom\n\t\t\t\t\t\tmarg, prop, dif;\n\t\t\t\t\tdx = t.ieOffsetX || 0;\n\t\t\t\t\tdy = t.ieOffsetY || 0;\n\t\t\t\t\tt.ieOffsetX = Math.round((w - ((a < 0 ? -a : a) * w + (b < 0 ? -b : b) * h)) / 2 + ox);\n\t\t\t\t\tt.ieOffsetY = Math.round((h - ((d < 0 ? -d : d) * h + (c < 0 ? -c : c) * w)) / 2 + oy);\n\t\t\t\t\tfor (i = 0; i < 4; i++) {\n\t\t\t\t\t\tprop = _margins[i];\n\t\t\t\t\t\tmarg = cs[prop];\n\t\t\t\t\t\t//we need to get the current margin in case it is being tweened separately (we want to respect that tween's changes)\n\t\t\t\t\t\tval = (marg.indexOf(\"px\") !== -1) ? parseFloat(marg) : _convertToPixels(this.t, prop, parseFloat(marg), marg.replace(_suffixExp, \"\")) || 0;\n\t\t\t\t\t\tif (val !== t[prop]) {\n\t\t\t\t\t\t\tdif = (i < 2) ? -t.ieOffsetX : -t.ieOffsetY; //if another tween is controlling a margin, we cannot only apply the difference in the ieOffsets, so we essentially zero-out the dx and dy here in that case. We record the margin(s) later so that we can keep comparing them, making this code very flexible.\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdif = (i < 2) ? dx - t.ieOffsetX : dy - t.ieOffsetY;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle[prop] = (t[prop] = Math.round( val - dif * ((i === 0 || i === 2) ? 1 : mult) )) + \"px\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/* translates a super small decimal to a string WITHOUT scientific notation\n\t\t\t_safeDecimal = function(n) {\n\t\t\t\tvar s = (n < 0 ? -n : n) + \"\",\n\t\t\t\t\ta = s.split(\"e-\");\n\t\t\t\treturn (n < 0 ? \"-0.\" : \"0.\") + new Array(parseInt(a[1], 10) || 0).join(\"0\") + a[0].split(\".\").join(\"\");\n\t\t\t},\n\t\t\t*/\n\n\t\t\t_setTransformRatio = _internals.set3DTransformRatio = _internals.setTransformRatio = function(v) {\n\t\t\t\tvar t = this.data, //refers to the element's _gsTransform object\n\t\t\t\t\tstyle = this.t.style,\n\t\t\t\t\tangle = t.rotation,\n\t\t\t\t\trotationX = t.rotationX,\n\t\t\t\t\trotationY = t.rotationY,\n\t\t\t\t\tsx = t.scaleX,\n\t\t\t\t\tsy = t.scaleY,\n\t\t\t\t\tsz = t.scaleZ,\n\t\t\t\t\tx = t.x,\n\t\t\t\t\ty = t.y,\n\t\t\t\t\tz = t.z,\n\t\t\t\t\tisSVG = t.svg,\n\t\t\t\t\tperspective = t.perspective,\n\t\t\t\t\tforce3D = t.force3D,\n\t\t\t\t\tskewY = t.skewY,\n\t\t\t\t\tskewX = t.skewX,\n\t\t\t\t\tt1,\ta11, a12, a13, a21, a22, a23, a31, a32, a33, a41, a42, a43,\n\t\t\t\t\tzOrigin, min, cos, sin, t2, transform, comma, zero, skew, rnd;\n\t\t\t\tif (skewY) { //for performance reasons, we combine all skewing into the skewX and rotation values. Remember, a skewY of 10 degrees looks the same as a rotation of 10 degrees plus a skewX of 10 degrees.\n\t\t\t\t\tskewX += skewY;\n\t\t\t\t\tangle += skewY;\n\t\t\t\t}\n\n\t\t\t\t//check to see if we should render as 2D (and SVGs must use 2D when _useSVGTransformAttr is true)\n\t\t\t\tif (((((v === 1 || v === 0) && force3D === \"auto\" && (this.tween._totalTime === this.tween._totalDuration || !this.tween._totalTime)) || !force3D) && !z && !perspective && !rotationY && !rotationX && sz === 1) || (_useSVGTransformAttr && isSVG) || !_supports3D) { //on the final render (which could be 0 for a from tween), if there are no 3D aspects, render in 2D to free up memory and improve performance especially on mobile devices. Check the tween's totalTime/totalDuration too in order to make sure it doesn't happen between repeats if it's a repeating tween.\n\n\t\t\t\t\t//2D\n\t\t\t\t\tif (angle || skewX || isSVG) {\n\t\t\t\t\t\tangle *= _DEG2RAD;\n\t\t\t\t\t\tskew = skewX * _DEG2RAD;\n\t\t\t\t\t\trnd = 100000;\n\t\t\t\t\t\ta11 = Math.cos(angle) * sx;\n\t\t\t\t\t\ta21 = Math.sin(angle) * sx;\n\t\t\t\t\t\ta12 = Math.sin(angle - skew) * -sy;\n\t\t\t\t\t\ta22 = Math.cos(angle - skew) * sy;\n\t\t\t\t\t\tif (skew && t.skewType === \"simple\") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to \"simple\" to use the uncompensated skewing that CSS does\n\t\t\t\t\t\t\tt1 = Math.tan(skew - skewY * _DEG2RAD);\n\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\ta12 *= t1;\n\t\t\t\t\t\t\ta22 *= t1;\n\t\t\t\t\t\t\tif (skewY) {\n\t\t\t\t\t\t\t\tt1 = Math.tan(skewY * _DEG2RAD);\n\t\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\t\ta11 *= t1;\n\t\t\t\t\t\t\t\ta21 *= t1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (isSVG) {\n\t\t\t\t\t\t\tx += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t\t\t\t\t\t\ty += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t\t\t\t\t\t\tif (_useSVGTransformAttr && (t.xPercent || t.yPercent)) { //The SVG spec doesn't support percentage-based translation in the \"transform\" attribute, so we merge it into the matrix to simulate it.\n\t\t\t\t\t\t\t\tmin = this.t.getBBox();\n\t\t\t\t\t\t\t\tx += t.xPercent * 0.01 * min.width;\n\t\t\t\t\t\t\t\ty += t.yPercent * 0.01 * min.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin = 0.000001;\n\t\t\t\t\t\t\tif (x < min) if (x > -min) {\n\t\t\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (y < min) if (y > -min) {\n\t\t\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttransform = (((a11 * rnd) | 0) / rnd) + \",\" + (((a21 * rnd) | 0) / rnd) + \",\" + (((a12 * rnd) | 0) / rnd) + \",\" + (((a22 * rnd) | 0) / rnd) + \",\" + x + \",\" + y + \")\";\n\t\t\t\t\t\tif (isSVG && _useSVGTransformAttr) {\n\t\t\t\t\t\t\tthis.t.setAttribute(\"transform\", \"matrix(\" + transform);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t//some browsers have a hard time with very small values like 2.4492935982947064e-16 (notice the \"e-\" towards the end) and would render the object slightly off. So we round to 5 decimal places.\n\t\t\t\t\t\t\tstyle[_transformProp] = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + transform;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstyle[_transformProp] = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix(\" : \"matrix(\") + sx + \",0,0,\" + sy + \",\" + x + \",\" + y + \")\";\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\t\t\t\tif (_isFirefox) { //Firefox has a bug (at least in v25) that causes it to render the transparent part of 32-bit PNG images as black when displayed inside an iframe and the 3D scale is very small and doesn't change sufficiently enough between renders (like if you use a Power4.easeInOut to scale from 0 to 1 where the beginning values only change a tiny amount to begin the tween before accelerating). In this case, we force the scale to be 0.00002 instead which is visually the same but works around the Firefox issue.\n\t\t\t\t\tmin = 0.0001;\n\t\t\t\t\tif (sx < min && sx > -min) {\n\t\t\t\t\t\tsx = sz = 0.00002;\n\t\t\t\t\t}\n\t\t\t\t\tif (sy < min && sy > -min) {\n\t\t\t\t\t\tsy = sz = 0.00002;\n\t\t\t\t\t}\n\t\t\t\t\tif (perspective && !t.z && !t.rotationX && !t.rotationY) { //Firefox has a bug that causes elements to have an odd super-thin, broken/dotted black border on elements that have a perspective set but aren't utilizing 3D space (no rotationX, rotationY, or z).\n\t\t\t\t\t\tperspective = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (angle || skewX) {\n\t\t\t\t\tangle *= _DEG2RAD;\n\t\t\t\t\tcos = a11 = Math.cos(angle);\n\t\t\t\t\tsin = a21 = Math.sin(angle);\n\t\t\t\t\tif (skewX) {\n\t\t\t\t\t\tangle -= skewX * _DEG2RAD;\n\t\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\t\tif (t.skewType === \"simple\") { //by default, we compensate skewing on the other axis to make it look more natural, but you can set the skewType to \"simple\" to use the uncompensated skewing that CSS does\n\t\t\t\t\t\t\tt1 = Math.tan((skewX - skewY) * _DEG2RAD);\n\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\tcos *= t1;\n\t\t\t\t\t\t\tsin *= t1;\n\t\t\t\t\t\t\tif (t.skewY) {\n\t\t\t\t\t\t\t\tt1 = Math.tan(skewY * _DEG2RAD);\n\t\t\t\t\t\t\t\tt1 = Math.sqrt(1 + t1 * t1);\n\t\t\t\t\t\t\t\ta11 *= t1;\n\t\t\t\t\t\t\t\ta21 *= t1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\ta12 = -sin;\n\t\t\t\t\ta22 = cos;\n\n\t\t\t\t} else if (!rotationY && !rotationX && sz === 1 && !perspective && !isSVG) { //if we're only translating and/or 2D scaling, this is faster...\n\t\t\t\t\tstyle[_transformProp] = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) translate3d(\" : \"translate3d(\") + x + \"px,\" + y + \"px,\" + z +\"px)\" + ((sx !== 1 || sy !== 1) ? \" scale(\" + sx + \",\" + sy + \")\" : \"\");\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\ta11 = a22 = 1;\n\t\t\t\t\ta12 = a21 = 0;\n\t\t\t\t}\n\t\t\t\t// KEY  INDEX   AFFECTS\n\t\t\t\t// a11  0       rotation, rotationY, scaleX\n\t\t\t\t// a21  1       rotation, rotationY, scaleX\n\t\t\t\t// a31  2       rotationY, scaleX\n\t\t\t\t// a41  3       rotationY, scaleX\n\t\t\t\t// a12  4       rotation, skewX, rotationX, scaleY\n\t\t\t\t// a22  5       rotation, skewX, rotationX, scaleY\n\t\t\t\t// a32  6       rotationX, scaleY\n\t\t\t\t// a42  7       rotationX, scaleY\n\t\t\t\t// a13  8       rotationY, rotationX, scaleZ\n\t\t\t\t// a23  9       rotationY, rotationX, scaleZ\n\t\t\t\t// a33  10      rotationY, rotationX, scaleZ\n\t\t\t\t// a43  11      rotationY, rotationX, perspective, scaleZ\n\t\t\t\t// a14  12      x, zOrigin, svgOrigin\n\t\t\t\t// a24  13      y, zOrigin, svgOrigin\n\t\t\t\t// a34  14      z, zOrigin\n\t\t\t\t// a44  15\n\t\t\t\t// rotation: Math.atan2(a21, a11)\n\t\t\t\t// rotationY: Math.atan2(a13, a33) (or Math.atan2(a13, a11))\n\t\t\t\t// rotationX: Math.atan2(a32, a33)\n\t\t\t\ta33 = 1;\n\t\t\t\ta13 = a23 = a31 = a32 = a41 = a42 = 0;\n\t\t\t\ta43 = (perspective) ? -1 / perspective : 0;\n\t\t\t\tzOrigin = t.zOrigin;\n\t\t\t\tmin = 0.000001; //threshold below which browsers use scientific notation which won't work.\n\t\t\t\tcomma = \",\";\n\t\t\t\tzero = \"0\";\n\t\t\t\tangle = rotationY * _DEG2RAD;\n\t\t\t\tif (angle) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\ta31 = -sin;\n\t\t\t\t\ta41 = a43*-sin;\n\t\t\t\t\ta13 = a11*sin;\n\t\t\t\t\ta23 = a21*sin;\n\t\t\t\t\ta33 = cos;\n\t\t\t\t\ta43 *= cos;\n\t\t\t\t\ta11 *= cos;\n\t\t\t\t\ta21 *= cos;\n\t\t\t\t}\n\t\t\t\tangle = rotationX * _DEG2RAD;\n\t\t\t\tif (angle) {\n\t\t\t\t\tcos = Math.cos(angle);\n\t\t\t\t\tsin = Math.sin(angle);\n\t\t\t\t\tt1 = a12*cos+a13*sin;\n\t\t\t\t\tt2 = a22*cos+a23*sin;\n\t\t\t\t\ta32 = a33*sin;\n\t\t\t\t\ta42 = a43*sin;\n\t\t\t\t\ta13 = a12*-sin+a13*cos;\n\t\t\t\t\ta23 = a22*-sin+a23*cos;\n\t\t\t\t\ta33 = a33*cos;\n\t\t\t\t\ta43 = a43*cos;\n\t\t\t\t\ta12 = t1;\n\t\t\t\t\ta22 = t2;\n\t\t\t\t}\n\t\t\t\tif (sz !== 1) {\n\t\t\t\t\ta13*=sz;\n\t\t\t\t\ta23*=sz;\n\t\t\t\t\ta33*=sz;\n\t\t\t\t\ta43*=sz;\n\t\t\t\t}\n\t\t\t\tif (sy !== 1) {\n\t\t\t\t\ta12*=sy;\n\t\t\t\t\ta22*=sy;\n\t\t\t\t\ta32*=sy;\n\t\t\t\t\ta42*=sy;\n\t\t\t\t}\n\t\t\t\tif (sx !== 1) {\n\t\t\t\t\ta11*=sx;\n\t\t\t\t\ta21*=sx;\n\t\t\t\t\ta31*=sx;\n\t\t\t\t\ta41*=sx;\n\t\t\t\t}\n\n\t\t\t\tif (zOrigin || isSVG) {\n\t\t\t\t\tif (zOrigin) {\n\t\t\t\t\t\tx += a13*-zOrigin;\n\t\t\t\t\t\ty += a23*-zOrigin;\n\t\t\t\t\t\tz += a33*-zOrigin+zOrigin;\n\t\t\t\t\t}\n\t\t\t\t\tif (isSVG) { //due to bugs in some browsers, we need to manage the transform-origin of SVG manually\n\t\t\t\t\t\tx += t.xOrigin - (t.xOrigin * a11 + t.yOrigin * a12) + t.xOffset;\n\t\t\t\t\t\ty += t.yOrigin - (t.xOrigin * a21 + t.yOrigin * a22) + t.yOffset;\n\t\t\t\t\t}\n\t\t\t\t\tif (x < min && x > -min) {\n\t\t\t\t\t\tx = zero;\n\t\t\t\t\t}\n\t\t\t\t\tif (y < min && y > -min) {\n\t\t\t\t\t\ty = zero;\n\t\t\t\t\t}\n\t\t\t\t\tif (z < min && z > -min) {\n\t\t\t\t\t\tz = 0; //don't use string because we calculate perspective later and need the number.\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t//optimized way of concatenating all the values into a string. If we do it all in one shot, it's slower because of the way browsers have to create temp strings and the way it affects memory. If we do it piece-by-piece with +=, it's a bit slower too. We found that doing it in these sized chunks works best overall:\n\t\t\t\ttransform = ((t.xPercent || t.yPercent) ? \"translate(\" + t.xPercent + \"%,\" + t.yPercent + \"%) matrix3d(\" : \"matrix3d(\");\n\t\t\t\ttransform += ((a11 < min && a11 > -min) ? zero : a11) + comma + ((a21 < min && a21 > -min) ? zero : a21) + comma + ((a31 < min && a31 > -min) ? zero : a31);\n\t\t\t\ttransform += comma + ((a41 < min && a41 > -min) ? zero : a41) + comma + ((a12 < min && a12 > -min) ? zero : a12) + comma + ((a22 < min && a22 > -min) ? zero : a22);\n\t\t\t\tif (rotationX || rotationY || sz !== 1) { //performance optimization (often there's no rotationX or rotationY, so we can skip these calculations)\n\t\t\t\t\ttransform += comma + ((a32 < min && a32 > -min) ? zero : a32) + comma + ((a42 < min && a42 > -min) ? zero : a42) + comma + ((a13 < min && a13 > -min) ? zero : a13);\n\t\t\t\t\ttransform += comma + ((a23 < min && a23 > -min) ? zero : a23) + comma + ((a33 < min && a33 > -min) ? zero : a33) + comma + ((a43 < min && a43 > -min) ? zero : a43) + comma;\n\t\t\t\t} else {\n\t\t\t\t\ttransform += \",0,0,0,0,1,0,\";\n\t\t\t\t}\n\t\t\t\ttransform += x + comma + y + comma + z + comma + (perspective ? (1 + (-z / perspective)) : 1) + \")\";\n\n\t\t\t\tstyle[_transformProp] = transform;\n\t\t\t};\n\n\t\tp = Transform.prototype;\n\t\tp.x = p.y = p.z = p.skewX = p.skewY = p.rotation = p.rotationX = p.rotationY = p.zOrigin = p.xPercent = p.yPercent = p.xOffset = p.yOffset = 0;\n\t\tp.scaleX = p.scaleY = p.scaleZ = 1;\n\n\t\t_registerComplexSpecialProp(\"transform,scale,scaleX,scaleY,scaleZ,x,y,z,rotation,rotationX,rotationY,rotationZ,skewX,skewY,shortRotation,shortRotationX,shortRotationY,shortRotationZ,transformOrigin,svgOrigin,transformPerspective,directionalRotation,parseTransform,force3D,skewType,xPercent,yPercent,smoothOrigin\", {parser:function(t, e, parsingProp, cssp, pt, plugin, vars) {\n\t\t\tif (cssp._lastParsedTransform === vars) { return pt; } //only need to parse the transform once, and only if the browser supports it.\n\t\t\tcssp._lastParsedTransform = vars;\n\t\t\tvar scaleFunc = (vars.scale && typeof(vars.scale) === \"function\") ? vars.scale : 0, //if there's a function-based \"scale\" value, swap in the resulting numeric value temporarily. Otherwise, if it's called for both scaleX and scaleY independently, they may not match (like if the function uses Math.random()).\n\t\t\t\tswapFunc;\n\t\t\tif (typeof(vars[parsingProp]) === \"function\") { //whatever property triggers the initial parsing might be a function-based value in which case it already got called in parse(), thus we don't want to call it again in here. The most efficient way to avoid this is to temporarily swap the value directly into the vars object, and then after we do all our parsing in this function, we'll swap it back again.\n\t\t\t\tswapFunc = vars[parsingProp];\n\t\t\t\tvars[parsingProp] = e;\n\t\t\t}\n\t\t\tif (scaleFunc) {\n\t\t\t\tvars.scale = scaleFunc(_index, t);\n\t\t\t}\n\t\t\tvar originalGSTransform = t._gsTransform,\n\t\t\t\tstyle = t.style,\n\t\t\t\tmin = 0.000001,\n\t\t\t\ti = _transformProps.length,\n\t\t\t\tv = vars,\n\t\t\t\tendRotations = {},\n\t\t\t\ttransformOriginString = \"transformOrigin\",\n\t\t\t\tm1 = _getTransform(t, _cs, true, v.parseTransform),\n\t\t\t\torig = v.transform && ((typeof(v.transform) === \"function\") ? v.transform(_index, _target) : v.transform),\n\t\t\t\tm2, copy, has3D, hasChange, dr, x, y, matrix, p;\n\t\t\tcssp._transform = m1;\n\t\t\tif (orig && typeof(orig) === \"string\" && _transformProp) { //for values like transform:\"rotate(60deg) scale(0.5, 0.8)\"\n\t\t\t\tcopy = _tempDiv.style; //don't use the original target because it might be SVG in which case some browsers don't report computed style correctly.\n\t\t\t\tcopy[_transformProp] = orig;\n\t\t\t\tcopy.display = \"block\"; //if display is \"none\", the browser often refuses to report the transform properties correctly.\n\t\t\t\tcopy.position = \"absolute\";\n\t\t\t\t_doc.body.appendChild(_tempDiv);\n\t\t\t\tm2 = _getTransform(_tempDiv, null, false);\n\t\t\t\tif (m1.svg) { //if it's an SVG element, x/y part of the matrix will be affected by whatever we use as the origin and the offsets, so compensate here...\n\t\t\t\t\tx = m1.xOrigin;\n\t\t\t\t\ty = m1.yOrigin;\n\t\t\t\t\tm2.x -= m1.xOffset;\n\t\t\t\t\tm2.y -= m1.yOffset;\n\t\t\t\t\tif (v.transformOrigin || v.svgOrigin) { //if this tween is altering the origin, we must factor that in here. The actual work of recording the transformOrigin values and setting up the PropTween is done later (still inside this function) so we cannot leave the changes intact here - we only want to update the x/y accordingly.\n\t\t\t\t\t\torig = {};\n\t\t\t\t\t\t_parseSVGOrigin(t, _parsePosition(v.transformOrigin), orig, v.svgOrigin, v.smoothOrigin, true);\n\t\t\t\t\t\tx = orig.xOrigin;\n\t\t\t\t\t\ty = orig.yOrigin;\n\t\t\t\t\t\tm2.x -= orig.xOffset - m1.xOffset;\n\t\t\t\t\t\tm2.y -= orig.yOffset - m1.yOffset;\n\t\t\t\t\t}\n\t\t\t\t\tif (x || y) {\n\t\t\t\t\t\tmatrix = _getMatrix(_tempDiv, true);\n\t\t\t\t\t\tm2.x -= x - (x * matrix[0] + y * matrix[2]);\n\t\t\t\t\t\tm2.y -= y - (x * matrix[1] + y * matrix[3]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_doc.body.removeChild(_tempDiv);\n\t\t\t\tif (!m2.perspective) {\n\t\t\t\t\tm2.perspective = m1.perspective; //tweening to no perspective gives very unintuitive results - just keep the same perspective in that case.\n\t\t\t\t}\n\t\t\t\tif (v.xPercent != null) {\n\t\t\t\t\tm2.xPercent = _parseVal(v.xPercent, m1.xPercent);\n\t\t\t\t}\n\t\t\t\tif (v.yPercent != null) {\n\t\t\t\t\tm2.yPercent = _parseVal(v.yPercent, m1.yPercent);\n\t\t\t\t}\n\t\t\t} else if (typeof(v) === \"object\") { //for values like scaleX, scaleY, rotation, x, y, skewX, and skewY or transform:{...} (object)\n\t\t\t\tm2 = {scaleX:_parseVal((v.scaleX != null) ? v.scaleX : v.scale, m1.scaleX),\n\t\t\t\t\tscaleY:_parseVal((v.scaleY != null) ? v.scaleY : v.scale, m1.scaleY),\n\t\t\t\t\tscaleZ:_parseVal(v.scaleZ, m1.scaleZ),\n\t\t\t\t\tx:_parseVal(v.x, m1.x),\n\t\t\t\t\ty:_parseVal(v.y, m1.y),\n\t\t\t\t\tz:_parseVal(v.z, m1.z),\n\t\t\t\t\txPercent:_parseVal(v.xPercent, m1.xPercent),\n\t\t\t\t\tyPercent:_parseVal(v.yPercent, m1.yPercent),\n\t\t\t\t\tperspective:_parseVal(v.transformPerspective, m1.perspective)};\n\t\t\t\tdr = v.directionalRotation;\n\t\t\t\tif (dr != null) {\n\t\t\t\t\tif (typeof(dr) === \"object\") {\n\t\t\t\t\t\tfor (copy in dr) {\n\t\t\t\t\t\t\tv[copy] = dr[copy];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tv.rotation = dr;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (typeof(v.x) === \"string\" && v.x.indexOf(\"%\") !== -1) {\n\t\t\t\t\tm2.x = 0;\n\t\t\t\t\tm2.xPercent = _parseVal(v.x, m1.xPercent);\n\t\t\t\t}\n\t\t\t\tif (typeof(v.y) === \"string\" && v.y.indexOf(\"%\") !== -1) {\n\t\t\t\t\tm2.y = 0;\n\t\t\t\t\tm2.yPercent = _parseVal(v.y, m1.yPercent);\n\t\t\t\t}\n\n\t\t\t\tm2.rotation = _parseAngle((\"rotation\" in v) ? v.rotation : (\"shortRotation\" in v) ? v.shortRotation + \"_short\" : (\"rotationZ\" in v) ? v.rotationZ : m1.rotation, m1.rotation, \"rotation\", endRotations);\n\t\t\t\tif (_supports3D) {\n\t\t\t\t\tm2.rotationX = _parseAngle((\"rotationX\" in v) ? v.rotationX : (\"shortRotationX\" in v) ? v.shortRotationX + \"_short\" : m1.rotationX || 0, m1.rotationX, \"rotationX\", endRotations);\n\t\t\t\t\tm2.rotationY = _parseAngle((\"rotationY\" in v) ? v.rotationY : (\"shortRotationY\" in v) ? v.shortRotationY + \"_short\" : m1.rotationY || 0, m1.rotationY, \"rotationY\", endRotations);\n\t\t\t\t}\n\t\t\t\tm2.skewX = _parseAngle(v.skewX, m1.skewX);\n\t\t\t\tm2.skewY = _parseAngle(v.skewY, m1.skewY);\n\t\t\t}\n\t\t\tif (_supports3D && v.force3D != null) {\n\t\t\t\tm1.force3D = v.force3D;\n\t\t\t\thasChange = true;\n\t\t\t}\n\n\t\t\tm1.skewType = v.skewType || m1.skewType || CSSPlugin.defaultSkewType;\n\n\t\t\thas3D = (m1.force3D || m1.z || m1.rotationX || m1.rotationY || m2.z || m2.rotationX || m2.rotationY || m2.perspective);\n\t\t\tif (!has3D && v.scale != null) {\n\t\t\t\tm2.scaleZ = 1; //no need to tween scaleZ.\n\t\t\t}\n\n\t\t\twhile (--i > -1) {\n\t\t\t\tp = _transformProps[i];\n\t\t\t\torig = m2[p] - m1[p];\n\t\t\t\tif (orig > min || orig < -min || v[p] != null || _forcePT[p] != null) {\n\t\t\t\t\thasChange = true;\n\t\t\t\t\tpt = new CSSPropTween(m1, p, m1[p], orig, pt);\n\t\t\t\t\tif (p in endRotations) {\n\t\t\t\t\t\tpt.e = endRotations[p]; //directional rotations typically have compensated values during the tween, but we need to make sure they end at exactly what the user requested\n\t\t\t\t\t}\n\t\t\t\t\tpt.xs0 = 0; //ensures the value stays numeric in setRatio()\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t\tcssp._overwriteProps.push(pt.n);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\torig = v.transformOrigin;\n\t\t\tif (m1.svg && (orig || v.svgOrigin)) {\n\t\t\t\tx = m1.xOffset; //when we change the origin, in order to prevent things from jumping we adjust the x/y so we must record those here so that we can create PropTweens for them and flip them at the same time as the origin\n\t\t\t\ty = m1.yOffset;\n\t\t\t\t_parseSVGOrigin(t, _parsePosition(orig), m2, v.svgOrigin, v.smoothOrigin);\n\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"xOrigin\", (originalGSTransform ? m1 : m2).xOrigin, m2.xOrigin, pt, transformOriginString); //note: if there wasn't a transformOrigin defined yet, just start with the destination one; it's wasteful otherwise, and it causes problems with fromTo() tweens. For example, TweenLite.to(\"#wheel\", 3, {rotation:180, transformOrigin:\"50% 50%\", delay:1}); TweenLite.fromTo(\"#wheel\", 3, {scale:0.5, transformOrigin:\"50% 50%\"}, {scale:1, delay:2}); would cause a jump when the from values revert at the beginning of the 2nd tween.\n\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"yOrigin\", (originalGSTransform ? m1 : m2).yOrigin, m2.yOrigin, pt, transformOriginString);\n\t\t\t\tif (x !== m1.xOffset || y !== m1.yOffset) {\n\t\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"xOffset\", (originalGSTransform ? x : m1.xOffset), m1.xOffset, pt, transformOriginString);\n\t\t\t\t\tpt = _addNonTweeningNumericPT(m1, \"yOffset\", (originalGSTransform ? y : m1.yOffset), m1.yOffset, pt, transformOriginString);\n\t\t\t\t}\n\t\t\t\torig = \"0px 0px\"; //certain browsers (like firefox) completely botch transform-origin, so we must remove it to prevent it from contaminating transforms. We manage it ourselves with xOrigin and yOrigin\n\t\t\t}\n\t\t\tif (orig || (_supports3D && has3D && m1.zOrigin)) { //if anything 3D is happening and there's a transformOrigin with a z component that's non-zero, we must ensure that the transformOrigin's z-component is set to 0 so that we can manually do those calculations to get around Safari bugs. Even if the user didn't specifically define a \"transformOrigin\" in this particular tween (maybe they did it via css directly).\n\t\t\t\tif (_transformProp) {\n\t\t\t\t\thasChange = true;\n\t\t\t\t\tp = _transformOriginProp;\n\t\t\t\t\torig = (orig || _getStyle(t, p, _cs, false, \"50% 50%\")) + \"\"; //cast as string to avoid errors\n\t\t\t\t\tpt = new CSSPropTween(style, p, 0, 0, pt, -1, transformOriginString);\n\t\t\t\t\tpt.b = style[p];\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t\tif (_supports3D) {\n\t\t\t\t\t\tcopy = m1.zOrigin;\n\t\t\t\t\t\torig = orig.split(\" \");\n\t\t\t\t\t\tm1.zOrigin = ((orig.length > 2 && !(copy !== 0 && orig[2] === \"0px\")) ? parseFloat(orig[2]) : copy) || 0; //Safari doesn't handle the z part of transformOrigin correctly, so we'll manually handle it in the _set3DTransformRatio() method.\n\t\t\t\t\t\tpt.xs0 = pt.e = orig[0] + \" \" + (orig[1] || \"50%\") + \" 0px\"; //we must define a z value of 0px specifically otherwise iOS 5 Safari will stick with the old one (if one was defined)!\n\t\t\t\t\t\tpt = new CSSPropTween(m1, \"zOrigin\", 0, 0, pt, -1, pt.n); //we must create a CSSPropTween for the _gsTransform.zOrigin so that it gets reset properly at the beginning if the tween runs backward (as opposed to just setting m1.zOrigin here)\n\t\t\t\t\t\tpt.b = copy;\n\t\t\t\t\t\tpt.xs0 = pt.e = m1.zOrigin;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.xs0 = pt.e = orig;\n\t\t\t\t\t}\n\n\t\t\t\t\t//for older versions of IE (6-8), we need to manually calculate things inside the setRatio() function. We record origin x and y (ox and oy) and whether or not the values are percentages (oxp and oyp).\n\t\t\t\t} else {\n\t\t\t\t\t_parsePosition(orig + \"\", m1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (hasChange) {\n\t\t\t\tcssp._transformType = (!(m1.svg && _useSVGTransformAttr) && (has3D || this._transformType === 3)) ? 3 : 2; //quicker than calling cssp._enableTransforms();\n\t\t\t}\n\t\t\tif (swapFunc) {\n\t\t\t\tvars[parsingProp] = swapFunc;\n\t\t\t}\n\t\t\tif (scaleFunc) {\n\t\t\t\tvars.scale = scaleFunc;\n\t\t\t}\n\t\t\treturn pt;\n\t\t}, prefix:true});\n\n\t\t_registerComplexSpecialProp(\"boxShadow\", {defaultValue:\"0px 0px 0px 0px #999\", prefix:true, color:true, multi:true, keyword:\"inset\"});\n\n\t\t_registerComplexSpecialProp(\"borderRadius\", {defaultValue:\"0px\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\te = this.format(e);\n\t\t\tvar props = [\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderBottomRightRadius\",\"borderBottomLeftRadius\"],\n\t\t\t\tstyle = t.style,\n\t\t\t\tea1, i, es2, bs2, bs, es, bn, en, w, h, esfx, bsfx, rel, hn, vn, em;\n\t\t\tw = parseFloat(t.offsetWidth);\n\t\t\th = parseFloat(t.offsetHeight);\n\t\t\tea1 = e.split(\" \");\n\t\t\tfor (i = 0; i < props.length; i++) { //if we're dealing with percentages, we must convert things separately for the horizontal and vertical axis!\n\t\t\t\tif (this.p.indexOf(\"border\")) { //older browsers used a prefix\n\t\t\t\t\tprops[i] = _checkPropPrefix(props[i]);\n\t\t\t\t}\n\t\t\t\tbs = bs2 = _getStyle(t, props[i], _cs, false, \"0px\");\n\t\t\t\tif (bs.indexOf(\" \") !== -1) {\n\t\t\t\t\tbs2 = bs.split(\" \");\n\t\t\t\t\tbs = bs2[0];\n\t\t\t\t\tbs2 = bs2[1];\n\t\t\t\t}\n\t\t\t\tes = es2 = ea1[i];\n\t\t\t\tbn = parseFloat(bs);\n\t\t\t\tbsfx = bs.substr((bn + \"\").length);\n\t\t\t\trel = (es.charAt(1) === \"=\");\n\t\t\t\tif (rel) {\n\t\t\t\t\ten = parseInt(es.charAt(0)+\"1\", 10);\n\t\t\t\t\tes = es.substr(2);\n\t\t\t\t\ten *= parseFloat(es);\n\t\t\t\t\tesfx = es.substr((en + \"\").length - (en < 0 ? 1 : 0)) || \"\";\n\t\t\t\t} else {\n\t\t\t\t\ten = parseFloat(es);\n\t\t\t\t\tesfx = es.substr((en + \"\").length);\n\t\t\t\t}\n\t\t\t\tif (esfx === \"\") {\n\t\t\t\t\tesfx = _suffixMap[p] || bsfx;\n\t\t\t\t}\n\t\t\t\tif (esfx !== bsfx) {\n\t\t\t\t\thn = _convertToPixels(t, \"borderLeft\", bn, bsfx); //horizontal number (we use a bogus \"borderLeft\" property just because the _convertToPixels() method searches for the keywords \"Left\", \"Right\", \"Top\", and \"Bottom\" to determine of it's a horizontal or vertical property, and we need \"border\" in the name so that it knows it should measure relative to the element itself, not its parent.\n\t\t\t\t\tvn = _convertToPixels(t, \"borderTop\", bn, bsfx); //vertical number\n\t\t\t\t\tif (esfx === \"%\") {\n\t\t\t\t\t\tbs = (hn / w * 100) + \"%\";\n\t\t\t\t\t\tbs2 = (vn / h * 100) + \"%\";\n\t\t\t\t\t} else if (esfx === \"em\") {\n\t\t\t\t\t\tem = _convertToPixels(t, \"borderLeft\", 1, \"em\");\n\t\t\t\t\t\tbs = (hn / em) + \"em\";\n\t\t\t\t\t\tbs2 = (vn / em) + \"em\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbs = hn + \"px\";\n\t\t\t\t\t\tbs2 = vn + \"px\";\n\t\t\t\t\t}\n\t\t\t\t\tif (rel) {\n\t\t\t\t\t\tes = (parseFloat(bs) + en) + esfx;\n\t\t\t\t\t\tes2 = (parseFloat(bs2) + en) + esfx;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = _parseComplex(style, props[i], bs + \" \" + bs2, es + \" \" + es2, false, \"0px\", pt);\n\t\t\t}\n\t\t\treturn pt;\n\t\t}, prefix:true, formatter:_getFormatter(\"0px 0px 0px 0px\", false, true)});\n\t\t_registerComplexSpecialProp(\"borderBottomLeftRadius,borderBottomRightRadius,borderTopLeftRadius,borderTopRightRadius\", {defaultValue:\"0px\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\treturn _parseComplex(t.style, p, this.format(_getStyle(t, p, _cs, false, \"0px 0px\")), this.format(e), false, \"0px\", pt);\n\t\t}, prefix:true, formatter:_getFormatter(\"0px 0px\", false, true)});\n\t\t_registerComplexSpecialProp(\"backgroundPosition\", {defaultValue:\"0 0\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar bp = \"background-position\",\n\t\t\t\tcs = (_cs || _getComputedStyle(t, null)),\n\t\t\t\tbs = this.format( ((cs) ? _ieVers ? cs.getPropertyValue(bp + \"-x\") + \" \" + cs.getPropertyValue(bp + \"-y\") : cs.getPropertyValue(bp) : t.currentStyle.backgroundPositionX + \" \" + t.currentStyle.backgroundPositionY) || \"0 0\"), //Internet Explorer doesn't report background-position correctly - we must query background-position-x and background-position-y and combine them (even in IE10). Before IE9, we must do the same with the currentStyle object and use camelCase\n\t\t\t\tes = this.format(e),\n\t\t\t\tba, ea, i, pct, overlap, src;\n\t\t\tif ((bs.indexOf(\"%\") !== -1) !== (es.indexOf(\"%\") !== -1) && es.split(\",\").length < 2) {\n\t\t\t\tsrc = _getStyle(t, \"backgroundImage\").replace(_urlExp, \"\");\n\t\t\t\tif (src && src !== \"none\") {\n\t\t\t\t\tba = bs.split(\" \");\n\t\t\t\t\tea = es.split(\" \");\n\t\t\t\t\t_tempImg.setAttribute(\"src\", src); //set the temp IMG's src to the background-image so that we can measure its width/height\n\t\t\t\t\ti = 2;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tbs = ba[i];\n\t\t\t\t\t\tpct = (bs.indexOf(\"%\") !== -1);\n\t\t\t\t\t\tif (pct !== (ea[i].indexOf(\"%\") !== -1)) {\n\t\t\t\t\t\t\toverlap = (i === 0) ? t.offsetWidth - _tempImg.width : t.offsetHeight - _tempImg.height;\n\t\t\t\t\t\t\tba[i] = pct ? (parseFloat(bs) / 100 * overlap) + \"px\" : (parseFloat(bs) / overlap * 100) + \"%\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbs = ba.join(\" \");\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, bs, es, pt, plugin);\n\t\t}, formatter:_parsePosition});\n\t\t_registerComplexSpecialProp(\"backgroundSize\", {defaultValue:\"0 0\", formatter:function(v) {\n\t\t\tv += \"\"; //ensure it's a string\n\t\t\treturn _parsePosition(v.indexOf(\" \") === -1 ? v + \" \" + v : v); //if set to something like \"100% 100%\", Safari typically reports the computed style as just \"100%\" (no 2nd value), but we should ensure that there are two values, so copy the first one. Otherwise, it'd be interpreted as \"100% 0\" (wrong).\n\t\t}});\n\t\t_registerComplexSpecialProp(\"perspective\", {defaultValue:\"0px\", prefix:true});\n\t\t_registerComplexSpecialProp(\"perspectiveOrigin\", {defaultValue:\"50% 50%\", prefix:true});\n\t\t_registerComplexSpecialProp(\"transformStyle\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"backfaceVisibility\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"userSelect\", {prefix:true});\n\t\t_registerComplexSpecialProp(\"margin\", {parser:_getEdgeParser(\"marginTop,marginRight,marginBottom,marginLeft\")});\n\t\t_registerComplexSpecialProp(\"padding\", {parser:_getEdgeParser(\"paddingTop,paddingRight,paddingBottom,paddingLeft\")});\n\t\t_registerComplexSpecialProp(\"clip\", {defaultValue:\"rect(0px,0px,0px,0px)\", parser:function(t, e, p, cssp, pt, plugin){\n\t\t\tvar b, cs, delim;\n\t\t\tif (_ieVers < 9) { //IE8 and earlier don't report a \"clip\" value in the currentStyle - instead, the values are split apart into clipTop, clipRight, clipBottom, and clipLeft. Also, in IE7 and earlier, the values inside rect() are space-delimited, not comma-delimited.\n\t\t\t\tcs = t.currentStyle;\n\t\t\t\tdelim = _ieVers < 8 ? \" \" : \",\";\n\t\t\t\tb = \"rect(\" + cs.clipTop + delim + cs.clipRight + delim + cs.clipBottom + delim + cs.clipLeft + \")\";\n\t\t\t\te = this.format(e).split(\",\").join(delim);\n\t\t\t} else {\n\t\t\t\tb = this.format(_getStyle(t, this.p, _cs, false, this.dflt));\n\t\t\t\te = this.format(e);\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, b, e, pt, plugin);\n\t\t}});\n\t\t_registerComplexSpecialProp(\"textShadow\", {defaultValue:\"0px 0px 0px #999\", color:true, multi:true});\n\t\t_registerComplexSpecialProp(\"autoRound,strictUnits\", {parser:function(t, e, p, cssp, pt) {return pt;}}); //just so that we can ignore these properties (not tween them)\n\t\t_registerComplexSpecialProp(\"border\", {defaultValue:\"0px solid #000\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar bw = _getStyle(t, \"borderTopWidth\", _cs, false, \"0px\"),\n\t\t\t\tend = this.format(e).split(\" \"),\n\t\t\t\tesfx = end[0].replace(_suffixExp, \"\");\n\t\t\tif (esfx !== \"px\") { //if we're animating to a non-px value, we need to convert the beginning width to that unit.\n\t\t\t\tbw = (parseFloat(bw) / _convertToPixels(t, \"borderTopWidth\", 1, esfx)) + esfx;\n\t\t\t}\n\t\t\treturn this.parseComplex(t.style, this.format(bw + \" \" + _getStyle(t, \"borderTopStyle\", _cs, false, \"solid\") + \" \" + _getStyle(t, \"borderTopColor\", _cs, false, \"#000\")), end.join(\" \"), pt, plugin);\n\t\t\t}, color:true, formatter:function(v) {\n\t\t\t\tvar a = v.split(\" \");\n\t\t\t\treturn a[0] + \" \" + (a[1] || \"solid\") + \" \" + (v.match(_colorExp) || [\"#000\"])[0];\n\t\t\t}});\n\t\t_registerComplexSpecialProp(\"borderWidth\", {parser:_getEdgeParser(\"borderTopWidth,borderRightWidth,borderBottomWidth,borderLeftWidth\")}); //Firefox doesn't pick up on borderWidth set in style sheets (only inline).\n\t\t_registerComplexSpecialProp(\"float,cssFloat,styleFloat\", {parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar s = t.style,\n\t\t\t\tprop = (\"cssFloat\" in s) ? \"cssFloat\" : \"styleFloat\";\n\t\t\treturn new CSSPropTween(s, prop, 0, 0, pt, -1, p, false, 0, s[prop], e);\n\t\t}});\n\n\t\t//opacity-related\n\t\tvar _setIEOpacityRatio = function(v) {\n\t\t\t\tvar t = this.t, //refers to the element's style property\n\t\t\t\t\tfilters = t.filter || _getStyle(this.data, \"filter\") || \"\",\n\t\t\t\t\tval = (this.s + this.c * v) | 0,\n\t\t\t\t\tskip;\n\t\t\t\tif (val === 100) { //for older versions of IE that need to use a filter to apply opacity, we should remove the filter if opacity hits 1 in order to improve performance, but make sure there isn't a transform (matrix) or gradient in the filters.\n\t\t\t\t\tif (filters.indexOf(\"atrix(\") === -1 && filters.indexOf(\"radient(\") === -1 && filters.indexOf(\"oader(\") === -1) {\n\t\t\t\t\t\tt.removeAttribute(\"filter\");\n\t\t\t\t\t\tskip = (!_getStyle(this.data, \"filter\")); //if a class is applied that has an alpha filter, it will take effect (we don't want that), so re-apply our alpha filter in that case. We must first remove it and then check.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt.filter = filters.replace(_alphaFilterExp, \"\");\n\t\t\t\t\t\tskip = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!skip) {\n\t\t\t\t\tif (this.xn1) {\n\t\t\t\t\t\tt.filter = filters = filters || (\"alpha(opacity=\" + val + \")\"); //works around bug in IE7/8 that prevents changes to \"visibility\" from being applied properly if the filter is changed to a different alpha on the same frame.\n\t\t\t\t\t}\n\t\t\t\t\tif (filters.indexOf(\"pacity\") === -1) { //only used if browser doesn't support the standard opacity style property (IE 7 and 8). We omit the \"O\" to avoid case-sensitivity issues\n\t\t\t\t\t\tif (val !== 0 || !this.xn1) { //bugs in IE7/8 won't render the filter properly if opacity is ADDED on the same frame/render as \"visibility\" changes (this.xn1 is 1 if this tween is an \"autoAlpha\" tween)\n\t\t\t\t\t\t\tt.filter = filters + \" alpha(opacity=\" + val + \")\"; //we round the value because otherwise, bugs in IE7/8 can prevent \"visibility\" changes from being applied properly.\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tt.filter = filters.replace(_opacityExp, \"opacity=\" + val);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t_registerComplexSpecialProp(\"opacity,alpha,autoAlpha\", {defaultValue:\"1\", parser:function(t, e, p, cssp, pt, plugin) {\n\t\t\tvar b = parseFloat(_getStyle(t, \"opacity\", _cs, false, \"1\")),\n\t\t\t\tstyle = t.style,\n\t\t\t\tisAutoAlpha = (p === \"autoAlpha\");\n\t\t\tif (typeof(e) === \"string\" && e.charAt(1) === \"=\") {\n\t\t\t\te = ((e.charAt(0) === \"-\") ? -1 : 1) * parseFloat(e.substr(2)) + b;\n\t\t\t}\n\t\t\tif (isAutoAlpha && b === 1 && _getStyle(t, \"visibility\", _cs) === \"hidden\" && e !== 0) { //if visibility is initially set to \"hidden\", we should interpret that as intent to make opacity 0 (a convenience)\n\t\t\t\tb = 0;\n\t\t\t}\n\t\t\tif (_supportsOpacity) {\n\t\t\t\tpt = new CSSPropTween(style, \"opacity\", b, e - b, pt);\n\t\t\t} else {\n\t\t\t\tpt = new CSSPropTween(style, \"opacity\", b * 100, (e - b) * 100, pt);\n\t\t\t\tpt.xn1 = isAutoAlpha ? 1 : 0; //we need to record whether or not this is an autoAlpha so that in the setRatio(), we know to duplicate the setting of the alpha in order to work around a bug in IE7 and IE8 that prevents changes to \"visibility\" from taking effect if the filter is changed to a different alpha(opacity) at the same time. Setting it to the SAME value first, then the new value works around the IE7/8 bug.\n\t\t\t\tstyle.zoom = 1; //helps correct an IE issue.\n\t\t\t\tpt.type = 2;\n\t\t\t\tpt.b = \"alpha(opacity=\" + pt.s + \")\";\n\t\t\t\tpt.e = \"alpha(opacity=\" + (pt.s + pt.c) + \")\";\n\t\t\t\tpt.data = t;\n\t\t\t\tpt.plugin = plugin;\n\t\t\t\tpt.setRatio = _setIEOpacityRatio;\n\t\t\t}\n\t\t\tif (isAutoAlpha) { //we have to create the \"visibility\" PropTween after the opacity one in the linked list so that they run in the order that works properly in IE8 and earlier\n\t\t\t\tpt = new CSSPropTween(style, \"visibility\", 0, 0, pt, -1, null, false, 0, ((b !== 0) ? \"inherit\" : \"hidden\"), ((e === 0) ? \"hidden\" : \"inherit\"));\n\t\t\t\tpt.xs0 = \"inherit\";\n\t\t\t\tcssp._overwriteProps.push(pt.n);\n\t\t\t\tcssp._overwriteProps.push(p);\n\t\t\t}\n\t\t\treturn pt;\n\t\t}});\n\n\n\t\tvar _removeProp = function(s, p) {\n\t\t\t\tif (p) {\n\t\t\t\t\tif (s.removeProperty) {\n\t\t\t\t\t\tif (p.substr(0,2) === \"ms\" || p.substr(0,6) === \"webkit\") { //Microsoft and some Webkit browsers don't conform to the standard of capitalizing the first prefix character, so we adjust so that when we prefix the caps with a dash, it's correct (otherwise it'd be \"ms-transform\" instead of \"-ms-transform\" for IE9, for example)\n\t\t\t\t\t\t\tp = \"-\" + p;\n\t\t\t\t\t\t}\n\t\t\t\t\t\ts.removeProperty(p.replace(_capsExp, \"-$1\").toLowerCase());\n\t\t\t\t\t} else { //note: old versions of IE use \"removeAttribute()\" instead of \"removeProperty()\"\n\t\t\t\t\t\ts.removeAttribute(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t_setClassNameRatio = function(v) {\n\t\t\t\tthis.t._gsClassPT = this;\n\t\t\t\tif (v === 1 || v === 0) {\n\t\t\t\t\tthis.t.setAttribute(\"class\", (v === 0) ? this.b : this.e);\n\t\t\t\t\tvar mpt = this.data, //first MiniPropTween\n\t\t\t\t\t\ts = this.t.style;\n\t\t\t\t\twhile (mpt) {\n\t\t\t\t\t\tif (!mpt.v) {\n\t\t\t\t\t\t\t_removeProp(s, mpt.p);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ts[mpt.p] = mpt.v;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t\t}\n\t\t\t\t\tif (v === 1 && this.t._gsClassPT === this) {\n\t\t\t\t\t\tthis.t._gsClassPT = null;\n\t\t\t\t\t}\n\t\t\t\t} else if (this.t.getAttribute(\"class\") !== this.e) {\n\t\t\t\t\tthis.t.setAttribute(\"class\", this.e);\n\t\t\t\t}\n\t\t\t};\n\t\t_registerComplexSpecialProp(\"className\", {parser:function(t, e, p, cssp, pt, plugin, vars) {\n\t\t\tvar b = t.getAttribute(\"class\") || \"\", //don't use t.className because it doesn't work consistently on SVG elements; getAttribute(\"class\") and setAttribute(\"class\", value\") is more reliable.\n\t\t\t\tcssText = t.style.cssText,\n\t\t\t\tdifData, bs, cnpt, cnptLookup, mpt;\n\t\t\tpt = cssp._classNamePT = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t\t\tpt.setRatio = _setClassNameRatio;\n\t\t\tpt.pr = -11;\n\t\t\t_hasPriority = true;\n\t\t\tpt.b = b;\n\t\t\tbs = _getAllStyles(t, _cs);\n\t\t\t//if there's a className tween already operating on the target, force it to its end so that the necessary inline styles are removed and the class name is applied before we determine the end state (we don't want inline styles interfering that were there just for class-specific values)\n\t\t\tcnpt = t._gsClassPT;\n\t\t\tif (cnpt) {\n\t\t\t\tcnptLookup = {};\n\t\t\t\tmpt = cnpt.data; //first MiniPropTween which stores the inline styles - we need to force these so that the inline styles don't contaminate things. Otherwise, there's a small chance that a tween could start and the inline values match the destination values and they never get cleaned.\n\t\t\t\twhile (mpt) {\n\t\t\t\t\tcnptLookup[mpt.p] = 1;\n\t\t\t\t\tmpt = mpt._next;\n\t\t\t\t}\n\t\t\t\tcnpt.setRatio(1);\n\t\t\t}\n\t\t\tt._gsClassPT = pt;\n\t\t\tpt.e = (e.charAt(1) !== \"=\") ? e : b.replace(new RegExp(\"(?:\\\\s|^)\" + e.substr(2) + \"(?![\\\\w-])\"), \"\") + ((e.charAt(0) === \"+\") ? \" \" + e.substr(2) : \"\");\n\t\t\tt.setAttribute(\"class\", pt.e);\n\t\t\tdifData = _cssDif(t, bs, _getAllStyles(t), vars, cnptLookup);\n\t\t\tt.setAttribute(\"class\", b);\n\t\t\tpt.data = difData.firstMPT;\n\t\t\tt.style.cssText = cssText; //we recorded cssText before we swapped classes and ran _getAllStyles() because in cases when a className tween is overwritten, we remove all the related tweening properties from that class change (otherwise class-specific stuff can't override properties we've directly set on the target's style object due to specificity).\n\t\t\tpt = pt.xfirst = cssp.parse(t, difData.difs, pt, plugin); //we record the CSSPropTween as the xfirst so that we can handle overwriting propertly (if \"className\" gets overwritten, we must kill all the properties associated with the className part of the tween, so we can loop through from xfirst to the pt itself)\n\t\t\treturn pt;\n\t\t}});\n\n\n\t\tvar _setClearPropsRatio = function(v) {\n\t\t\tif (v === 1 || v === 0) if (this.data._totalTime === this.data._totalDuration && this.data.data !== \"isFromStart\") { //this.data refers to the tween. Only clear at the END of the tween (remember, from() tweens make the ratio go from 1 to 0, so we can't just check that and if the tween is the zero-duration one that's created internally to render the starting values in a from() tween, ignore that because otherwise, for example, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in).\n\t\t\t\tvar s = this.t.style,\n\t\t\t\t\ttransformParse = _specialProps.transform.parse,\n\t\t\t\t\ta, p, i, clearTransform, transform;\n\t\t\t\tif (this.e === \"all\") {\n\t\t\t\t\ts.cssText = \"\";\n\t\t\t\t\tclearTransform = true;\n\t\t\t\t} else {\n\t\t\t\t\ta = this.e.split(\" \").join(\"\").split(\",\");\n\t\t\t\t\ti = a.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tp = a[i];\n\t\t\t\t\t\tif (_specialProps[p]) {\n\t\t\t\t\t\t\tif (_specialProps[p].parse === transformParse) {\n\t\t\t\t\t\t\t\tclearTransform = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tp = (p === \"transformOrigin\") ? _transformOriginProp : _specialProps[p].p; //ensures that special properties use the proper browser-specific property name, like \"scaleX\" might be \"-webkit-transform\" or \"boxShadow\" might be \"-moz-box-shadow\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\t_removeProp(s, p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (clearTransform) {\n\t\t\t\t\t_removeProp(s, _transformProp);\n\t\t\t\t\ttransform = this.t._gsTransform;\n\t\t\t\t\tif (transform) {\n\t\t\t\t\t\tif (transform.svg) {\n\t\t\t\t\t\t\tthis.t.removeAttribute(\"data-svg-origin\");\n\t\t\t\t\t\t\tthis.t.removeAttribute(\"transform\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete this.t._gsTransform;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t};\n\t\t_registerComplexSpecialProp(\"clearProps\", {parser:function(t, e, p, cssp, pt) {\n\t\t\tpt = new CSSPropTween(t, p, 0, 0, pt, 2);\n\t\t\tpt.setRatio = _setClearPropsRatio;\n\t\t\tpt.e = e;\n\t\t\tpt.pr = -10;\n\t\t\tpt.data = cssp._tween;\n\t\t\t_hasPriority = true;\n\t\t\treturn pt;\n\t\t}});\n\n\t\tp = \"bezier,throwProps,physicsProps,physics2D\".split(\",\");\n\t\ti = p.length;\n\t\twhile (i--) {\n\t\t\t_registerPluginProp(p[i]);\n\t\t}\n\n\n\n\n\n\n\n\n\t\tp = CSSPlugin.prototype;\n\t\tp._firstPT = p._lastParsedTransform = p._transform = null;\n\n\t\t//gets called when the tween renders for the first time. This kicks everything off, recording start/end values, etc.\n\t\tp._onInitTween = function(target, vars, tween, index) {\n\t\t\tif (!target.nodeType) { //css is only for dom elements\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthis._target = _target = target;\n\t\t\tthis._tween = tween;\n\t\t\tthis._vars = vars;\n\t\t\t_index = index;\n\t\t\t_autoRound = vars.autoRound;\n\t\t\t_hasPriority = false;\n\t\t\t_suffixMap = vars.suffixMap || CSSPlugin.suffixMap;\n\t\t\t_cs = _getComputedStyle(target, \"\");\n\t\t\t_overwriteProps = this._overwriteProps;\n\t\t\tvar style = target.style,\n\t\t\t\tv, pt, pt2, first, last, next, zIndex, tpt, threeD;\n\t\t\tif (_reqSafariFix) if (style.zIndex === \"\") {\n\t\t\t\tv = _getStyle(target, \"zIndex\", _cs);\n\t\t\t\tif (v === \"auto\" || v === \"\") {\n\t\t\t\t\t//corrects a bug in [non-Android] Safari that prevents it from repainting elements in their new positions if they don't have a zIndex set. We also can't just apply this inside _parseTransform() because anything that's moved in any way (like using \"left\" or \"top\" instead of transforms like \"x\" and \"y\") can be affected, so it is best to ensure that anything that's tweening has a z-index. Setting \"WebkitPerspective\" to a non-zero value worked too except that on iOS Safari things would flicker randomly. Plus zIndex is less memory-intensive.\n\t\t\t\t\tthis._addLazySet(style, \"zIndex\", 0);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (typeof(vars) === \"string\") {\n\t\t\t\tfirst = style.cssText;\n\t\t\t\tv = _getAllStyles(target, _cs);\n\t\t\t\tstyle.cssText = first + \";\" + vars;\n\t\t\t\tv = _cssDif(target, v, _getAllStyles(target)).difs;\n\t\t\t\tif (!_supportsOpacity && _opacityValExp.test(vars)) {\n\t\t\t\t\tv.opacity = parseFloat( RegExp.$1 );\n\t\t\t\t}\n\t\t\t\tvars = v;\n\t\t\t\tstyle.cssText = first;\n\t\t\t}\n\n\t\t\tif (vars.className) { //className tweens will combine any differences they find in the css with the vars that are passed in, so {className:\"myClass\", scale:0.5, left:20} would work.\n\t\t\t\tthis._firstPT = pt = _specialProps.className.parse(target, vars.className, \"className\", this, null, null, vars);\n\t\t\t} else {\n\t\t\t\tthis._firstPT = pt = this.parse(target, vars, null);\n\t\t\t}\n\n\t\t\tif (this._transformType) {\n\t\t\t\tthreeD = (this._transformType === 3);\n\t\t\t\tif (!_transformProp) {\n\t\t\t\t\tstyle.zoom = 1; //helps correct an IE issue.\n\t\t\t\t} else if (_isSafari) {\n\t\t\t\t\t_reqSafariFix = true;\n\t\t\t\t\t//if zIndex isn't set, iOS Safari doesn't repaint things correctly sometimes (seemingly at random).\n\t\t\t\t\tif (style.zIndex === \"\") {\n\t\t\t\t\t\tzIndex = _getStyle(target, \"zIndex\", _cs);\n\t\t\t\t\t\tif (zIndex === \"auto\" || zIndex === \"\") {\n\t\t\t\t\t\t\tthis._addLazySet(style, \"zIndex\", 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//Setting WebkitBackfaceVisibility corrects 3 bugs:\n\t\t\t\t\t// 1) [non-Android] Safari skips rendering changes to \"top\" and \"left\" that are made on the same frame/render as a transform update.\n\t\t\t\t\t// 2) iOS Safari sometimes neglects to repaint elements in their new positions. Setting \"WebkitPerspective\" to a non-zero value worked too except that on iOS Safari things would flicker randomly.\n\t\t\t\t\t// 3) Safari sometimes displayed odd artifacts when tweening the transform (or WebkitTransform) property, like ghosts of the edges of the element remained. Definitely a browser bug.\n\t\t\t\t\t//Note: we allow the user to override the auto-setting by defining WebkitBackfaceVisibility in the vars of the tween.\n\t\t\t\t\tif (_isSafariLT6) {\n\t\t\t\t\t\tthis._addLazySet(style, \"WebkitBackfaceVisibility\", this._vars.WebkitBackfaceVisibility || (threeD ? \"visible\" : \"hidden\"));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt2 = pt;\n\t\t\t\twhile (pt2 && pt2._next) {\n\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t}\n\t\t\t\ttpt = new CSSPropTween(target, \"transform\", 0, 0, null, 2);\n\t\t\t\tthis._linkCSSP(tpt, null, pt2);\n\t\t\t\ttpt.setRatio = _transformProp ? _setTransformRatio : _setIETransformRatio;\n\t\t\t\ttpt.data = this._transform || _getTransform(target, _cs, true);\n\t\t\t\ttpt.tween = tween;\n\t\t\t\ttpt.pr = -1; //ensures that the transforms get applied after the components are updated.\n\t\t\t\t_overwriteProps.pop(); //we don't want to force the overwrite of all \"transform\" tweens of the target - we only care about individual transform properties like scaleX, rotation, etc. The CSSPropTween constructor automatically adds the property to _overwriteProps which is why we need to pop() here.\n\t\t\t}\n\n\t\t\tif (_hasPriority) {\n\t\t\t\t//reorders the linked list in order of pr (priority)\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tthis._firstPT = first;\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\n\t\tp.parse = function(target, vars, pt, plugin) {\n\t\t\tvar style = target.style,\n\t\t\t\tp, sp, bn, en, bs, es, bsfx, esfx, isStr, rel;\n\t\t\tfor (p in vars) {\n\t\t\t\tes = vars[p]; //ending value string\n\t\t\t\tif (typeof(es) === \"function\") {\n\t\t\t\t\tes = es(_index, _target);\n\t\t\t\t}\n\t\t\t\tsp = _specialProps[p]; //SpecialProp lookup.\n\t\t\t\tif (sp) {\n\t\t\t\t\tpt = sp.parse(target, es, p, this, pt, plugin, vars);\n\n\t\t\t\t} else {\n\t\t\t\t\tbs = _getStyle(target, p, _cs) + \"\";\n\t\t\t\t\tisStr = (typeof(es) === \"string\");\n\t\t\t\t\tif (p === \"color\" || p === \"fill\" || p === \"stroke\" || p.indexOf(\"Color\") !== -1 || (isStr && _rgbhslExp.test(es))) { //Opera uses background: to define color sometimes in addition to backgroundColor:\n\t\t\t\t\t\tif (!isStr) {\n\t\t\t\t\t\t\tes = _parseColor(es);\n\t\t\t\t\t\t\tes = ((es.length > 3) ? \"rgba(\" : \"rgb(\") + es.join(\",\") + \")\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpt = _parseComplex(style, p, bs, es, true, \"transparent\", pt, 0, plugin);\n\n\t\t\t\t\t} else if (isStr && _complexExp.test(es)) {\n\t\t\t\t\t\tpt = _parseComplex(style, p, bs, es, true, null, pt, 0, plugin);\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbn = parseFloat(bs);\n\t\t\t\t\t\tbsfx = (bn || bn === 0) ? bs.substr((bn + \"\").length) : \"\"; //remember, bs could be non-numeric like \"normal\" for fontWeight, so we should default to a blank suffix in that case.\n\n\t\t\t\t\t\tif (bs === \"\" || bs === \"auto\") {\n\t\t\t\t\t\t\tif (p === \"width\" || p === \"height\") {\n\t\t\t\t\t\t\t\tbn = _getDimension(target, p, _cs);\n\t\t\t\t\t\t\t\tbsfx = \"px\";\n\t\t\t\t\t\t\t} else if (p === \"left\" || p === \"top\") {\n\t\t\t\t\t\t\t\tbn = _calculateOffset(target, p, _cs);\n\t\t\t\t\t\t\t\tbsfx = \"px\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbn = (p !== \"opacity\") ? 0 : 1;\n\t\t\t\t\t\t\t\tbsfx = \"\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\trel = (isStr && es.charAt(1) === \"=\");\n\t\t\t\t\t\tif (rel) {\n\t\t\t\t\t\t\ten = parseInt(es.charAt(0) + \"1\", 10);\n\t\t\t\t\t\t\tes = es.substr(2);\n\t\t\t\t\t\t\ten *= parseFloat(es);\n\t\t\t\t\t\t\tesfx = es.replace(_suffixExp, \"\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ten = parseFloat(es);\n\t\t\t\t\t\t\tesfx = isStr ? es.replace(_suffixExp, \"\") : \"\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (esfx === \"\") {\n\t\t\t\t\t\t\tesfx = (p in _suffixMap) ? _suffixMap[p] : bsfx; //populate the end suffix, prioritizing the map, then if none is found, use the beginning suffix.\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tes = (en || en === 0) ? (rel ? en + bn : en) + esfx : vars[p]; //ensures that any += or -= prefixes are taken care of. Record the end value before normalizing the suffix because we always want to end the tween on exactly what they intended even if it doesn't match the beginning value's suffix.\n\n\t\t\t\t\t\t//if the beginning/ending suffixes don't match, normalize them...\n\t\t\t\t\t\tif (bsfx !== esfx) if (esfx !== \"\") if (en || en === 0) if (bn) { //note: if the beginning value (bn) is 0, we don't need to convert units!\n\t\t\t\t\t\t\tbn = _convertToPixels(target, p, bn, bsfx);\n\t\t\t\t\t\t\tif (esfx === \"%\") {\n\t\t\t\t\t\t\t\tbn /= _convertToPixels(target, p, 100, \"%\") / 100;\n\t\t\t\t\t\t\t\tif (vars.strictUnits !== true) { //some browsers report only \"px\" values instead of allowing \"%\" with getComputedStyle(), so we assume that if we're tweening to a %, we should start there too unless strictUnits:true is defined. This approach is particularly useful for responsive designs that use from() tweens.\n\t\t\t\t\t\t\t\t\tbs = bn + \"%\";\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else if (esfx === \"em\" || esfx === \"rem\" || esfx === \"vw\" || esfx === \"vh\") {\n\t\t\t\t\t\t\t\tbn /= _convertToPixels(target, p, 1, esfx);\n\n\t\t\t\t\t\t\t//otherwise convert to pixels.\n\t\t\t\t\t\t\t} else if (esfx !== \"px\") {\n\t\t\t\t\t\t\t\ten = _convertToPixels(target, p, en, esfx);\n\t\t\t\t\t\t\t\tesfx = \"px\"; //we don't use bsfx after this, so we don't need to set it to px too.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (rel) if (en || en === 0) {\n\t\t\t\t\t\t\t\tes = (en + bn) + esfx; //the changes we made affect relative calculations, so adjust the end value here.\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (rel) {\n\t\t\t\t\t\t\ten += bn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ((bn || bn === 0) && (en || en === 0)) { //faster than isNaN(). Also, previously we required en !== bn but that doesn't really gain much performance and it prevents _parseToProxy() from working properly if beginning and ending values match but need to get tweened by an external plugin anyway. For example, a bezier tween where the target starts at left:0 and has these points: [{left:50},{left:0}] wouldn't work properly because when parsing the last point, it'd match the first (current) one and a non-tweening CSSPropTween would be recorded when we actually need a normal tween (type:0) so that things get updated during the tween properly.\n\t\t\t\t\t\t\tpt = new CSSPropTween(style, p, bn, en - bn, pt, 0, p, (_autoRound !== false && (esfx === \"px\" || p === \"zIndex\")), 0, bs, es);\n\t\t\t\t\t\t\tpt.xs0 = esfx;\n\t\t\t\t\t\t\t//DEBUG: _log(\"tween \"+p+\" from \"+pt.b+\" (\"+bn+esfx+\") to \"+pt.e+\" with suffix: \"+pt.xs0);\n\t\t\t\t\t\t} else if (style[p] === undefined || !es && (es + \"\" === \"NaN\" || es == null)) {\n\t\t\t\t\t\t\t_log(\"invalid \" + p + \" tween value: \" + vars[p]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt = new CSSPropTween(style, p, en || bn || 0, 0, pt, -1, p, false, 0, bs, es);\n\t\t\t\t\t\t\tpt.xs0 = (es === \"none\" && (p === \"display\" || p.indexOf(\"Style\") !== -1)) ? bs : es; //intermediate value should typically be set immediately (end value) except for \"display\" or things like borderTopStyle, borderBottomStyle, etc. which should use the beginning value during the tween.\n\t\t\t\t\t\t\t//DEBUG: _log(\"non-tweening value \"+p+\": \"+pt.xs0);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (plugin) if (pt && !pt.plugin) {\n\t\t\t\t\tpt.plugin = plugin;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn pt;\n\t\t};\n\n\n\t\t//gets called every time the tween updates, passing the new ratio (typically a value between 0 and 1, but not always (for example, if an Elastic.easeOut is used, the value can jump above 1 mid-tween). It will always start and 0 and end at 1.\n\t\tp.setRatio = function(v) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tval, str, i;\n\t\t\t//at the end of the tween, we set the values to exactly what we received in order to make sure non-tweening values (like \"position\" or \"float\" or whatever) are set and so that if the beginning/ending suffixes (units) didn't match and we normalized to px, the value that the user passed in is used here. We check to see if the tween is at its beginning in case it's a from() tween in which case the ratio will actually go from 1 to 0 over the course of the tween (backwards).\n\t\t\tif (v === 1 && (this._tween._time === this._tween._duration || this._tween._time === 0)) {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.type !== 2) {\n\t\t\t\t\t\tif (pt.r && pt.type !== -1) {\n\t\t\t\t\t\t\tval = Math.round(pt.s + pt.c);\n\t\t\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\t\t\tpt.t[pt.p] = val + pt.xs0;\n\t\t\t\t\t\t\t} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like \"rect(5px,10px,20px,25px)\"\n\t\t\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\t\t\tstr = pt.xs0 + val + pt.xs1;\n\t\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpt.t[pt.p] = str;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.e;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\n\t\t\t} else if (v || !(this._tween._time === this._tween._duration || this._tween._time === 0) || this._tween._rawPrevTime === -0.000001) {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tval = pt.c * v + pt.s;\n\t\t\t\t\tif (pt.r) {\n\t\t\t\t\t\tval = Math.round(val);\n\t\t\t\t\t} else if (val < min) if (val > -min) {\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!pt.type) {\n\t\t\t\t\t\tpt.t[pt.p] = val + pt.xs0;\n\t\t\t\t\t} else if (pt.type === 1) { //complex value (one that typically has multiple numbers inside a string, like \"rect(5px,10px,20px,25px)\"\n\t\t\t\t\t\ti = pt.l;\n\t\t\t\t\t\tif (i === 2) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2;\n\t\t\t\t\t\t} else if (i === 3) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3;\n\t\t\t\t\t\t} else if (i === 4) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4;\n\t\t\t\t\t\t} else if (i === 5) {\n\t\t\t\t\t\t\tpt.t[pt.p] = pt.xs0 + val + pt.xs1 + pt.xn1 + pt.xs2 + pt.xn2 + pt.xs3 + pt.xn3 + pt.xs4 + pt.xn4 + pt.xs5;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstr = pt.xs0 + val + pt.xs1;\n\t\t\t\t\t\t\tfor (i = 1; i < pt.l; i++) {\n\t\t\t\t\t\t\t\tstr += pt[\"xn\"+i] + pt[\"xs\"+(i+1)];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt.t[pt.p] = str;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if (pt.type === -1) { //non-tweening value\n\t\t\t\t\t\tpt.t[pt.p] = pt.xs0;\n\n\t\t\t\t\t} else if (pt.setRatio) { //custom setRatio() for things like SpecialProps, external plugins, etc.\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\n\t\t\t//if the tween is reversed all the way back to the beginning, we need to restore the original values which may have different units (like % instead of px or em or whatever).\n\t\t\t} else {\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.type !== 2) {\n\t\t\t\t\t\tpt.t[pt.p] = pt.b;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.setRatio(v);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t/**\n\t\t * @private\n\t\t * Forces rendering of the target's transforms (rotation, scale, etc.) whenever the CSSPlugin's setRatio() is called.\n\t\t * Basically, this tells the CSSPlugin to create a CSSPropTween (type 2) after instantiation that runs last in the linked\n\t\t * list and calls the appropriate (3D or 2D) rendering function. We separate this into its own method so that we can call\n\t\t * it from other plugins like BezierPlugin if, for example, it needs to apply an autoRotation and this CSSPlugin\n\t\t * doesn't have any transform-related properties of its own. You can call this method as many times as you\n\t\t * want and it won't create duplicate CSSPropTweens.\n\t\t *\n\t\t * @param {boolean} threeD if true, it should apply 3D tweens (otherwise, just 2D ones are fine and typically faster)\n\t\t */\n\t\tp._enableTransforms = function(threeD) {\n\t\t\tthis._transform = this._transform || _getTransform(this._target, _cs, true); //ensures that the element has a _gsTransform property with the appropriate values.\n\t\t\tthis._transformType = (!(this._transform.svg && _useSVGTransformAttr) && (threeD || this._transformType === 3)) ? 3 : 2;\n\t\t};\n\n\t\tvar lazySet = function(v) {\n\t\t\tthis.t[this.p] = this.e;\n\t\t\tthis.data._linkCSSP(this, this._next, null, true); //we purposefully keep this._next even though it'd make sense to null it, but this is a performance optimization, as this happens during the while (pt) {} loop in setRatio() at the bottom of which it sets pt = pt._next, so if we null it, the linked list will be broken in that loop.\n\t\t};\n\t\t/** @private Gives us a way to set a value on the first render (and only the first render). **/\n\t\tp._addLazySet = function(t, p, v) {\n\t\t\tvar pt = this._firstPT = new CSSPropTween(t, p, 0, 0, this._firstPT, 2);\n\t\t\tpt.e = v;\n\t\t\tpt.setRatio = lazySet;\n\t\t\tpt.data = this;\n\t\t};\n\n\t\t/** @private **/\n\t\tp._linkCSSP = function(pt, next, prev, remove) {\n\t\t\tif (pt) {\n\t\t\t\tif (next) {\n\t\t\t\t\tnext._prev = pt;\n\t\t\t\t}\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t}\n\t\t\t\tif (pt._prev) {\n\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\tremove = true; //just to prevent resetting this._firstPT 5 lines down in case pt._next is null. (optimized for speed)\n\t\t\t\t}\n\t\t\t\tif (prev) {\n\t\t\t\t\tprev._next = pt;\n\t\t\t\t} else if (!remove && this._firstPT === null) {\n\t\t\t\t\tthis._firstPT = pt;\n\t\t\t\t}\n\t\t\t\tpt._next = next;\n\t\t\t\tpt._prev = prev;\n\t\t\t}\n\t\t\treturn pt;\n\t\t};\n\n\t\tp._mod = function(lookup) {\n\t\t\tvar pt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (typeof(lookup[pt.p]) === \"function\" && lookup[pt.p] === Math.round) { //only gets called by RoundPropsPlugin (ModifyPlugin manages all the rendering internally for CSSPlugin properties that need modification). Remember, we handle rounding a bit differently in this plugin for performance reasons, leveraging \"r\" as an indicator that the value should be rounded internally..\n\t\t\t\t\tpt.r = 1;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\t//we need to make sure that if alpha or autoAlpha is killed, opacity is too. And autoAlpha affects the \"visibility\" property.\n\t\tp._kill = function(lookup) {\n\t\t\tvar copy = lookup,\n\t\t\t\tpt, p, xfirst;\n\t\t\tif (lookup.autoAlpha || lookup.alpha) {\n\t\t\t\tcopy = {};\n\t\t\t\tfor (p in lookup) { //copy the lookup so that we're not changing the original which may be passed elsewhere.\n\t\t\t\t\tcopy[p] = lookup[p];\n\t\t\t\t}\n\t\t\t\tcopy.opacity = 1;\n\t\t\t\tif (copy.autoAlpha) {\n\t\t\t\t\tcopy.visibility = 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (lookup.className && (pt = this._classNamePT)) { //for className tweens, we need to kill any associated CSSPropTweens too; a linked list starts at the className's \"xfirst\".\n\t\t\t\txfirst = pt.xfirst;\n\t\t\t\tif (xfirst && xfirst._prev) {\n\t\t\t\t\tthis._linkCSSP(xfirst._prev, pt._next, xfirst._prev._prev); //break off the prev\n\t\t\t\t} else if (xfirst === this._firstPT) {\n\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t}\n\t\t\t\tif (pt._next) {\n\t\t\t\t\tthis._linkCSSP(pt._next, pt._next._next, xfirst._prev);\n\t\t\t\t}\n\t\t\t\tthis._classNamePT = null;\n\t\t\t}\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.plugin && pt.plugin !== p && pt.plugin._kill) { //for plugins that are registered with CSSPlugin, we should notify them of the kill.\n\t\t\t\t\tpt.plugin._kill(lookup);\n\t\t\t\t\tp = pt.plugin;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn TweenPlugin.prototype._kill.call(this, copy);\n\t\t};\n\n\n\n\t\t//used by cascadeTo() for gathering all the style properties of each child element into an array for comparison.\n\t\tvar _getChildStyles = function(e, props, targets) {\n\t\t\t\tvar children, i, child, type;\n\t\t\t\tif (e.slice) {\n\t\t\t\t\ti = e.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t_getChildStyles(e[i], props, targets);\n\t\t\t\t\t}\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tchildren = e.childNodes;\n\t\t\t\ti = children.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tchild = children[i];\n\t\t\t\t\ttype = child.type;\n\t\t\t\t\tif (child.style) {\n\t\t\t\t\t\tprops.push(_getAllStyles(child));\n\t\t\t\t\t\tif (targets) {\n\t\t\t\t\t\t\ttargets.push(child);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ((type === 1 || type === 9 || type === 11) && child.childNodes.length) {\n\t\t\t\t\t\t_getChildStyles(child, props, targets);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t/**\n\t\t * Typically only useful for className tweens that may affect child elements, this method creates a TweenLite\n\t\t * and then compares the style properties of all the target's child elements at the tween's start and end, and\n\t\t * if any are different, it also creates tweens for those and returns an array containing ALL of the resulting\n\t\t * tweens (so that you can easily add() them to a TimelineLite, for example). The reason this functionality is\n\t\t * wrapped into a separate static method of CSSPlugin instead of being integrated into all regular className tweens\n\t\t * is because it creates entirely new tweens that may have completely different targets than the original tween,\n\t\t * so if they were all lumped into the original tween instance, it would be inconsistent with the rest of the API\n\t\t * and it would create other problems. For example:\n\t\t *  - If I create a tween of elementA, that tween instance may suddenly change its target to include 50 other elements (unintuitive if I specifically defined the target I wanted)\n\t\t *  - We can't just create new independent tweens because otherwise, what happens if the original/parent tween is reversed or pause or dropped into a TimelineLite for tight control? You'd expect that tween's behavior to affect all the others.\n\t\t *  - Analyzing every style property of every child before and after the tween is an expensive operation when there are many children, so this behavior shouldn't be imposed on all className tweens by default, especially since it's probably rare that this extra functionality is needed.\n\t\t *\n\t\t * @param {Object} target object to be tweened\n\t\t * @param {number} Duration in seconds (or frames for frames-based tweens)\n\t\t * @param {Object} Object containing the end values, like {className:\"newClass\", ease:Linear.easeNone}\n\t\t * @return {Array} An array of TweenLite instances\n\t\t */\n\t\tCSSPlugin.cascadeTo = function(target, duration, vars) {\n\t\t\tvar tween = TweenLite.to(target, duration, vars),\n\t\t\t\tresults = [tween],\n\t\t\t\tb = [],\n\t\t\t\te = [],\n\t\t\t\ttargets = [],\n\t\t\t\t_reservedProps = TweenLite._internals.reservedProps,\n\t\t\t\ti, difs, p, from;\n\t\t\ttarget = tween._targets || tween.target;\n\t\t\t_getChildStyles(target, b, targets);\n\t\t\ttween.render(duration, true, true);\n\t\t\t_getChildStyles(target, e);\n\t\t\ttween.render(0, true, true);\n\t\t\ttween._enabled(true);\n\t\t\ti = targets.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tdifs = _cssDif(targets[i], b[i], e[i]);\n\t\t\t\tif (difs.firstMPT) {\n\t\t\t\t\tdifs = difs.difs;\n\t\t\t\t\tfor (p in vars) {\n\t\t\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\t\t\tdifs[p] = vars[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tfrom = {};\n\t\t\t\t\tfor (p in difs) {\n\t\t\t\t\t\tfrom[p] = b[i][p];\n\t\t\t\t\t}\n\t\t\t\t\tresults.push(TweenLite.fromTo(targets[i], duration, from, difs));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t\tTweenPlugin.activate([CSSPlugin]);\n\t\treturn CSSPlugin;\n\n\t}, true);\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * RoundPropsPlugin\n * ----------------------------------------------------------------\n */\n\t(function() {\n\n\t\tvar RoundPropsPlugin = _gsScope._gsDefine.plugin({\n\t\t\t\tpropName: \"roundProps\",\n\t\t\t\tversion: \"1.6.0\",\n\t\t\t\tpriority: -1,\n\t\t\t\tAPI: 2,\n\n\t\t\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\t\tinit: function(target, value, tween) {\n\t\t\t\t\tthis._tween = tween;\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t}),\n\t\t\t_roundLinkedList = function(node) {\n\t\t\t\twhile (node) {\n\t\t\t\t\tif (!node.f && !node.blob) {\n\t\t\t\t\t\tnode.m = Math.round;\n\t\t\t\t\t}\n\t\t\t\t\tnode = node._next;\n\t\t\t\t}\n\t\t\t},\n\t\t\tp = RoundPropsPlugin.prototype;\n\n\t\tp._onInitAllProps = function() {\n\t\t\tvar tween = this._tween,\n\t\t\t\trp = (tween.vars.roundProps.join) ? tween.vars.roundProps : tween.vars.roundProps.split(\",\"),\n\t\t\t\ti = rp.length,\n\t\t\t\tlookup = {},\n\t\t\t\trpt = tween._propLookup.roundProps,\n\t\t\t\tprop, pt, next;\n\t\t\twhile (--i > -1) {\n\t\t\t\tlookup[rp[i]] = Math.round;\n\t\t\t}\n\t\t\ti = rp.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tprop = rp[i];\n\t\t\t\tpt = tween._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next; //record here, because it may get removed\n\t\t\t\t\tif (pt.pg) {\n\t\t\t\t\t\tpt.t._mod(lookup);\n\t\t\t\t\t} else if (pt.n === prop) {\n\t\t\t\t\t\tif (pt.f === 2 && pt.t) { //a blob (text containing multiple numeric values)\n\t\t\t\t\t\t\t_roundLinkedList(pt.t._firstPT);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._add(pt.t, prop, pt.s, pt.c);\n\t\t\t\t\t\t\t//remove from linked list\n\t\t\t\t\t\t\tif (next) {\n\t\t\t\t\t\t\t\tnext._prev = pt._prev;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\t\tpt._prev._next = next;\n\t\t\t\t\t\t\t} else if (tween._firstPT === pt) {\n\t\t\t\t\t\t\t\ttween._firstPT = next;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\t\ttween._propLookup[prop] = rpt;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._add = function(target, p, s, c) {\n\t\t\tthis._addTween(target, p, s, s + c, p, Math.round);\n\t\t\tthis._overwriteProps.push(p);\n\t\t};\n\n\t}());\n\n\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * AttrPlugin\n * ----------------------------------------------------------------\n */\n\n\t(function() {\n\n\t\t_gsScope._gsDefine.plugin({\n\t\t\tpropName: \"attr\",\n\t\t\tAPI: 2,\n\t\t\tversion: \"0.6.0\",\n\n\t\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\t\tinit: function(target, value, tween, index) {\n\t\t\t\tvar p, end;\n\t\t\t\tif (typeof(target.setAttribute) !== \"function\") {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tfor (p in value) {\n\t\t\t\t\tend = value[p];\n\t\t\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\t\t\tend = end(index, target);\n\t\t\t\t\t}\n\t\t\t\t\tthis._addTween(target, \"setAttribute\", target.getAttribute(p) + \"\", end + \"\", p, false, p);\n\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t});\n\n\t}());\n\n\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * DirectionalRotationPlugin\n * ----------------------------------------------------------------\n */\n\t_gsScope._gsDefine.plugin({\n\t\tpropName: \"directionalRotation\",\n\t\tversion: \"0.3.0\",\n\t\tAPI: 2,\n\n\t\t//called when the tween renders for the first time. This is where initial values should be recorded and any setup routines should run.\n\t\tinit: function(target, value, tween, index) {\n\t\t\tif (typeof(value) !== \"object\") {\n\t\t\t\tvalue = {rotation:value};\n\t\t\t}\n\t\t\tthis.finals = {};\n\t\t\tvar cap = (value.useRadians === true) ? Math.PI * 2 : 360,\n\t\t\t\tmin = 0.000001,\n\t\t\t\tp, v, start, end, dif, split;\n\t\t\tfor (p in value) {\n\t\t\t\tif (p !== \"useRadians\") {\n\t\t\t\t\tend = value[p];\n\t\t\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\t\t\tend = end(index, target);\n\t\t\t\t\t}\n\t\t\t\t\tsplit = (end + \"\").split(\"_\");\n\t\t\t\t\tv = split[0];\n\t\t\t\t\tstart = parseFloat( (typeof(target[p]) !== \"function\") ? target[p] : target[ ((p.indexOf(\"set\") || typeof(target[\"get\" + p.substr(3)]) !== \"function\") ? p : \"get\" + p.substr(3)) ]() );\n\t\t\t\t\tend = this.finals[p] = (typeof(v) === \"string\" && v.charAt(1) === \"=\") ? start + parseInt(v.charAt(0) + \"1\", 10) * Number(v.substr(2)) : Number(v) || 0;\n\t\t\t\t\tdif = end - start;\n\t\t\t\t\tif (split.length) {\n\t\t\t\t\t\tv = split.join(\"_\");\n\t\t\t\t\t\tif (v.indexOf(\"short\") !== -1) {\n\t\t\t\t\t\t\tdif = dif % cap;\n\t\t\t\t\t\t\tif (dif !== dif % (cap / 2)) {\n\t\t\t\t\t\t\t\tdif = (dif < 0) ? dif + cap : dif - cap;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (v.indexOf(\"_cw\") !== -1 && dif < 0) {\n\t\t\t\t\t\t\tdif = ((dif + cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t} else if (v.indexOf(\"ccw\") !== -1 && dif > 0) {\n\t\t\t\t\t\t\tdif = ((dif - cap * 9999999999) % cap) - ((dif / cap) | 0) * cap;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (dif > min || dif < -min) {\n\t\t\t\t\t\tthis._addTween(target, p, start, start + dif, p);\n\t\t\t\t\t\tthis._overwriteProps.push(p);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t//called each time the values should be updated, and the ratio gets passed as the only parameter (typically it's a value between 0 and 1, but it can exceed those when using an ease like Elastic.easeOut or Back.easeOut, etc.)\n\t\tset: function(ratio) {\n\t\t\tvar pt;\n\t\t\tif (ratio !== 1) {\n\t\t\t\tthis._super.setRatio.call(this, ratio);\n\t\t\t} else {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tif (pt.f) {\n\t\t\t\t\t\tpt.t[pt.p](this.finals[pt.p]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.t[pt.p] = this.finals[pt.p];\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t})._autoCSS = true;\n\n\n\n\n\n\n\n\t\n\t\n\t\n\t\n/*\n * ----------------------------------------------------------------\n * EasePack\n * ----------------------------------------------------------------\n */\n\t_gsScope._gsDefine(\"easing.Back\", [\"easing.Ease\"], function(Ease) {\n\t\t\n\t\tvar w = (_gsScope.GreenSockGlobals || _gsScope),\n\t\t\tgs = w.com.greensock,\n\t\t\t_2PI = Math.PI * 2,\n\t\t\t_HALF_PI = Math.PI / 2,\n\t\t\t_class = gs._class,\n\t\t\t_create = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(){}, true),\n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\t_easeReg = Ease.register || function(){}, //put an empty function in place just as a safety measure in case someone loads an OLD version of TweenLite.js where Ease.register doesn't exist.\n\t\t\t_wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t\t\t\tvar C = _class(\"easing.\"+name, {\n\t\t\t\t\teaseOut:new EaseOut(),\n\t\t\t\t\teaseIn:new EaseIn(),\n\t\t\t\t\teaseInOut:new EaseInOut()\n\t\t\t\t}, true);\n\t\t\t\t_easeReg(C, name);\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\tEasePoint = function(time, value, next) {\n\t\t\t\tthis.t = time;\n\t\t\t\tthis.v = value;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis.next = next;\n\t\t\t\t\tnext.prev = this;\n\t\t\t\t\tthis.c = next.v - value;\n\t\t\t\t\tthis.gap = next.t - time;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//Back\n\t\t\t_createBack = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(overshoot) {\n\t\t\t\t\t\tthis._p1 = (overshoot || overshoot === 0) ? overshoot : 1.70158;\n\t\t\t\t\t\tthis._p2 = this._p1 * 1.525;\n\t\t\t\t\t}, true),\n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\tp.config = function(overshoot) {\n\t\t\t\t\treturn new C(overshoot);\n\t\t\t\t};\n\t\t\t\treturn C;\n\t\t\t},\n\n\t\t\tBack = _wrap(\"Back\",\n\t\t\t\t_createBack(\"BackOut\", function(p) {\n\t\t\t\t\treturn ((p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackIn\", function(p) {\n\t\t\t\t\treturn p * p * ((this._p1 + 1) * p - this._p1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackInOut\", function(p) {\n\t\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * p * p * ((this._p2 + 1) * p - this._p2) : 0.5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t\t\t\t})\n\t\t\t),\n\n\n\t\t\t//SlowMo\n\t\t\tSlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t\t\t\tpower = (power || power === 0) ? power : 0.7;\n\t\t\t\tif (linearRatio == null) {\n\t\t\t\t\tlinearRatio = 0.7;\n\t\t\t\t} else if (linearRatio > 1) {\n\t\t\t\t\tlinearRatio = 1;\n\t\t\t\t}\n\t\t\t\tthis._p = (linearRatio !== 1) ? power : 0;\n\t\t\t\tthis._p1 = (1 - linearRatio) / 2;\n\t\t\t\tthis._p2 = linearRatio;\n\t\t\t\tthis._p3 = this._p1 + this._p2;\n\t\t\t\tthis._calcEnd = (yoyoMode === true);\n\t\t\t}, true),\n\t\t\tp = SlowMo.prototype = new Ease(),\n\t\t\tSteppedEase, RoughEase, _createElastic;\n\n\t\tp.constructor = SlowMo;\n\t\tp.getRatio = function(p) {\n\t\t\tvar r = p + (0.5 - p) * this._p;\n\t\t\tif (p < this._p1) {\n\t\t\t\treturn this._calcEnd ? 1 - ((p = 1 - (p / this._p1)) * p) : r - ((p = 1 - (p / this._p1)) * p * p * p * r);\n\t\t\t} else if (p > this._p3) {\n\t\t\t\treturn this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + ((p - r) * (p = (p - this._p3) / this._p1) * p * p * p);\n\t\t\t}\n\t\t\treturn this._calcEnd ? 1 : r;\n\t\t};\n\t\tSlowMo.ease = new SlowMo(0.7, 0.7);\n\n\t\tp.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t\t\treturn new SlowMo(linearRatio, power, yoyoMode);\n\t\t};\n\n\n\t\t//SteppedEase\n\t\tSteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n\t\t\t\tsteps = steps || 1;\n\t\t\t\tthis._p1 = 1 / steps;\n\t\t\t\tthis._p2 = steps + 1;\n\t\t\t}, true);\n\t\tp = SteppedEase.prototype = new Ease();\n\t\tp.constructor = SteppedEase;\n\t\tp.getRatio = function(p) {\n\t\t\tif (p < 0) {\n\t\t\t\tp = 0;\n\t\t\t} else if (p >= 1) {\n\t\t\t\tp = 0.999999999;\n\t\t\t}\n\t\t\treturn ((this._p2 * p) >> 0) * this._p1;\n\t\t};\n\t\tp.config = SteppedEase.config = function(steps) {\n\t\t\treturn new SteppedEase(steps);\n\t\t};\n\n\n\t\t//RoughEase\n\t\tRoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar taper = vars.taper || \"none\",\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tpoints = (vars.points || 20) | 0,\n\t\t\t\ti = points,\n\t\t\t\trandomize = (vars.randomize !== false),\n\t\t\t\tclamp = (vars.clamp === true),\n\t\t\t\ttemplate = (vars.template instanceof Ease) ? vars.template : null,\n\t\t\t\tstrength = (typeof(vars.strength) === \"number\") ? vars.strength * 0.4 : 0.4,\n\t\t\t\tx, y, bump, invX, obj, pnt;\n\t\t\twhile (--i > -1) {\n\t\t\t\tx = randomize ? Math.random() : (1 / points) * i;\n\t\t\t\ty = template ? template.getRatio(x) : x;\n\t\t\t\tif (taper === \"none\") {\n\t\t\t\t\tbump = strength;\n\t\t\t\t} else if (taper === \"out\") {\n\t\t\t\t\tinvX = 1 - x;\n\t\t\t\t\tbump = invX * invX * strength;\n\t\t\t\t} else if (taper === \"in\") {\n\t\t\t\t\tbump = x * x * strength;\n\t\t\t\t} else if (x < 0.5) {  //\"both\" (start)\n\t\t\t\t\tinvX = x * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t} else {\t\t\t\t//\"both\" (end)\n\t\t\t\t\tinvX = (1 - x) * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t}\n\t\t\t\tif (randomize) {\n\t\t\t\t\ty += (Math.random() * bump) - (bump * 0.5);\n\t\t\t\t} else if (i % 2) {\n\t\t\t\t\ty += bump * 0.5;\n\t\t\t\t} else {\n\t\t\t\t\ty -= bump * 0.5;\n\t\t\t\t}\n\t\t\t\tif (clamp) {\n\t\t\t\t\tif (y > 1) {\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t} else if (y < 0) {\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[cnt++] = {x:x, y:y};\n\t\t\t}\n\t\t\ta.sort(function(a, b) {\n\t\t\t\treturn a.x - b.x;\n\t\t\t});\n\n\t\t\tpnt = new EasePoint(1, 1, null);\n\t\t\ti = points;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj = a[i];\n\t\t\t\tpnt = new EasePoint(obj.x, obj.y, pnt);\n\t\t\t}\n\n\t\t\tthis._prev = new EasePoint(0, 0, (pnt.t !== 0) ? pnt : pnt.next);\n\t\t}, true);\n\t\tp = RoughEase.prototype = new Ease();\n\t\tp.constructor = RoughEase;\n\t\tp.getRatio = function(p) {\n\t\t\tvar pnt = this._prev;\n\t\t\tif (p > pnt.t) {\n\t\t\t\twhile (pnt.next && p >= pnt.t) {\n\t\t\t\t\tpnt = pnt.next;\n\t\t\t\t}\n\t\t\t\tpnt = pnt.prev;\n\t\t\t} else {\n\t\t\t\twhile (pnt.prev && p <= pnt.t) {\n\t\t\t\t\tpnt = pnt.prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prev = pnt;\n\t\t\treturn (pnt.v + ((p - pnt.t) / pnt.gap) * pnt.c);\n\t\t};\n\t\tp.config = function(vars) {\n\t\t\treturn new RoughEase(vars);\n\t\t};\n\t\tRoughEase.ease = new RoughEase();\n\n\n\t\t//Bounce\n\t\t_wrap(\"Bounce\",\n\t\t\t_create(\"BounceOut\", function(p) {\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\treturn 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t}\n\t\t\t\treturn 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t}),\n\t\t\t_create(\"BounceIn\", function(p) {\n\t\t\t\tif ((p = 1 - p) < 1 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * p * p);\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n\t\t\t\t}\n\t\t\t\treturn 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n\t\t\t}),\n\t\t\t_create(\"BounceInOut\", function(p) {\n\t\t\t\tvar invert = (p < 0.5);\n\t\t\t\tif (invert) {\n\t\t\t\t\tp = 1 - (p * 2);\n\t\t\t\t} else {\n\t\t\t\t\tp = (p * 2) - 1;\n\t\t\t\t}\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\tp = 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t} else {\n\t\t\t\t\tp = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t\t}\n\t\t\t\treturn invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n\t\t\t})\n\t\t);\n\n\n\t\t//CIRC\n\t\t_wrap(\"Circ\",\n\t\t\t_create(\"CircOut\", function(p) {\n\t\t\t\treturn Math.sqrt(1 - (p = p - 1) * p);\n\t\t\t}),\n\t\t\t_create(\"CircIn\", function(p) {\n\t\t\t\treturn -(Math.sqrt(1 - (p * p)) - 1);\n\t\t\t}),\n\t\t\t_create(\"CircInOut\", function(p) {\n\t\t\t\treturn ((p*=2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t\t\t})\n\t\t);\n\n\n\t\t//Elastic\n\t\t_createElastic = function(n, f, def) {\n\t\t\tvar C = _class(\"easing.\" + n, function(amplitude, period) {\n\t\t\t\t\tthis._p1 = (amplitude >= 1) ? amplitude : 1; //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.\n\t\t\t\t\tthis._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n\t\t\t\t\tthis._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t\t\t\t\tthis._p2 = _2PI / this._p2; //precalculate to optimize\n\t\t\t\t}, true),\n\t\t\t\tp = C.prototype = new Ease();\n\t\t\tp.constructor = C;\n\t\t\tp.getRatio = f;\n\t\t\tp.config = function(amplitude, period) {\n\t\t\t\treturn new C(amplitude, period);\n\t\t\t};\n\t\t\treturn C;\n\t\t};\n\t\t_wrap(\"Elastic\",\n\t\t\t_createElastic(\"ElasticOut\", function(p) {\n\t\t\t\treturn this._p1 * Math.pow(2, -10 * p) * Math.sin( (p - this._p3) * this._p2 ) + 1;\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticIn\", function(p) {\n\t\t\t\treturn -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * this._p2 ));\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? -0.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 *(p -= 1)) * Math.sin( (p - this._p3) * this._p2 ) * 0.5 + 1;\n\t\t\t}, 0.45)\n\t\t);\n\n\n\t\t//Expo\n\t\t_wrap(\"Expo\",\n\t\t\t_create(\"ExpoOut\", function(p) {\n\t\t\t\treturn 1 - Math.pow(2, -10 * p);\n\t\t\t}),\n\t\t\t_create(\"ExpoIn\", function(p) {\n\t\t\t\treturn Math.pow(2, 10 * (p - 1)) - 0.001;\n\t\t\t}),\n\t\t\t_create(\"ExpoInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t\t\t})\n\t\t);\n\n\n\t\t//Sine\n\t\t_wrap(\"Sine\",\n\t\t\t_create(\"SineOut\", function(p) {\n\t\t\t\treturn Math.sin(p * _HALF_PI);\n\t\t\t}),\n\t\t\t_create(\"SineIn\", function(p) {\n\t\t\t\treturn -Math.cos(p * _HALF_PI) + 1;\n\t\t\t}),\n\t\t\t_create(\"SineInOut\", function(p) {\n\t\t\t\treturn -0.5 * (Math.cos(Math.PI * p) - 1);\n\t\t\t})\n\t\t);\n\n\t\t_class(\"easing.EaseLookup\", {\n\t\t\t\tfind:function(s) {\n\t\t\t\t\treturn Ease.map[s];\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//register the non-standard eases\n\t\t_easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t\t_easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t\t_easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\n\t\treturn Back;\n\t\t\n\t}, true);\n\n\n});\n\nif (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); } //necessary in case TweenLite was already loaded separately.\n\n\n\n\n\n\n\n\n\n\n\n/*\n * ----------------------------------------------------------------\n * Base classes like TweenLite, SimpleTimeline, Ease, Ticker, etc.\n * ----------------------------------------------------------------\n */\n(function(window, moduleName) {\n\n\t\t\"use strict\";\n\t\tvar _exports = {},\n\t\t\t_doc = window.document,\n\t\t\t_globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n\t\tif (_globals.TweenLite) {\n\t\t\treturn; //in case the core set of classes is already loaded, don't instantiate twice.\n\t\t}\n\t\tvar _namespace = function(ns) {\n\t\t\t\tvar a = ns.split(\".\"),\n\t\t\t\t\tp = _globals, i;\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\tp[a[i]] = p = p[a[i]] || {};\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\tgs = _namespace(\"com.greensock\"),\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_slice = function(a) { //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++])) {}\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\t_emptyFunc = function() {},\n\t\t\t_isArray = (function() { //works around issues in iframe environments where the Array global isn't shared, thus if the object originates in a different window/iframe, \"(obj instanceof Array)\" will evaluate false. We added some speed optimizations to avoid Object.prototype.toString.call() unless it's absolutely necessary because it's VERY slow (like 20x slower)\n\t\t\t\tvar toString = Object.prototype.toString,\n\t\t\t\t\tarray = toString.call([]);\n\t\t\t\treturn function(obj) {\n\t\t\t\t\treturn obj != null && (obj instanceof Array || (typeof(obj) === \"object\" && !!obj.push && toString.call(obj) === array));\n\t\t\t\t};\n\t\t\t}()),\n\t\t\ta, i, p, _ticker, _tickerActive,\n\t\t\t_defLookup = {},\n\n\t\t\t/**\n\t\t\t * @constructor\n\t\t\t * Defines a GreenSock class, optionally with an array of dependencies that must be instantiated first and passed into the definition.\n\t\t\t * This allows users to load GreenSock JS files in any order even if they have interdependencies (like CSSPlugin extends TweenPlugin which is\n\t\t\t * inside TweenLite.js, but if CSSPlugin is loaded first, it should wait to run its code until TweenLite.js loads and instantiates TweenPlugin\n\t\t\t * and then pass TweenPlugin to CSSPlugin's definition). This is all done automatically and internally.\n\t\t\t *\n\t\t\t * Every definition will be added to a \"com.greensock\" global object (typically window, but if a window.GreenSockGlobals object is found,\n\t\t\t * it will go there as of v1.7). For example, TweenLite will be found at window.com.greensock.TweenLite and since it's a global class that should be available anywhere,\n\t\t\t * it is ALSO referenced at window.TweenLite. However some classes aren't considered global, like the base com.greensock.core.Animation class, so\n\t\t\t * those will only be at the package like window.com.greensock.core.Animation. Again, if you define a GreenSockGlobals object on the window, everything\n\t\t\t * gets tucked neatly inside there instead of on the window directly. This allows you to do advanced things like load multiple versions of GreenSock\n\t\t\t * files and put them into distinct objects (imagine a banner ad uses a newer version but the main site uses an older one). In that case, you could\n\t\t\t * sandbox the banner one like:\n\t\t\t *\n\t\t\t * <script>\n\t\t\t *     var gs = window.GreenSockGlobals = {}; //the newer version we're about to load could now be referenced in a \"gs\" object, like gs.TweenLite.to(...). Use whatever alias you want as long as it's unique, \"gs\" or \"banner\" or whatever.\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.7/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     window.GreenSockGlobals = window._gsQueue = window._gsDefine = null; //reset it back to null (along with the special _gsQueue variable) so that the next load of TweenMax affects the window and we can reference things directly like TweenLite.to(...)\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.6/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     gs.TweenLite.to(...); //would use v1.7\n\t\t\t *     TweenLite.to(...); //would use v1.6\n\t\t\t * </script>\n\t\t\t *\n\t\t\t * @param {!string} ns The namespace of the class definition, leaving off \"com.greensock.\" as that's assumed. For example, \"TweenLite\" or \"plugins.CSSPlugin\" or \"easing.Back\".\n\t\t\t * @param {!Array.<string>} dependencies An array of dependencies (described as their namespaces minus \"com.greensock.\" prefix). For example [\"TweenLite\",\"plugins.TweenPlugin\",\"core.Animation\"]\n\t\t\t * @param {!function():Object} func The function that should be called and passed the resolved dependencies which will return the actual class for this definition.\n\t\t\t * @param {boolean=} global If true, the class will be added to the global scope (typically window unless you define a window.GreenSockGlobals object)\n\t\t\t */\n\t\t\tDefinition = function(ns, dependencies, func, global) {\n\t\t\t\tthis.sc = (_defLookup[ns]) ? _defLookup[ns].sc : []; //subclasses\n\t\t\t\t_defLookup[ns] = this;\n\t\t\t\tthis.gsClass = null;\n\t\t\t\tthis.func = func;\n\t\t\t\tvar _classes = [];\n\t\t\t\tthis.check = function(init) {\n\t\t\t\t\tvar i = dependencies.length,\n\t\t\t\t\t\tmissing = i,\n\t\t\t\t\t\tcur, a, n, cl, hasModule;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t\t\t\t\t\t\t_classes[i] = cur.gsClass;\n\t\t\t\t\t\t\tmissing--;\n\t\t\t\t\t\t} else if (init) {\n\t\t\t\t\t\t\tcur.sc.push(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (missing === 0 && func) {\n\t\t\t\t\t\ta = (\"com.greensock.\" + ns).split(\".\");\n\t\t\t\t\t\tn = a.pop();\n\t\t\t\t\t\tcl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\n\t\t\t\t\t\t//exports to multiple environments\n\t\t\t\t\t\tif (global) {\n\t\t\t\t\t\t\t_globals[n] = _exports[n] = cl; //provides a way to avoid global namespace pollution. By default, the main classes like TweenLite, Power1, Strong, etc. are added to window unless a GreenSockGlobals is defined. So if you want to have things added to a custom object instead, just do something like window.GreenSockGlobals = {} before loading any GreenSock files. You can even set up an alias like window.GreenSockGlobals = windows.gs = {} so that you can access everything like gs.TweenLite. Also remember that ALL classes are added to the window.com.greensock object (in their respective packages, like com.greensock.easing.Power1, com.greensock.TweenLite, etc.)\n\t\t\t\t\t\t\thasModule = (typeof(module) !== \"undefined\" && module.exports);\n\t\t\t\t\t\t\tif (!hasModule && typeof(define) === \"function\" && define.amd){ //AMD\n\t\t\t\t\t\t\t\tdefine((window.GreenSockAMDPath ? window.GreenSockAMDPath + \"/\" : \"\") + ns.split(\".\").pop(), [], function() { return cl; });\n\t\t\t\t\t\t\t} else if (hasModule){ //node\n\t\t\t\t\t\t\t\tif (ns === moduleName) {\n\t\t\t\t\t\t\t\t\tmodule.exports = _exports[moduleName] = cl;\n\t\t\t\t\t\t\t\t\tfor (i in _exports) {\n\t\t\t\t\t\t\t\t\t\tcl[i] = _exports[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (_exports[moduleName]) {\n\t\t\t\t\t\t\t\t\t_exports[moduleName][n] = cl;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (i = 0; i < this.sc.length; i++) {\n\t\t\t\t\t\t\tthis.sc[i].check();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.check(true);\n\t\t\t},\n\n\t\t\t//used to create Definition instances (which basically registers a class that has dependencies).\n\t\t\t_gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t\t\t\treturn new Definition(ns, dependencies, func, global);\n\t\t\t},\n\n\t\t\t//a quick way to create a class that doesn't have any dependencies. Returns the class, but first registers it in the GreenSock namespace so that other classes can grab it (other classes might be dependent on the class).\n\t\t\t_class = gs._class = function(ns, func, global) {\n\t\t\t\tfunc = func || function() {};\n\t\t\t\t_gsDefine(ns, [], function(){ return func; }, global);\n\t\t\t\treturn func;\n\t\t\t};\n\n\t\t_gsDefine.globals = _globals;\n\n\n\n/*\n * ----------------------------------------------------------------\n * Ease\n * ----------------------------------------------------------------\n */\n\t\tvar _baseParams = [0, 0, 1, 1],\n\t\t\t_blankArray = [],\n\t\t\tEase = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t\t\t\tthis._func = func;\n\t\t\t\tthis._type = type || 0;\n\t\t\t\tthis._power = power || 0;\n\t\t\t\tthis._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t\t\t}, true),\n\t\t\t_easeMap = Ease.map = {},\n\t\t\t_easeReg = Ease.register = function(ease, names, types, create) {\n\t\t\t\tvar na = names.split(\",\"),\n\t\t\t\t\ti = na.length,\n\t\t\t\t\tta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"),\n\t\t\t\t\te, name, j, type;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tname = na[i];\n\t\t\t\t\te = create ? _class(\"easing.\"+name, null, true) : gs.easing[name] || {};\n\t\t\t\t\tj = ta.length;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\ttype = ta[j];\n\t\t\t\t\t\t_easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tp = Ease.prototype;\n\t\tp._calcEnd = false;\n\t\tp.getRatio = function(p) {\n\t\t\tif (this._func) {\n\t\t\t\tthis._params[0] = p;\n\t\t\t\treturn this._func.apply(null, this._params);\n\t\t\t}\n\t\t\tvar t = this._type,\n\t\t\t\tpw = this._power,\n\t\t\t\tr = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\t\t\tif (pw === 1) {\n\t\t\t\tr *= r;\n\t\t\t} else if (pw === 2) {\n\t\t\t\tr *= r * r;\n\t\t\t} else if (pw === 3) {\n\t\t\t\tr *= r * r * r;\n\t\t\t} else if (pw === 4) {\n\t\t\t\tr *= r * r * r * r;\n\t\t\t}\n\t\t\treturn (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n\t\t};\n\n\t\t//create all the standard eases like Linear, Quad, Cubic, Quart, Quint, Strong, Power0, Power1, Power2, Power3, and Power4 (each with easeIn, easeOut, and easeInOut)\n\t\ta = [\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"];\n\t\ti = a.length;\n\t\twhile (--i > -1) {\n\t\t\tp = a[i]+\",Power\"+i;\n\t\t\t_easeReg(new Ease(null,null,1,i), p, \"easeOut\", true);\n\t\t\t_easeReg(new Ease(null,null,2,i), p, \"easeIn\" + ((i === 0) ? \",easeNone\" : \"\"));\n\t\t\t_easeReg(new Ease(null,null,3,i), p, \"easeInOut\");\n\t\t}\n\t\t_easeMap.linear = gs.easing.Linear.easeIn;\n\t\t_easeMap.swing = gs.easing.Quad.easeInOut; //for jQuery folks\n\n\n/*\n * ----------------------------------------------------------------\n * EventDispatcher\n * ----------------------------------------------------------------\n */\n\t\tvar EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t\t\tthis._listeners = {};\n\t\t\tthis._eventTarget = target || this;\n\t\t});\n\t\tp = EventDispatcher.prototype;\n\n\t\tp.addEventListener = function(type, callback, scope, useParam, priority) {\n\t\t\tpriority = priority || 0;\n\t\t\tvar list = this._listeners[type],\n\t\t\t\tindex = 0,\n\t\t\t\tlistener, i;\n\t\t\tif (this === _ticker && !_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (list == null) {\n\t\t\t\tthis._listeners[type] = list = [];\n\t\t\t}\n\t\t\ti = list.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tlistener = list[i];\n\t\t\t\tif (listener.c === callback && listener.s === scope) {\n\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t} else if (index === 0 && listener.pr < priority) {\n\t\t\t\t\tindex = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.splice(index, 0, {c:callback, s:scope, up:useParam, pr:priority});\n\t\t};\n\n\t\tp.removeEventListener = function(type, callback) {\n\t\t\tvar list = this._listeners[type], i;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (list[i].c === callback) {\n\t\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.dispatchEvent = function(type) {\n\t\t\tvar list = this._listeners[type],\n\t\t\t\ti, t, listener;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\tif (i > 1) {\n\t\t\t\t\tlist = list.slice(0); //in case addEventListener() is called from within a listener/callback (otherwise the index could change, resulting in a skip)\n\t\t\t\t}\n\t\t\t\tt = this._eventTarget;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tlistener = list[i];\n\t\t\t\t\tif (listener) {\n\t\t\t\t\t\tif (listener.up) {\n\t\t\t\t\t\t\tlistener.c.call(listener.s || t, {type:type, target:t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlistener.c.call(listener.s || t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * Ticker\n * ----------------------------------------------------------------\n */\n \t\tvar _reqAnimFrame = window.requestAnimationFrame,\n\t\t\t_cancelAnimFrame = window.cancelAnimationFrame,\n\t\t\t_getTime = Date.now || function() {return new Date().getTime();},\n\t\t\t_lastUpdate = _getTime();\n\n\t\t//now try to determine the requestAnimationFrame and cancelAnimationFrame functions and if none are found, we'll use a setTimeout()/clearTimeout() polyfill.\n\t\ta = [\"ms\",\"moz\",\"webkit\",\"o\"];\n\t\ti = a.length;\n\t\twhile (--i > -1 && !_reqAnimFrame) {\n\t\t\t_reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t\t\t_cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t\t}\n\n\t\t_class(\"Ticker\", function(fps, useRAF) {\n\t\t\tvar _self = this,\n\t\t\t\t_startTime = _getTime(),\n\t\t\t\t_useRAF = (useRAF !== false && _reqAnimFrame) ? \"auto\" : false,\n\t\t\t\t_lagThreshold = 500,\n\t\t\t\t_adjustedLag = 33,\n\t\t\t\t_tickWord = \"tick\", //helps reduce gc burden\n\t\t\t\t_fps, _req, _id, _gap, _nextTime,\n\t\t\t\t_tick = function(manual) {\n\t\t\t\t\tvar elapsed = _getTime() - _lastUpdate,\n\t\t\t\t\t\toverlap, dispatch;\n\t\t\t\t\tif (elapsed > _lagThreshold) {\n\t\t\t\t\t\t_startTime += elapsed - _adjustedLag;\n\t\t\t\t\t}\n\t\t\t\t\t_lastUpdate += elapsed;\n\t\t\t\t\t_self.time = (_lastUpdate - _startTime) / 1000;\n\t\t\t\t\toverlap = _self.time - _nextTime;\n\t\t\t\t\tif (!_fps || overlap > 0 || manual === true) {\n\t\t\t\t\t\t_self.frame++;\n\t\t\t\t\t\t_nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (manual !== true) { //make sure the request is made before we dispatch the \"tick\" event so that timing is maintained. Otherwise, if processing the \"tick\" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.\n\t\t\t\t\t\t_id = _req(_tick);\n\t\t\t\t\t}\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\t_self.dispatchEvent(_tickWord);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tEventDispatcher.call(_self);\n\t\t\t_self.time = _self.frame = 0;\n\t\t\t_self.tick = function() {\n\t\t\t\t_tick(true);\n\t\t\t};\n\n\t\t\t_self.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t\t_lagThreshold = threshold || (1 / _tinyNum); //zero should be interpreted as basically unlimited\n\t\t\t\t_adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t\t\t};\n\n\t\t\t_self.sleep = function() {\n\t\t\t\tif (_id == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_useRAF || !_cancelAnimFrame) {\n\t\t\t\t\tclearTimeout(_id);\n\t\t\t\t} else {\n\t\t\t\t\t_cancelAnimFrame(_id);\n\t\t\t\t}\n\t\t\t\t_req = _emptyFunc;\n\t\t\t\t_id = null;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_self.wake = function(seamless) {\n\t\t\t\tif (_id !== null) {\n\t\t\t\t\t_self.sleep();\n\t\t\t\t} else if (seamless) {\n\t\t\t\t\t_startTime += -_lastUpdate + (_lastUpdate = _getTime());\n\t\t\t\t} else if (_self.frame > 10) { //don't trigger lagSmoothing if we're just waking up, and make sure that at least 10 frames have elapsed because of the iOS bug that we work around below with the 1.5-second setTimout().\n\t\t\t\t\t_lastUpdate = _getTime() - _lagThreshold + 5;\n\t\t\t\t}\n\t\t\t\t_req = (_fps === 0) ? _emptyFunc : (!_useRAF || !_reqAnimFrame) ? function(f) { return setTimeout(f, ((_nextTime - _self.time) * 1000 + 1) | 0); } : _reqAnimFrame;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = true;\n\t\t\t\t}\n\t\t\t\t_tick(2);\n\t\t\t};\n\n\t\t\t_self.fps = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _fps;\n\t\t\t\t}\n\t\t\t\t_fps = value;\n\t\t\t\t_gap = 1 / (_fps || 60);\n\t\t\t\t_nextTime = this.time + _gap;\n\t\t\t\t_self.wake();\n\t\t\t};\n\n\t\t\t_self.useRAF = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _useRAF;\n\t\t\t\t}\n\t\t\t\t_self.sleep();\n\t\t\t\t_useRAF = value;\n\t\t\t\t_self.fps(_fps);\n\t\t\t};\n\t\t\t_self.fps(fps);\n\n\t\t\t//a bug in iOS 6 Safari occasionally prevents the requestAnimationFrame from working initially, so we use a 1.5-second timeout that automatically falls back to setTimeout() if it senses this condition.\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (_useRAF === \"auto\" && _self.frame < 5 && _doc.visibilityState !== \"hidden\") {\n\t\t\t\t\t_self.useRAF(false);\n\t\t\t\t}\n\t\t\t}, 1500);\n\t\t});\n\n\t\tp = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t\tp.constructor = gs.Ticker;\n\n\n/*\n * ----------------------------------------------------------------\n * Animation\n * ----------------------------------------------------------------\n */\n\t\tvar Animation = _class(\"core.Animation\", function(duration, vars) {\n\t\t\t\tthis.vars = vars = vars || {};\n\t\t\t\tthis._duration = this._totalDuration = duration || 0;\n\t\t\t\tthis._delay = Number(vars.delay) || 0;\n\t\t\t\tthis._timeScale = 1;\n\t\t\t\tthis._active = (vars.immediateRender === true);\n\t\t\t\tthis.data = vars.data;\n\t\t\t\tthis._reversed = (vars.reversed === true);\n\n\t\t\t\tif (!_rootTimeline) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_tickerActive) { //some browsers (like iOS 6 Safari) shut down JavaScript execution when the tab is disabled and they [occasionally] neglect to start up requestAnimationFrame again when returning - this code ensures that the engine starts up again properly.\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\n\t\t\t\tvar tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t\t\t\ttl.add(this, tl._time);\n\n\t\t\t\tif (this.vars.paused) {\n\t\t\t\t\tthis.paused(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t_ticker = Animation.ticker = new gs.Ticker();\n\t\tp = Animation.prototype;\n\t\tp._dirty = p._gc = p._initted = p._paused = false;\n\t\tp._totalTime = p._time = 0;\n\t\tp._rawPrevTime = -1;\n\t\tp._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t\tp._paused = false;\n\n\n\t\t//some browsers (like iOS) occasionally drop the requestAnimationFrame event when the user switches to a different tab and then comes back again, so we use a 2-second setTimeout() to sense if/when that condition occurs and then wake() the ticker.\n\t\tvar _checkTimeout = function() {\n\t\t\t\tif (_tickerActive && _getTime() - _lastUpdate > 2000) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\tsetTimeout(_checkTimeout, 2000);\n\t\t\t};\n\t\t_checkTimeout();\n\n\n\t\tp.play = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(false).paused(false);\n\t\t};\n\n\t\tp.pause = function(atTime, suppressEvents) {\n\t\t\tif (atTime != null) {\n\t\t\t\tthis.seek(atTime, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.resume = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(false);\n\t\t};\n\n\t\tp.seek = function(time, suppressEvents) {\n\t\t\treturn this.totalTime(Number(time), suppressEvents !== false);\n\t\t};\n\n\t\tp.restart = function(includeDelay, suppressEvents) {\n\t\t\treturn this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, (suppressEvents !== false), true);\n\t\t};\n\n\t\tp.reverse = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek((from || this.totalDuration()), suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(true).paused(false);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\t//stub - we override this method in subclasses.\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\tthis._initted = this._gc = false;\n\t\t\tthis._rawPrevTime = -1;\n\t\t\tif (this._gc || !this.timeline) {\n\t\t\t\tthis._enabled(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.isActive = function() {\n\t\t\tvar tl = this._timeline, //the 2 root timelines won't have a _timeline; they're always active.\n\t\t\t\tstartTime = this._startTime,\n\t\t\t\trawTime;\n\t\t\treturn (!tl || (!this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime(true)) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale));\n\t\t};\n\n\t\tp._enabled = function (enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tthis._gc = !enabled;\n\t\t\tthis._active = this.isActive();\n\t\t\tif (ignoreTimeline !== true) {\n\t\t\t\tif (enabled && !this.timeline) {\n\t\t\t\t\tthis._timeline.add(this, this._startTime - this._delay);\n\t\t\t\t} else if (!enabled && this.timeline) {\n\t\t\t\t\tthis._timeline._remove(this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n\t\tp._kill = function(vars, target) {\n\t\t\treturn this._enabled(false, false);\n\t\t};\n\n\t\tp.kill = function(vars, target) {\n\t\t\tthis._kill(vars, target);\n\t\t\treturn this;\n\t\t};\n\n\t\tp._uncache = function(includeSelf) {\n\t\t\tvar tween = includeSelf ? this : this.timeline;\n\t\t\twhile (tween) {\n\t\t\t\ttween._dirty = true;\n\t\t\t\ttween = tween.timeline;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._swapSelfInParams = function(params) {\n\t\t\tvar i = params.length,\n\t\t\t\tcopy = params.concat();\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (params[i] === \"{self}\") {\n\t\t\t\t\tcopy[i] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t};\n\n\t\tp._callback = function(type) {\n\t\t\tvar v = this.vars,\n\t\t\t\tcallback = v[type],\n\t\t\t\tparams = v[type + \"Params\"],\n\t\t\t\tscope = v[type + \"Scope\"] || v.callbackScope || this,\n\t\t\t\tl = params ? params.length : 0;\n\t\t\tswitch (l) { //speed optimization; call() is faster than apply() so use it when there are only a few parameters (which is by far most common). Previously we simply did var v = this.vars; v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n\t\t\t\tcase 0: callback.call(scope); break;\n\t\t\t\tcase 1: callback.call(scope, params[0]); break;\n\t\t\t\tcase 2: callback.call(scope, params[0], params[1]); break;\n\t\t\t\tdefault: callback.apply(scope, params);\n\t\t\t}\n\t\t};\n\n//----Animation getters/setters --------------------------------------------------------\n\n\t\tp.eventCallback = function(type, callback, params, scope) {\n\t\t\tif ((type || \"\").substr(0,2) === \"on\") {\n\t\t\t\tvar v = this.vars;\n\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\treturn v[type];\n\t\t\t\t}\n\t\t\t\tif (callback == null) {\n\t\t\t\t\tdelete v[type];\n\t\t\t\t} else {\n\t\t\t\t\tv[type] = callback;\n\t\t\t\t\tv[type + \"Params\"] = (_isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1) ? this._swapSelfInParams(params) : params;\n\t\t\t\t\tv[type + \"Scope\"] = scope;\n\t\t\t\t}\n\t\t\t\tif (type === \"onUpdate\") {\n\t\t\t\t\tthis._onUpdate = callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.delay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._delay;\n\t\t\t}\n\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\tthis.startTime( this._startTime + value - this._delay );\n\t\t\t}\n\t\t\tthis._delay = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tthis._dirty = false;\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tthis._duration = this._totalDuration = value;\n\t\t\tthis._uncache(true); //true in case it's a TweenMax or TimelineMax that has a repeat - we'll need to refresh the totalDuration.\n\t\t\tif (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t\t\t\tthis.totalTime(this._totalTime * (value / this._duration), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tthis._dirty = false;\n\t\t\treturn (!arguments.length) ? this._totalDuration : this.duration(value);\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\treturn this.totalTime((value > this._duration) ? this._duration : value, suppressEvents);\n\t\t};\n\n\t\tp.totalTime = function(time, suppressEvents, uncapped) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._totalTime;\n\t\t\t}\n\t\t\tif (this._timeline) {\n\t\t\t\tif (time < 0 && !uncapped) {\n\t\t\t\t\ttime += this.totalDuration();\n\t\t\t\t}\n\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\tif (this._dirty) {\n\t\t\t\t\t\tthis.totalDuration();\n\t\t\t\t\t}\n\t\t\t\t\tvar totalDuration = this._totalDuration,\n\t\t\t\t\t\ttl = this._timeline;\n\t\t\t\t\tif (time > totalDuration && !uncapped) {\n\t\t\t\t\t\ttime = totalDuration;\n\t\t\t\t\t}\n\t\t\t\t\tthis._startTime = (this._paused ? this._pauseTime : tl._time) - ((!this._reversed ? time : totalDuration - time) / this._timeScale);\n\t\t\t\t\tif (!tl._dirty) { //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.\n\t\t\t\t\t\tthis._uncache(false);\n\t\t\t\t\t}\n\t\t\t\t\t//in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The startTime of that child would get pushed out, but one of the ancestors may have completed.\n\t\t\t\t\tif (tl._timeline) {\n\t\t\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\t\t\tif (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t\t\t\t\t\t\t\ttl.totalTime(tl._totalTime, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._gc) {\n\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t}\n\t\t\t\tif (this._totalTime !== time || this._duration === 0) {\n\t\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tthis.render(time, suppressEvents, false);\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.progress = p.totalProgress = function(value, suppressEvents) {\n\t\t\tvar duration = this.duration();\n\t\t\treturn (!arguments.length) ? (duration ? this._time / duration : this.ratio) : this.totalTime(duration * value, suppressEvents);\n\t\t};\n\n\t\tp.startTime = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._startTime;\n\t\t\t}\n\t\t\tif (value !== this._startTime) {\n\t\t\t\tthis._startTime = value;\n\t\t\t\tif (this.timeline) if (this.timeline._sortChildren) {\n\t\t\t\t\tthis.timeline.add(this, value - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.endTime = function(includeRepeats) {\n\t\t\treturn this._startTime + ((includeRepeats != false) ? this.totalDuration() : this.duration()) / this._timeScale;\n\t\t};\n\n\t\tp.timeScale = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._timeScale;\n\t\t\t}\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\tif (this._timeline && this._timeline.smoothChildTiming) {\n\t\t\t\tvar pauseTime = this._pauseTime,\n\t\t\t\t\tt = (pauseTime || pauseTime === 0) ? pauseTime : this._timeline.totalTime();\n\t\t\t\tthis._startTime = t - ((t - this._startTime) * this._timeScale / value);\n\t\t\t}\n\t\t\tthis._timeScale = value;\n\t\t\treturn this._uncache(false);\n\t\t};\n\n\t\tp.reversed = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._reversed;\n\t\t\t}\n\t\t\tif (value != this._reversed) {\n\t\t\t\tthis._reversed = value;\n\t\t\t\tthis.totalTime(((this._timeline && !this._timeline.smoothChildTiming) ? this.totalDuration() - this._totalTime : this._totalTime), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.paused = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._paused;\n\t\t\t}\n\t\t\tvar tl = this._timeline,\n\t\t\t\traw, elapsed;\n\t\t\tif (value != this._paused) if (tl) {\n\t\t\t\tif (!_tickerActive && !value) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\traw = tl.rawTime();\n\t\t\t\telapsed = raw - this._pauseTime;\n\t\t\t\tif (!value && tl.smoothChildTiming) {\n\t\t\t\t\tthis._startTime += elapsed;\n\t\t\t\t\tthis._uncache(false);\n\t\t\t\t}\n\t\t\t\tthis._pauseTime = value ? raw : null;\n\t\t\t\tthis._paused = value;\n\t\t\t\tthis._active = this.isActive();\n\t\t\t\tif (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t\t\t\t\traw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n\t\t\t\t\tthis.render(raw, (raw === this._totalTime), true); //in case the target's properties changed via some other tween or manual update by the user, we should force a render.\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._gc && !value) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * SimpleTimeline\n * ----------------------------------------------------------------\n */\n\t\tvar SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t\t\tAnimation.call(this, 0, vars);\n\t\t\tthis.autoRemoveChildren = this.smoothChildTiming = true;\n\t\t});\n\n\t\tp = SimpleTimeline.prototype = new Animation();\n\t\tp.constructor = SimpleTimeline;\n\t\tp.kill()._gc = false;\n\t\tp._first = p._last = p._recent = null;\n\t\tp._sortChildren = false;\n\n\t\tp.add = p.insert = function(child, position, align, stagger) {\n\t\t\tvar prevTween, st;\n\t\t\tchild._startTime = Number(position || 0) + child._delay;\n\t\t\tif (child._paused) if (this !== child._timeline) { //we only adjust the _pauseTime if it wasn't in this timeline already. Remember, sometimes a tween will be inserted again into the same timeline when its startTime is changed so that the tweens in the TimelineLite/Max are re-ordered properly in the linked list (so everything renders in the proper order).\n\t\t\t\tchild._pauseTime = child._startTime + ((this.rawTime() - child._startTime) / child._timeScale);\n\t\t\t}\n\t\t\tif (child.timeline) {\n\t\t\t\tchild.timeline._remove(child, true); //removes from existing timeline so that it can be properly added to this one.\n\t\t\t}\n\t\t\tchild.timeline = child._timeline = this;\n\t\t\tif (child._gc) {\n\t\t\t\tchild._enabled(true, true);\n\t\t\t}\n\t\t\tprevTween = this._last;\n\t\t\tif (this._sortChildren) {\n\t\t\t\tst = child._startTime;\n\t\t\t\twhile (prevTween && prevTween._startTime > st) {\n\t\t\t\t\tprevTween = prevTween._prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prevTween) {\n\t\t\t\tchild._next = prevTween._next;\n\t\t\t\tprevTween._next = child;\n\t\t\t} else {\n\t\t\t\tchild._next = this._first;\n\t\t\t\tthis._first = child;\n\t\t\t}\n\t\t\tif (child._next) {\n\t\t\t\tchild._next._prev = child;\n\t\t\t} else {\n\t\t\t\tthis._last = child;\n\t\t\t}\n\t\t\tchild._prev = prevTween;\n\t\t\tthis._recent = child;\n\t\t\tif (this._timeline) {\n\t\t\t\tthis._uncache(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tif (tween.timeline === this) {\n\t\t\t\tif (!skipDisable) {\n\t\t\t\t\ttween._enabled(false, true);\n\t\t\t\t}\n\n\t\t\t\tif (tween._prev) {\n\t\t\t\t\ttween._prev._next = tween._next;\n\t\t\t\t} else if (this._first === tween) {\n\t\t\t\t\tthis._first = tween._next;\n\t\t\t\t}\n\t\t\t\tif (tween._next) {\n\t\t\t\t\ttween._next._prev = tween._prev;\n\t\t\t\t} else if (this._last === tween) {\n\t\t\t\t\tthis._last = tween._prev;\n\t\t\t\t}\n\t\t\t\ttween._next = tween._prev = tween.timeline = null;\n\t\t\t\tif (tween === this._recent) {\n\t\t\t\t\tthis._recent = this._last;\n\t\t\t\t}\n\n\t\t\t\tif (this._timeline) {\n\t\t\t\t\tthis._uncache(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar tween = this._first,\n\t\t\t\tnext;\n\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\tif (tween._active || (time >= tween._startTime && !tween._paused)) {\n\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t};\n\n\t\tp.rawTime = function() {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\treturn this._totalTime;\n\t\t};\n\n/*\n * ----------------------------------------------------------------\n * TweenLite\n * ----------------------------------------------------------------\n */\n\t\tvar TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t\t\t\tAnimation.call(this, duration, vars);\n\t\t\t\tthis.render = TweenLite.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\n\t\t\t\tif (target == null) {\n\t\t\t\t\tthrow \"Cannot tween a null target.\";\n\t\t\t\t}\n\n\t\t\t\tthis.target = target = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\n\t\t\t\tvar isSelector = (target.jquery || (target.length && target !== window && target[0] && (target[0] === window || (target[0].nodeType && target[0].style && !target.nodeType)))),\n\t\t\t\t\toverwrite = this.vars.overwrite,\n\t\t\t\t\ti, targ, targets;\n\n\t\t\t\tthis._overwrite = overwrite = (overwrite == null) ? _overwriteLookup[TweenLite.defaultOverwrite] : (typeof(overwrite) === \"number\") ? overwrite >> 0 : _overwriteLookup[overwrite];\n\n\t\t\t\tif ((isSelector || target instanceof Array || (target.push && _isArray(target))) && typeof(target[0]) !== \"number\") {\n\t\t\t\t\tthis._targets = targets = _slice(target);  //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\t\tthis._propLookup = [];\n\t\t\t\t\tthis._siblings = [];\n\t\t\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\t\t\ttarg = targets[i];\n\t\t\t\t\t\tif (!targ) {\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\ttarg = targets[i--] = TweenLite.selector(targ); //in case it's an array of strings\n\t\t\t\t\t\t\tif (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\t\ttargets.splice(i+1, 1); //to avoid an endless loop (can't imagine why the selector would return a string, but just in case)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (targ.length && targ !== window && targ[0] && (targ[0] === window || (targ[0].nodeType && targ[0].style && !targ.nodeType))) { //in case the user is passing in an array of selector objects (like jQuery objects), we need to check one more level and pull things out if necessary. Also note that <select> elements pass all the criteria regarding length and the first child having style, so we must also check to ensure the target isn't an HTML node itself.\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tthis._targets = targets = targets.concat(_slice(targ));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._siblings[i] = _register(targ, this, false);\n\t\t\t\t\t\tif (overwrite === 1) if (this._siblings[i].length > 1) {\n\t\t\t\t\t\t\t_applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._propLookup = {};\n\t\t\t\t\tthis._siblings = _register(target, this, false);\n\t\t\t\t\tif (overwrite === 1) if (this._siblings.length > 1) {\n\t\t\t\t\t\t_applyOverwrite(target, this, null, 1, this._siblings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.immediateRender || (duration === 0 && this._delay === 0 && this.vars.immediateRender !== false)) {\n\t\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\t\tthis.render(Math.min(0, -this._delay)); //in case delay is negative\n\t\t\t\t}\n\t\t\t}, true),\n\t\t\t_isSelector = function(v) {\n\t\t\t\treturn (v && v.length && v !== window && v[0] && (v[0] === window || (v[0].nodeType && v[0].style && !v.nodeType))); //we cannot check \"nodeType\" if the target is window from within an iframe, otherwise it will trigger a security error in some browsers like Firefox.\n\t\t\t},\n\t\t\t_autoCSS = function(vars, target) {\n\t\t\t\tvar css = {},\n\t\t\t\t\tp;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tif (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || (_plugins[p] && _plugins[p]._autoCSS))) { //note: <img> elements contain read-only \"x\" and \"y\" properties. We should also prioritize editing css width/height rather than the element's properties.\n\t\t\t\t\t\tcss[p] = vars[p];\n\t\t\t\t\t\tdelete vars[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvars.css = css;\n\t\t\t};\n\n\t\tp = TweenLite.prototype = new Animation();\n\t\tp.constructor = TweenLite;\n\t\tp.kill()._gc = false;\n\n//----TweenLite defaults, overwrite management, and root updates ----------------------------------------------------\n\n\t\tp.ratio = 0;\n\t\tp._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t\tp._notifyPluginsOfEnabled = p._lazy = false;\n\n\t\tTweenLite.version = \"1.19.1\";\n\t\tTweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t\tTweenLite.defaultOverwrite = \"auto\";\n\t\tTweenLite.ticker = _ticker;\n\t\tTweenLite.autoSleep = 120;\n\t\tTweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t_ticker.lagSmoothing(threshold, adjustedLag);\n\t\t};\n\n\t\tTweenLite.selector = window.$ || window.jQuery || function(e) {\n\t\t\tvar selector = window.$ || window.jQuery;\n\t\t\tif (selector) {\n\t\t\t\tTweenLite.selector = selector;\n\t\t\t\treturn selector(e);\n\t\t\t}\n\t\t\treturn (typeof(_doc) === \"undefined\") ? e : (_doc.querySelectorAll ? _doc.querySelectorAll(e) : _doc.getElementById((e.charAt(0) === \"#\") ? e.substr(1) : e));\n\t\t};\n\n\t\tvar _lazyTweens = [],\n\t\t\t_lazyLookup = {},\n\t\t\t_numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t\t//_nonNumbersExp = /(?:([\\-+](?!(\\d|=)))|[^\\d\\-+=e]|(e(?![\\-+][\\d])))+/ig,\n\t\t\t_setRatio = function(v) {\n\t\t\t\tvar pt = this._firstPT,\n\t\t\t\t\tmin = 0.000001,\n\t\t\t\t\tval;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tval = !pt.blob ? pt.c * v + pt.s : (v === 1) ? this.end : v ? this.join(\"\") : this.start;\n\t\t\t\t\tif (pt.m) {\n\t\t\t\t\t\tval = pt.m(val, this._target || pt.t);\n\t\t\t\t\t} else if (val < min) if (val > -min && !pt.blob) { //prevents issues with converting very small numbers to strings in the browser\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!pt.f) {\n\t\t\t\t\t\tpt.t[pt.p] = val;\n\t\t\t\t\t} else if (pt.fp) {\n\t\t\t\t\t\tpt.t[pt.p](pt.fp, val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.t[pt.p](val);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t},\n\t\t\t//compares two strings (start/end), finds the numbers that are different and spits back an array representing the whole value but with the changing values isolated as elements. For example, \"rgb(0,0,0)\" and \"rgb(100,50,0)\" would become [\"rgb(\", 0, \",\", 50, \",0)\"]. Notice it merges the parts that are identical (performance optimization). The array also has a linked list of PropTweens attached starting with _firstPT that contain the tweening data (t, p, s, c, f, etc.). It also stores the starting value as a \"start\" property so that we can revert to it if/when necessary, like when a tween rewinds fully. If the quantity of numbers differs between the start and end, it will always prioritize the end value(s). The pt parameter is optional - it's for a PropTween that will be appended to the end of the linked list and is typically for actually setting the value after all of the elements have been updated (with array.join(\"\")).\n\t\t\t_blobDif = function(start, end, filter, pt) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tcharIndex = 0,\n\t\t\t\t\ts = \"\",\n\t\t\t\t\tcolor = 0,\n\t\t\t\t\tstartNums, endNums, num, i, l, nonNumbers, currentNum;\n\t\t\t\ta.start = start;\n\t\t\t\ta.end = end;\n\t\t\t\tstart = a[0] = start + \"\"; //ensure values are strings\n\t\t\t\tend = a[1] = end + \"\";\n\t\t\t\tif (filter) {\n\t\t\t\t\tfilter(a); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.\n\t\t\t\t\tstart = a[0];\n\t\t\t\t\tend = a[1];\n\t\t\t\t}\n\t\t\t\ta.length = 0;\n\t\t\t\tstartNums = start.match(_numbersExp) || [];\n\t\t\t\tendNums = end.match(_numbersExp) || [];\n\t\t\t\tif (pt) {\n\t\t\t\t\tpt._next = null;\n\t\t\t\t\tpt.blob = 1;\n\t\t\t\t\ta._firstPT = a._applyPT = pt; //apply last in the linked list (which means inserting it first)\n\t\t\t\t}\n\t\t\t\tl = endNums.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tcurrentNum = endNums[i];\n\t\t\t\t\tnonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex)-charIndex);\n\t\t\t\t\ts += (nonNumbers || !i) ? nonNumbers : \",\"; //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n\t\t\t\t\tcharIndex += nonNumbers.length;\n\t\t\t\t\tif (color) { //sense rgba() values and round them.\n\t\t\t\t\t\tcolor = (color + 1) % 5;\n\t\t\t\t\t} else if (nonNumbers.substr(-5) === \"rgba(\") {\n\t\t\t\t\t\tcolor = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (currentNum === startNums[i] || startNums.length <= i) {\n\t\t\t\t\t\ts += currentNum;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (s) {\n\t\t\t\t\t\t\ta.push(s);\n\t\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum = parseFloat(startNums[i]);\n\t\t\t\t\t\ta.push(num);\n\t\t\t\t\t\ta._firstPT = {_next: a._firstPT, t:a, p: a.length-1, s:num, c:((currentNum.charAt(1) === \"=\") ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : (parseFloat(currentNum) - num)) || 0, f:0, m:(color && color < 4) ? Math.round : 0};\n\t\t\t\t\t\t//note: we don't set _prev because we'll never need to remove individual PropTweens from this list.\n\t\t\t\t\t}\n\t\t\t\t\tcharIndex += currentNum.length;\n\t\t\t\t}\n\t\t\t\ts += end.substr(charIndex);\n\t\t\t\tif (s) {\n\t\t\t\t\ta.push(s);\n\t\t\t\t}\n\t\t\t\ta.setRatio = _setRatio;\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\t//note: \"funcParam\" is only necessary for function-based getters/setters that require an extra parameter like getAttribute(\"width\") and setAttribute(\"width\", value). In this example, funcParam would be \"width\". Used by AttrPlugin for example.\n\t\t\t_addPropTween = function(target, prop, start, end, overwriteProp, mod, funcParam, stringFilter, index) {\n\t\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\t\tend = end(index || 0, target);\n\t\t\t\t}\n\t\t\t\tvar type = typeof(target[prop]),\n\t\t\t\t\tgetterName = (type !== \"function\") ? \"\" : ((prop.indexOf(\"set\") || typeof(target[\"get\" + prop.substr(3)]) !== \"function\") ? prop : \"get\" + prop.substr(3)),\n\t\t\t\t\ts = (start !== \"get\") ? start : !getterName ? target[prop] : funcParam ? target[getterName](funcParam) : target[getterName](),\n\t\t\t\t\tisRelative = (typeof(end) === \"string\" && end.charAt(1) === \"=\"),\n\t\t\t\t\tpt = {t:target, p:prop, s:s, f:(type === \"function\"), pg:0, n:overwriteProp || prop, m:(!mod ? 0 : (typeof(mod) === \"function\") ? mod : Math.round), pr:0, c:isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : (parseFloat(end) - s) || 0},\n\t\t\t\t\tblob;\n\n\t\t\t\tif (typeof(s) !== \"number\" || (typeof(end) !== \"number\" && !isRelative)) {\n\t\t\t\t\tif (funcParam || isNaN(s) || (!isRelative && isNaN(end)) || typeof(s) === \"boolean\" || typeof(end) === \"boolean\") {\n\t\t\t\t\t\t//a blob (string that has multiple numbers in it)\n\t\t\t\t\t\tpt.fp = funcParam;\n\t\t\t\t\t\tblob = _blobDif(s, (isRelative ? pt.s + pt.c : end), stringFilter || TweenLite.defaultStringFilter, pt);\n\t\t\t\t\t\tpt = {t: blob, p: \"setRatio\", s: 0, c: 1, f: 2, pg: 0, n: overwriteProp || prop, pr: 0, m: 0}; //\"2\" indicates it's a Blob property tween. Needed for RoundPropsPlugin for example.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.s = parseFloat(s);\n\t\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\t\tpt.c = (parseFloat(end) - pt.s) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pt.c) { //only add it to the linked list if there's a change.\n\t\t\t\t\tif ((pt._next = this._firstPT)) {\n\t\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t\t}\n\t\t\t\t\tthis._firstPT = pt;\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_internals = TweenLite._internals = {isArray:_isArray, isSelector:_isSelector, lazyTweens:_lazyTweens, blobDif:_blobDif}, //gives us a way to expose certain private values to other GreenSock classes without contaminating tha main TweenLite object.\n\t\t\t_plugins = TweenLite._plugins = {},\n\t\t\t_tweenLookup = _internals.tweenLookup = {},\n\t\t\t_tweenLookupNum = 0,\n\t\t\t_reservedProps = _internals.reservedProps = {ease:1, delay:1, overwrite:1, onComplete:1, onCompleteParams:1, onCompleteScope:1, useFrames:1, runBackwards:1, startAt:1, onUpdate:1, onUpdateParams:1, onUpdateScope:1, onStart:1, onStartParams:1, onStartScope:1, onReverseComplete:1, onReverseCompleteParams:1, onReverseCompleteScope:1, onRepeat:1, onRepeatParams:1, onRepeatScope:1, easeParams:1, yoyo:1, immediateRender:1, repeat:1, repeatDelay:1, data:1, paused:1, reversed:1, autoCSS:1, lazy:1, onOverwrite:1, callbackScope:1, stringFilter:1, id:1},\n\t\t\t_overwriteLookup = {none:0, all:1, auto:2, concurrent:3, allOnStart:4, preexisting:5, \"true\":1, \"false\":0},\n\t\t\t_rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(),\n\t\t\t_rootTimeline = Animation._rootTimeline = new SimpleTimeline(),\n\t\t\t_nextGCFrame = 30,\n\t\t\t_lazyRender = _internals.lazyRender = function() {\n\t\t\t\tvar i = _lazyTweens.length,\n\t\t\t\t\ttween;\n\t\t\t\t_lazyLookup = {};\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ttween = _lazyTweens[i];\n\t\t\t\t\tif (tween && tween._lazy !== false) {\n\t\t\t\t\t\ttween.render(tween._lazy[0], tween._lazy[1], true);\n\t\t\t\t\t\ttween._lazy = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_lazyTweens.length = 0;\n\t\t\t};\n\n\t\t_rootTimeline._startTime = _ticker.time;\n\t\t_rootFramesTimeline._startTime = _ticker.frame;\n\t\t_rootTimeline._active = _rootFramesTimeline._active = true;\n\t\tsetTimeout(_lazyRender, 1); //on some mobile devices, there isn't a \"tick\" before code runs which means any lazy renders wouldn't run before the next official \"tick\".\n\n\t\tAnimation._updateRoot = TweenLite.render = function() {\n\t\t\t\tvar i, a, p;\n\t\t\t\tif (_lazyTweens.length) { //if code is run outside of the requestAnimationFrame loop, there may be tweens queued AFTER the engine refreshed, so we need to ensure any pending renders occur before we refresh again.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\t_rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t\t\t\t_rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tif (_ticker.frame >= _nextGCFrame) { //dump garbage every 120 frames or whatever the user sets TweenLite.autoSleep to\n\t\t\t\t\t_nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n\t\t\t\t\tfor (p in _tweenLookup) {\n\t\t\t\t\t\ta = _tweenLookup[p].tweens;\n\t\t\t\t\t\ti = a.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i]._gc) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.length === 0) {\n\t\t\t\t\t\t\tdelete _tweenLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//if there are no more tweens in the root timelines, or if they're all paused, make the _timer sleep to reduce load on the CPU slightly\n\t\t\t\t\tp = _rootTimeline._first;\n\t\t\t\t\tif (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t\t\t\t\t\twhile (p && p._paused) {\n\t\t\t\t\t\t\tp = p._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!p) {\n\t\t\t\t\t\t\t_ticker.sleep();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t_ticker.addEventListener(\"tick\", Animation._updateRoot);\n\n\t\tvar _register = function(target, tween, scrub) {\n\t\t\t\tvar id = target._gsTweenID, a, i;\n\t\t\t\tif (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + (_tweenLookupNum++))]) {\n\t\t\t\t\t_tweenLookup[id] = {target:target, tweens:[]};\n\t\t\t\t}\n\t\t\t\tif (tween) {\n\t\t\t\t\ta = _tweenLookup[id].tweens;\n\t\t\t\t\ta[(i = a.length)] = tween;\n\t\t\t\t\tif (scrub) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i] === tween) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _tweenLookup[id].tweens;\n\t\t\t},\n\t\t\t_onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n\t\t\t\tvar func = overwrittenTween.vars.onOverwrite, r1, r2;\n\t\t\t\tif (func) {\n\t\t\t\t\tr1 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t\t\t\t}\n\t\t\t\tfunc = TweenLite.onOverwrite;\n\t\t\t\tif (func) {\n\t\t\t\t\tr2 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t\t\t\t}\n\t\t\t\treturn (r1 !== false && r2 !== false);\n\t\t\t},\n\t\t\t_applyOverwrite = function(target, tween, props, mode, siblings) {\n\t\t\t\tvar i, changed, curTween, l;\n\t\t\t\tif (mode === 1 || mode >= 4) {\n\t\t\t\t\tl = siblings.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif ((curTween = siblings[i]) !== tween) {\n\t\t\t\t\t\t\tif (!curTween._gc) {\n\t\t\t\t\t\t\t\tif (curTween._kill(null, target, tween)) {\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mode === 5) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\t\t\t\t//NOTE: Add 0.0000000001 to overcome floating point errors that can cause the startTime to be VERY slightly off (when a tween's time() is set for example)\n\t\t\t\tvar startTime = tween._startTime + _tinyNum,\n\t\t\t\t\toverlaps = [],\n\t\t\t\t\toCount = 0,\n\t\t\t\t\tzeroDur = (tween._duration === 0),\n\t\t\t\t\tglobalStart;\n\t\t\t\ti = siblings.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t} else if (curTween._timeline !== tween._timeline) {\n\t\t\t\t\t\tglobalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t\t\t\t\t\tif (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 0.0000000002)) {\n\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ti = oCount;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tcurTween = overlaps[i];\n\t\t\t\t\tif (mode === 2) if (curTween._kill(props, target, tween)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (mode !== 2 || (!curTween._firstPT && curTween._initted)) {\n\t\t\t\t\t\tif (mode !== 2 && !_onOverwrite(curTween, tween)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curTween._enabled(false, false)) { //if all property tweens have been overwritten, kill the tween.\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn changed;\n\t\t\t},\n\t\t\t_checkOverlap = function(tween, reference, zeroDur) {\n\t\t\t\tvar tl = tween._timeline,\n\t\t\t\t\tts = tl._timeScale,\n\t\t\t\t\tt = tween._startTime;\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tt += tl._startTime;\n\t\t\t\t\tts *= tl._timeScale;\n\t\t\t\t\tif (tl._paused) {\n\t\t\t\t\t\treturn -100;\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t\tt /= ts;\n\t\t\t\treturn (t > reference) ? t - reference : ((zeroDur && t === reference) || (!tween._initted && t - reference < 2 * _tinyNum)) ? _tinyNum : ((t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum) ? 0 : t - reference - _tinyNum;\n\t\t\t};\n\n\n//---- TweenLite instance methods -----------------------------------------------------------------------------\n\n\t\tp._init = function() {\n\t\t\tvar v = this.vars,\n\t\t\t\top = this._overwrittenProps,\n\t\t\t\tdur = this._duration,\n\t\t\t\timmediate = !!v.immediateRender,\n\t\t\t\tease = v.ease,\n\t\t\t\ti, initPlugins, pt, p, startVars, l;\n\t\t\tif (v.startAt) {\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tthis._startAt.render(-1, true); //if we've run a startAt previously (when the tween instantiated), we should revert it so that the values re-instantiate correctly particularly for relative tweens. Without this, a TweenLite.fromTo(obj, 1, {x:\"+=100\"}, {x:\"-=100\"}), for example, would actually jump to +=200 because the startAt would run twice, doubling the relative change.\n\t\t\t\t\tthis._startAt.kill();\n\t\t\t\t}\n\t\t\t\tstartVars = {};\n\t\t\t\tfor (p in v.startAt) { //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, 1, from, to).fromTo(e, 1, to, from);\n\t\t\t\t\tstartVars[p] = v.startAt[p];\n\t\t\t\t}\n\t\t\t\tstartVars.overwrite = false;\n\t\t\t\tstartVars.immediateRender = true;\n\t\t\t\tstartVars.lazy = (immediate && v.lazy !== false);\n\t\t\t\tstartVars.startAt = startVars.delay = null; //no nesting of startAt objects allowed (otherwise it could cause an infinite loop).\n\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, startVars);\n\t\t\t\tif (immediate) {\n\t\t\t\t\tif (this._time > 0) {\n\t\t\t\t\t\tthis._startAt = null; //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in TimelineLite/Max instances where immediateRender was false (which is the default in the convenience methods like from()).\n\t\t\t\t\t} else if (dur !== 0) {\n\t\t\t\t\t\treturn; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a TimelineLite or TimelineMax, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (v.runBackwards && dur !== 0) {\n\t\t\t\t//from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tthis._startAt.render(-1, true);\n\t\t\t\t\tthis._startAt.kill();\n\t\t\t\t\tthis._startAt = null;\n\t\t\t\t} else {\n\t\t\t\t\tif (this._time !== 0) { //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0\n\t\t\t\t\t\timmediate = false;\n\t\t\t\t\t}\n\t\t\t\t\tpt = {};\n\t\t\t\t\tfor (p in v) { //copy props into a new object and skip any reserved props, otherwise onComplete or onUpdate or onStart could fire. We should, however, permit autoCSS to go through.\n\t\t\t\t\t\tif (!_reservedProps[p] || p === \"autoCSS\") {\n\t\t\t\t\t\t\tpt[p] = v[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt.overwrite = 0;\n\t\t\t\t\tpt.data = \"isFromStart\"; //we tag the tween with as \"isFromStart\" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a \"from()\" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.\n\t\t\t\t\tpt.lazy = (immediate && v.lazy !== false);\n\t\t\t\t\tpt.immediateRender = immediate; //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)\n\t\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, pt);\n\t\t\t\t\tif (!immediate) {\n\t\t\t\t\t\tthis._startAt._init(); //ensures that the initial values are recorded\n\t\t\t\t\t\tthis._startAt._enabled(false); //no need to have the tween render on the next cycle. Disable it because we'll always manually control the renders of the _startAt tween.\n\t\t\t\t\t\tif (this.vars.immediateRender) {\n\t\t\t\t\t\t\tthis._startAt = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this._time === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._ease = ease = (!ease) ? TweenLite.defaultEase : (ease instanceof Ease) ? ease : (typeof(ease) === \"function\") ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t\t\tif (v.easeParams instanceof Array && ease.config) {\n\t\t\t\tthis._ease = ease.config.apply(ease, v.easeParams);\n\t\t\t}\n\t\t\tthis._easeType = this._ease._type;\n\t\t\tthis._easePower = this._ease._power;\n\t\t\tthis._firstPT = null;\n\n\t\t\tif (this._targets) {\n\t\t\t\tl = this._targets.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tif ( this._initProps( this._targets[i], (this._propLookup[i] = {}), this._siblings[i], (op ? op[i] : null), i) ) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinitPlugins = this._initProps(this.target, this._propLookup, this._siblings, op, 0);\n\t\t\t}\n\n\t\t\tif (initPlugins) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onInitAllProps\", this); //reorders the array in order of priority. Uses a static TweenPlugin method in order to minimize file size in TweenLite\n\t\t\t}\n\t\t\tif (op) if (!this._firstPT) if (typeof(this.target) !== \"function\") { //if all tweening properties have been overwritten, kill the tween. If the target is a function, it's probably a delayedCall so let it live.\n\t\t\t\tthis._enabled(false, false);\n\t\t\t}\n\t\t\tif (v.runBackwards) {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tpt.s += pt.c;\n\t\t\t\t\tpt.c = -pt.c;\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onUpdate = v.onUpdate;\n\t\t\tthis._initted = true;\n\t\t};\n\n\t\tp._initProps = function(target, propLookup, siblings, overwrittenProps, index) {\n\t\t\tvar p, i, initPlugins, plugin, pt, v;\n\t\t\tif (target == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (_lazyLookup[target._gsTweenID]) {\n\t\t\t\t_lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)\n\t\t\t}\n\n\t\t\tif (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) { //it's so common to use TweenLite/Max to animate the css of DOM elements, we assume that if the target is a DOM element, that's what is intended (a convenience so that users don't have to wrap things in css:{}, although we still recommend it for a slight performance boost and better specificity). Note: we cannot check \"nodeType\" on the window inside an iframe.\n\t\t\t\t_autoCSS(this.vars, target);\n\t\t\t}\n\t\t\tfor (p in this.vars) {\n\t\t\t\tv = this.vars[p];\n\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\tif (v) if ((v instanceof Array) || (v.push && _isArray(v))) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tthis.vars[p] = v = this._swapSelfInParams(v, this);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this, index)) {\n\n\t\t\t\t\t//t - target \t\t[object]\n\t\t\t\t\t//p - property \t\t[string]\n\t\t\t\t\t//s - start\t\t\t[number]\n\t\t\t\t\t//c - change\t\t[number]\n\t\t\t\t\t//f - isFunction\t[boolean]\n\t\t\t\t\t//n - name\t\t\t[string]\n\t\t\t\t\t//pg - isPlugin \t[boolean]\n\t\t\t\t\t//pr - priority\t\t[number]\n\t\t\t\t\t//m - mod           [function | 0]\n\t\t\t\t\tthis._firstPT = pt = {_next:this._firstPT, t:plugin, p:\"setRatio\", s:0, c:1, f:1, n:p, pg:1, pr:plugin._priority, m:0};\n\t\t\t\t\ti = plugin._overwriteProps.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tpropLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._priority || plugin._onInitAllProps) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._onDisable || plugin._onEnable) {\n\t\t\t\t\t\tthis._notifyPluginsOfEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter, index);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (overwrittenProps) if (this._kill(overwrittenProps, target)) { //another tween may have tried to overwrite properties of this tween before init() was called (like if two tweens start at the same time, the one created second will run first)\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps, index);\n\t\t\t}\n\t\t\tif (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t\t\t\tthis._kill(propLookup, target);\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps, index);\n\t\t\t}\n\t\t\tif (this._firstPT) if ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration)) { //zero duration tweens don't lazy render by default; everything else does.\n\t\t\t\t_lazyLookup[target._gsTweenID] = true;\n\t\t\t}\n\t\t\treturn initPlugins;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar prevTime = this._time,\n\t\t\t\tduration = this._duration,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, rawPrevTime;\n\t\t\tif (time >= duration - 0.0000001 && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tthis._totalTime = this._time = duration;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t\t\t\tif (!this._reversed ) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tforce = (force || this._timeline.autoRemoveChildren); //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (this._startTime === this._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (prevRawPrevTime < 0 || (time <= 0 && time >= -0.0000001) || (prevRawPrevTime === _tinyNum && this.data !== \"isPause\")) if (prevRawPrevTime !== time) { //note: when this.data is \"isPause\", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = 0;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTime !== 0 || (duration === 0 && prevRawPrevTime > 0)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!this._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = time;\n\n\t\t\t\tif (this._easeType) {\n\t\t\t\t\tvar r = time / duration, type = this._easeType, pow = this._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (type === 1) {\n\t\t\t\t\t\tthis.ratio = 1 - r;\n\t\t\t\t\t} else if (type === 2) {\n\t\t\t\t\t\tthis.ratio = r;\n\t\t\t\t\t} else if (time / duration < 0.5) {\n\t\t\t\t\t\tthis.ratio = r / 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ratio = 1 - (r / 2);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(time / duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._time === prevTime && !force) {\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._init();\n\t\t\t\tif (!this._initted || this._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && this._firstPT && ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration))) {\n\t\t\t\t\tthis._time = this._totalTime = prevTime;\n\t\t\t\t\tthis._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\t_lazyTweens.push(this);\n\t\t\t\t\tthis._lazy = [time, suppressEvents];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (this._time && !isComplete) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t} else if (isComplete && this._ease._calcEnd) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio((this._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._lazy !== false) { //in case a lazy render is pending, we should flush it because the new render is occurring now (imagine a lazy tween instantiating and then immediately the user calls tween.seek(tween.duration()), skipping to the end - the end render would be forced, and then if we didn't flush the lazy render, it'd fire AFTER the seek(), rendering it at the wrong time.\n\t\t\t\tthis._lazy = false;\n\t\t\t}\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTime === 0) {\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tthis._callback(\"onStart\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * this.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\n\t\t\tif (this._onUpdate) {\n\t\t\t\tif (time < 0) if (this._startAt && time !== -0.0001) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n\t\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (callback) if (!this._gc || force) { //check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && this._startAt && !this._onUpdate && time !== -0.0001) { //-0.0001 is a special value that we use when looping back to the beginning of a repeated TimelineMax, in which case we shouldn't render the _startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis._callback(callback);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tthis._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(vars, target, overwritingTween) {\n\t\t\tif (vars === \"all\") {\n\t\t\t\tvars = null;\n\t\t\t}\n\t\t\tif (vars == null) if (target == null || target === this.target) {\n\t\t\t\tthis._lazy = false;\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\ttarget = (typeof(target) !== \"string\") ? (target || this._targets || this.target) : TweenLite.selector(target) || target;\n\t\t\tvar simultaneousOverwrite = (overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline),\n\t\t\t\ti, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (this._kill(vars, target[i], overwritingTween)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._targets) {\n\t\t\t\t\ti = this._targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (target === this._targets[i]) {\n\t\t\t\t\t\t\tpropLookup = this._propLookup[i] || {};\n\t\t\t\t\t\t\tthis._overwrittenProps = this._overwrittenProps || [];\n\t\t\t\t\t\t\toverwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (target !== this.target) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup = this._propLookup;\n\t\t\t\t\toverwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t\t\t\t}\n\n\t\t\t\tif (propLookup) {\n\t\t\t\t\tkillProps = vars || propLookup;\n\t\t\t\t\trecord = (vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof(vars) !== \"object\" || !vars._tempKill)); //_tempKill is a super-secret way to delete a particular tweening property but NOT have it remembered as an official overwritten property (like in BezierPlugin)\n\t\t\t\t\tif (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n\t\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\t\tif (propLookup[p]) {\n\t\t\t\t\t\t\t\tif (!killed) {\n\t\t\t\t\t\t\t\t\tkilled = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkilled.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) { //if the onOverwrite returned false, that means the user wants to override the overwriting (cancel it).\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\tif ((pt = propLookup[p])) {\n\t\t\t\t\t\t\tif (simultaneousOverwrite) { //if another tween overwrites this one and they both start at exactly the same time, yet this tween has already rendered once (for example, at 0.001) because it's first in the queue, we should revert the values to where they were at 0 so that the starting values aren't contaminated on the overwriting tween.\n\t\t\t\t\t\t\t\tif (pt.f) {\n\t\t\t\t\t\t\t\t\tpt.t[pt.p](pt.s);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpt.t[pt.p] = pt.s;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (pt.pg && pt.t._kill(killProps)) {\n\t\t\t\t\t\t\t\tchanged = true; //some plugins need to be notified so they can perform cleanup tasks first\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t\t\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\t\t\t} else if (pt === this._firstPT) {\n\t\t\t\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete propLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (record) {\n\t\t\t\t\t\t\toverwrittenProps[p] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._firstPT && this._initted) { //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tif (this._notifyPluginsOfEnabled) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", this);\n\t\t\t}\n\t\t\tthis._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n\t\t\tthis._notifyPluginsOfEnabled = this._active = this._lazy = false;\n\t\t\tthis._propLookup = (this._targets) ? {} : [];\n\t\t\tAnimation.prototype.invalidate.call(this);\n\t\t\tif (this.vars.immediateRender) {\n\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\tthis.render(Math.min(0, -this._delay)); //in case delay is negative.\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (enabled && this._gc) {\n\t\t\t\tvar targets = this._targets,\n\t\t\t\t\ti;\n\t\t\t\tif (targets) {\n\t\t\t\t\ti = targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tthis._siblings[i] = _register(targets[i], this, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._siblings = _register(this.target, this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tAnimation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t\tif (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t\t\t\treturn TweenLite._onPluginEvent((enabled ? \"_onEnable\" : \"_onDisable\"), this);\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n//----TweenLite static methods -----------------------------------------------------\n\n\t\tTweenLite.to = function(target, duration, vars) {\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, toVars);\n\t\t};\n\n\t\tTweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenLite(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, callbackScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, immediateRender:false, lazy:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\n\t\tTweenLite.set = function(target, vars) {\n\t\t\treturn new TweenLite(target, 0, vars);\n\t\t};\n\n\t\tTweenLite.getTweensOf = function(target, onlyActive) {\n\t\t\tif (target == null) { return []; }\n\t\t\ttarget = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\t\t\tvar i, a, j, t;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\ta = [];\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ta = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t\t\t\t}\n\t\t\t\ti = a.length;\n\t\t\t\t//now get rid of any duplicates (tweens of arrays of objects could cause duplicates)\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tt = a[i];\n\t\t\t\t\tj = i;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\tif (t === a[j]) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ta = _register(target).concat();\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (a[i]._gc || (onlyActive && !a[i].isActive())) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tTweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t\t\tif (typeof(onlyActive) === \"object\") {\n\t\t\t\tvars = onlyActive; //for backwards compatibility (before \"onlyActive\" parameter was inserted)\n\t\t\t\tonlyActive = false;\n\t\t\t}\n\t\t\tvar a = TweenLite.getTweensOf(target, onlyActive),\n\t\t\t\ti = a.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\ta[i]._kill(vars, target);\n\t\t\t}\n\t\t};\n\n\n\n/*\n * ----------------------------------------------------------------\n * TweenPlugin   (could easily be split out as a separate file/class, but included for ease of use (so that people don't need to include another script call before loading plugins which is easy to forget)\n * ----------------------------------------------------------------\n */\n\t\tvar TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t\t\t\t\tthis._overwriteProps = (props || \"\").split(\",\");\n\t\t\t\t\tthis._propName = this._overwriteProps[0];\n\t\t\t\t\tthis._priority = priority || 0;\n\t\t\t\t\tthis._super = TweenPlugin.prototype;\n\t\t\t\t}, true);\n\n\t\tp = TweenPlugin.prototype;\n\t\tTweenPlugin.version = \"1.19.0\";\n\t\tTweenPlugin.API = 2;\n\t\tp._firstPT = null;\n\t\tp._addTween = _addPropTween;\n\t\tp.setRatio = _setRatio;\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._overwriteProps,\n\t\t\t\tpt = this._firstPT,\n\t\t\t\ti;\n\t\t\tif (lookup[this._propName] != null) {\n\t\t\t\tthis._overwriteProps = [];\n\t\t\t} else {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i]] != null) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (lookup[pt.n] != null) {\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\tpt._prev = null;\n\t\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._mod = p._roundProps = function(lookup) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tval;\n\t\t\twhile (pt) {\n\t\t\t\tval = lookup[this._propName] || (pt.n != null && lookup[ pt.n.split(this._propName + \"_\").join(\"\") ]);\n\t\t\t\tif (val && typeof(val) === \"function\") { //some properties that are very plugin-specific add a prefix named after the _propName plus an underscore, so we need to ignore that extra stuff here.\n\t\t\t\t\tif (pt.f === 2) {\n\t\t\t\t\t\tpt.t._applyPT.m = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.m = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\tTweenLite._onPluginEvent = function(type, tween) {\n\t\t\tvar pt = tween._firstPT,\n\t\t\t\tchanged, pt2, first, last, next;\n\t\t\tif (type === \"_onInitAllProps\") {\n\t\t\t\t//sorts the PropTween linked list in order of priority because some plugins need to render earlier/later than others, like MotionBlurPlugin applies its effects after all x/y/alpha tweens have rendered on each frame.\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tpt = tween._firstPT = first;\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.pg) if (typeof(pt.t[type]) === \"function\") if (pt.t[type]()) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tTweenPlugin.activate = function(plugins) {\n\t\t\tvar i = plugins.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (plugins[i].API === TweenPlugin.API) {\n\t\t\t\t\t_plugins[(new plugins[i]())._propName] = plugins[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//provides a more concise way to define plugins that have no dependencies besides TweenPlugin and TweenLite, wrapping common boilerplate stuff into one function (added in 1.9.0). You don't NEED to use this to define a plugin - the old way still works and can be useful in certain (rare) situations.\n\t\t_gsDefine.plugin = function(config) {\n\t\t\tif (!config || !config.propName || !config.init || !config.API) { throw \"illegal plugin definition.\"; }\n\t\t\tvar propName = config.propName,\n\t\t\t\tpriority = config.priority || 0,\n\t\t\t\toverwriteProps = config.overwriteProps,\n\t\t\t\tmap = {init:\"_onInitTween\", set:\"setRatio\", kill:\"_kill\", round:\"_mod\", mod:\"_mod\", initAll:\"_onInitAllProps\"},\n\t\t\t\tPlugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\",\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tTweenPlugin.call(this, propName, priority);\n\t\t\t\t\t\tthis._overwriteProps = overwriteProps || [];\n\t\t\t\t\t}, (config.global === true)),\n\t\t\t\tp = Plugin.prototype = new TweenPlugin(propName),\n\t\t\t\tprop;\n\t\t\tp.constructor = Plugin;\n\t\t\tPlugin.API = config.API;\n\t\t\tfor (prop in map) {\n\t\t\t\tif (typeof(config[prop]) === \"function\") {\n\t\t\t\t\tp[map[prop]] = config[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tPlugin.version = config.version;\n\t\t\tTweenPlugin.activate([Plugin]);\n\t\t\treturn Plugin;\n\t\t};\n\n\n\t\t//now run through all the dependencies discovered and if any are missing, log that to the console as a warning. This is why it's best to have TweenLite load last - it can check all the dependencies for you.\n\t\ta = window._gsQueue;\n\t\tif (a) {\n\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\ta[i]();\n\t\t\t}\n\t\t\tfor (p in _defLookup) {\n\t\t\t\tif (!_defLookup[p].func) {\n\t\t\t\t\twindow.console.log(\"GSAP encountered missing dependency: \" + p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_tickerActive = false; //ensures that the first official animation forces a ticker.tick() to update the time when it is instantiated\n\n})((typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || window, \"TweenMax\");","/*!\n * VERSION: 1.19.1\n * DATE: 2017-01-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n */\n(function(window, moduleName) {\n\n\t\t\"use strict\";\n\t\tvar _exports = {},\n\t\t\t_doc = window.document,\n\t\t\t_globals = window.GreenSockGlobals = window.GreenSockGlobals || window;\n\t\tif (_globals.TweenLite) {\n\t\t\treturn; //in case the core set of classes is already loaded, don't instantiate twice.\n\t\t}\n\t\tvar _namespace = function(ns) {\n\t\t\t\tvar a = ns.split(\".\"),\n\t\t\t\t\tp = _globals, i;\n\t\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\t\tp[a[i]] = p = p[a[i]] || {};\n\t\t\t\t}\n\t\t\t\treturn p;\n\t\t\t},\n\t\t\tgs = _namespace(\"com.greensock\"),\n\t\t\t_tinyNum = 0.0000000001,\n\t\t\t_slice = function(a) { //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\tvar b = [],\n\t\t\t\t\tl = a.length,\n\t\t\t\t\ti;\n\t\t\t\tfor (i = 0; i !== l; b.push(a[i++])) {}\n\t\t\t\treturn b;\n\t\t\t},\n\t\t\t_emptyFunc = function() {},\n\t\t\t_isArray = (function() { //works around issues in iframe environments where the Array global isn't shared, thus if the object originates in a different window/iframe, \"(obj instanceof Array)\" will evaluate false. We added some speed optimizations to avoid Object.prototype.toString.call() unless it's absolutely necessary because it's VERY slow (like 20x slower)\n\t\t\t\tvar toString = Object.prototype.toString,\n\t\t\t\t\tarray = toString.call([]);\n\t\t\t\treturn function(obj) {\n\t\t\t\t\treturn obj != null && (obj instanceof Array || (typeof(obj) === \"object\" && !!obj.push && toString.call(obj) === array));\n\t\t\t\t};\n\t\t\t}()),\n\t\t\ta, i, p, _ticker, _tickerActive,\n\t\t\t_defLookup = {},\n\n\t\t\t/**\n\t\t\t * @constructor\n\t\t\t * Defines a GreenSock class, optionally with an array of dependencies that must be instantiated first and passed into the definition.\n\t\t\t * This allows users to load GreenSock JS files in any order even if they have interdependencies (like CSSPlugin extends TweenPlugin which is\n\t\t\t * inside TweenLite.js, but if CSSPlugin is loaded first, it should wait to run its code until TweenLite.js loads and instantiates TweenPlugin\n\t\t\t * and then pass TweenPlugin to CSSPlugin's definition). This is all done automatically and internally.\n\t\t\t *\n\t\t\t * Every definition will be added to a \"com.greensock\" global object (typically window, but if a window.GreenSockGlobals object is found,\n\t\t\t * it will go there as of v1.7). For example, TweenLite will be found at window.com.greensock.TweenLite and since it's a global class that should be available anywhere,\n\t\t\t * it is ALSO referenced at window.TweenLite. However some classes aren't considered global, like the base com.greensock.core.Animation class, so\n\t\t\t * those will only be at the package like window.com.greensock.core.Animation. Again, if you define a GreenSockGlobals object on the window, everything\n\t\t\t * gets tucked neatly inside there instead of on the window directly. This allows you to do advanced things like load multiple versions of GreenSock\n\t\t\t * files and put them into distinct objects (imagine a banner ad uses a newer version but the main site uses an older one). In that case, you could\n\t\t\t * sandbox the banner one like:\n\t\t\t *\n\t\t\t * <script>\n\t\t\t *     var gs = window.GreenSockGlobals = {}; //the newer version we're about to load could now be referenced in a \"gs\" object, like gs.TweenLite.to(...). Use whatever alias you want as long as it's unique, \"gs\" or \"banner\" or whatever.\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.7/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     window.GreenSockGlobals = window._gsQueue = window._gsDefine = null; //reset it back to null (along with the special _gsQueue variable) so that the next load of TweenMax affects the window and we can reference things directly like TweenLite.to(...)\n\t\t\t * </script>\n\t\t\t * <script src=\"js/greensock/v1.6/TweenMax.js\"></script>\n\t\t\t * <script>\n\t\t\t *     gs.TweenLite.to(...); //would use v1.7\n\t\t\t *     TweenLite.to(...); //would use v1.6\n\t\t\t * </script>\n\t\t\t *\n\t\t\t * @param {!string} ns The namespace of the class definition, leaving off \"com.greensock.\" as that's assumed. For example, \"TweenLite\" or \"plugins.CSSPlugin\" or \"easing.Back\".\n\t\t\t * @param {!Array.<string>} dependencies An array of dependencies (described as their namespaces minus \"com.greensock.\" prefix). For example [\"TweenLite\",\"plugins.TweenPlugin\",\"core.Animation\"]\n\t\t\t * @param {!function():Object} func The function that should be called and passed the resolved dependencies which will return the actual class for this definition.\n\t\t\t * @param {boolean=} global If true, the class will be added to the global scope (typically window unless you define a window.GreenSockGlobals object)\n\t\t\t */\n\t\t\tDefinition = function(ns, dependencies, func, global) {\n\t\t\t\tthis.sc = (_defLookup[ns]) ? _defLookup[ns].sc : []; //subclasses\n\t\t\t\t_defLookup[ns] = this;\n\t\t\t\tthis.gsClass = null;\n\t\t\t\tthis.func = func;\n\t\t\t\tvar _classes = [];\n\t\t\t\tthis.check = function(init) {\n\t\t\t\t\tvar i = dependencies.length,\n\t\t\t\t\t\tmissing = i,\n\t\t\t\t\t\tcur, a, n, cl, hasModule;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif ((cur = _defLookup[dependencies[i]] || new Definition(dependencies[i], [])).gsClass) {\n\t\t\t\t\t\t\t_classes[i] = cur.gsClass;\n\t\t\t\t\t\t\tmissing--;\n\t\t\t\t\t\t} else if (init) {\n\t\t\t\t\t\t\tcur.sc.push(this);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (missing === 0 && func) {\n\t\t\t\t\t\ta = (\"com.greensock.\" + ns).split(\".\");\n\t\t\t\t\t\tn = a.pop();\n\t\t\t\t\t\tcl = _namespace(a.join(\".\"))[n] = this.gsClass = func.apply(func, _classes);\n\n\t\t\t\t\t\t//exports to multiple environments\n\t\t\t\t\t\tif (global) {\n\t\t\t\t\t\t\t_globals[n] = _exports[n] = cl; //provides a way to avoid global namespace pollution. By default, the main classes like TweenLite, Power1, Strong, etc. are added to window unless a GreenSockGlobals is defined. So if you want to have things added to a custom object instead, just do something like window.GreenSockGlobals = {} before loading any GreenSock files. You can even set up an alias like window.GreenSockGlobals = windows.gs = {} so that you can access everything like gs.TweenLite. Also remember that ALL classes are added to the window.com.greensock object (in their respective packages, like com.greensock.easing.Power1, com.greensock.TweenLite, etc.)\n\t\t\t\t\t\t\thasModule = (typeof(module) !== \"undefined\" && module.exports);\n\t\t\t\t\t\t\tif (!hasModule && typeof(define) === \"function\" && define.amd){ //AMD\n\t\t\t\t\t\t\t\tdefine((window.GreenSockAMDPath ? window.GreenSockAMDPath + \"/\" : \"\") + ns.split(\".\").pop(), [], function() { return cl; });\n\t\t\t\t\t\t\t} else if (hasModule){ //node\n\t\t\t\t\t\t\t\tif (ns === moduleName) {\n\t\t\t\t\t\t\t\t\tmodule.exports = _exports[moduleName] = cl;\n\t\t\t\t\t\t\t\t\tfor (i in _exports) {\n\t\t\t\t\t\t\t\t\t\tcl[i] = _exports[i];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (_exports[moduleName]) {\n\t\t\t\t\t\t\t\t\t_exports[moduleName][n] = cl;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tfor (i = 0; i < this.sc.length; i++) {\n\t\t\t\t\t\t\tthis.sc[i].check();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tthis.check(true);\n\t\t\t},\n\n\t\t\t//used to create Definition instances (which basically registers a class that has dependencies).\n\t\t\t_gsDefine = window._gsDefine = function(ns, dependencies, func, global) {\n\t\t\t\treturn new Definition(ns, dependencies, func, global);\n\t\t\t},\n\n\t\t\t//a quick way to create a class that doesn't have any dependencies. Returns the class, but first registers it in the GreenSock namespace so that other classes can grab it (other classes might be dependent on the class).\n\t\t\t_class = gs._class = function(ns, func, global) {\n\t\t\t\tfunc = func || function() {};\n\t\t\t\t_gsDefine(ns, [], function(){ return func; }, global);\n\t\t\t\treturn func;\n\t\t\t};\n\n\t\t_gsDefine.globals = _globals;\n\n\n\n/*\n * ----------------------------------------------------------------\n * Ease\n * ----------------------------------------------------------------\n */\n\t\tvar _baseParams = [0, 0, 1, 1],\n\t\t\t_blankArray = [],\n\t\t\tEase = _class(\"easing.Ease\", function(func, extraParams, type, power) {\n\t\t\t\tthis._func = func;\n\t\t\t\tthis._type = type || 0;\n\t\t\t\tthis._power = power || 0;\n\t\t\t\tthis._params = extraParams ? _baseParams.concat(extraParams) : _baseParams;\n\t\t\t}, true),\n\t\t\t_easeMap = Ease.map = {},\n\t\t\t_easeReg = Ease.register = function(ease, names, types, create) {\n\t\t\t\tvar na = names.split(\",\"),\n\t\t\t\t\ti = na.length,\n\t\t\t\t\tta = (types || \"easeIn,easeOut,easeInOut\").split(\",\"),\n\t\t\t\t\te, name, j, type;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tname = na[i];\n\t\t\t\t\te = create ? _class(\"easing.\"+name, null, true) : gs.easing[name] || {};\n\t\t\t\t\tj = ta.length;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\ttype = ta[j];\n\t\t\t\t\t\t_easeMap[name + \".\" + type] = _easeMap[type + name] = e[type] = ease.getRatio ? ease : ease[type] || new ease();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\tp = Ease.prototype;\n\t\tp._calcEnd = false;\n\t\tp.getRatio = function(p) {\n\t\t\tif (this._func) {\n\t\t\t\tthis._params[0] = p;\n\t\t\t\treturn this._func.apply(null, this._params);\n\t\t\t}\n\t\t\tvar t = this._type,\n\t\t\t\tpw = this._power,\n\t\t\t\tr = (t === 1) ? 1 - p : (t === 2) ? p : (p < 0.5) ? p * 2 : (1 - p) * 2;\n\t\t\tif (pw === 1) {\n\t\t\t\tr *= r;\n\t\t\t} else if (pw === 2) {\n\t\t\t\tr *= r * r;\n\t\t\t} else if (pw === 3) {\n\t\t\t\tr *= r * r * r;\n\t\t\t} else if (pw === 4) {\n\t\t\t\tr *= r * r * r * r;\n\t\t\t}\n\t\t\treturn (t === 1) ? 1 - r : (t === 2) ? r : (p < 0.5) ? r / 2 : 1 - (r / 2);\n\t\t};\n\n\t\t//create all the standard eases like Linear, Quad, Cubic, Quart, Quint, Strong, Power0, Power1, Power2, Power3, and Power4 (each with easeIn, easeOut, and easeInOut)\n\t\ta = [\"Linear\",\"Quad\",\"Cubic\",\"Quart\",\"Quint,Strong\"];\n\t\ti = a.length;\n\t\twhile (--i > -1) {\n\t\t\tp = a[i]+\",Power\"+i;\n\t\t\t_easeReg(new Ease(null,null,1,i), p, \"easeOut\", true);\n\t\t\t_easeReg(new Ease(null,null,2,i), p, \"easeIn\" + ((i === 0) ? \",easeNone\" : \"\"));\n\t\t\t_easeReg(new Ease(null,null,3,i), p, \"easeInOut\");\n\t\t}\n\t\t_easeMap.linear = gs.easing.Linear.easeIn;\n\t\t_easeMap.swing = gs.easing.Quad.easeInOut; //for jQuery folks\n\n\n/*\n * ----------------------------------------------------------------\n * EventDispatcher\n * ----------------------------------------------------------------\n */\n\t\tvar EventDispatcher = _class(\"events.EventDispatcher\", function(target) {\n\t\t\tthis._listeners = {};\n\t\t\tthis._eventTarget = target || this;\n\t\t});\n\t\tp = EventDispatcher.prototype;\n\n\t\tp.addEventListener = function(type, callback, scope, useParam, priority) {\n\t\t\tpriority = priority || 0;\n\t\t\tvar list = this._listeners[type],\n\t\t\t\tindex = 0,\n\t\t\t\tlistener, i;\n\t\t\tif (this === _ticker && !_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (list == null) {\n\t\t\t\tthis._listeners[type] = list = [];\n\t\t\t}\n\t\t\ti = list.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tlistener = list[i];\n\t\t\t\tif (listener.c === callback && listener.s === scope) {\n\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t} else if (index === 0 && listener.pr < priority) {\n\t\t\t\t\tindex = i + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlist.splice(index, 0, {c:callback, s:scope, up:useParam, pr:priority});\n\t\t};\n\n\t\tp.removeEventListener = function(type, callback) {\n\t\t\tvar list = this._listeners[type], i;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (list[i].c === callback) {\n\t\t\t\t\t\tlist.splice(i, 1);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp.dispatchEvent = function(type) {\n\t\t\tvar list = this._listeners[type],\n\t\t\t\ti, t, listener;\n\t\t\tif (list) {\n\t\t\t\ti = list.length;\n\t\t\t\tif (i > 1) { \n\t\t\t\t\tlist = list.slice(0); //in case addEventListener() is called from within a listener/callback (otherwise the index could change, resulting in a skip)\n\t\t\t\t}\n\t\t\t\tt = this._eventTarget;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tlistener = list[i];\n\t\t\t\t\tif (listener) {\n\t\t\t\t\t\tif (listener.up) {\n\t\t\t\t\t\t\tlistener.c.call(listener.s || t, {type:type, target:t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlistener.c.call(listener.s || t);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * Ticker\n * ----------------------------------------------------------------\n */\n \t\tvar _reqAnimFrame = window.requestAnimationFrame,\n\t\t\t_cancelAnimFrame = window.cancelAnimationFrame,\n\t\t\t_getTime = Date.now || function() {return new Date().getTime();},\n\t\t\t_lastUpdate = _getTime();\n\n\t\t//now try to determine the requestAnimationFrame and cancelAnimationFrame functions and if none are found, we'll use a setTimeout()/clearTimeout() polyfill.\n\t\ta = [\"ms\",\"moz\",\"webkit\",\"o\"];\n\t\ti = a.length;\n\t\twhile (--i > -1 && !_reqAnimFrame) {\n\t\t\t_reqAnimFrame = window[a[i] + \"RequestAnimationFrame\"];\n\t\t\t_cancelAnimFrame = window[a[i] + \"CancelAnimationFrame\"] || window[a[i] + \"CancelRequestAnimationFrame\"];\n\t\t}\n\n\t\t_class(\"Ticker\", function(fps, useRAF) {\n\t\t\tvar _self = this,\n\t\t\t\t_startTime = _getTime(),\n\t\t\t\t_useRAF = (useRAF !== false && _reqAnimFrame) ? \"auto\" : false,\n\t\t\t\t_lagThreshold = 500,\n\t\t\t\t_adjustedLag = 33,\n\t\t\t\t_tickWord = \"tick\", //helps reduce gc burden\n\t\t\t\t_fps, _req, _id, _gap, _nextTime,\n\t\t\t\t_tick = function(manual) {\n\t\t\t\t\tvar elapsed = _getTime() - _lastUpdate,\n\t\t\t\t\t\toverlap, dispatch;\n\t\t\t\t\tif (elapsed > _lagThreshold) {\n\t\t\t\t\t\t_startTime += elapsed - _adjustedLag;\n\t\t\t\t\t}\n\t\t\t\t\t_lastUpdate += elapsed;\n\t\t\t\t\t_self.time = (_lastUpdate - _startTime) / 1000;\n\t\t\t\t\toverlap = _self.time - _nextTime;\n\t\t\t\t\tif (!_fps || overlap > 0 || manual === true) {\n\t\t\t\t\t\t_self.frame++;\n\t\t\t\t\t\t_nextTime += overlap + (overlap >= _gap ? 0.004 : _gap - overlap);\n\t\t\t\t\t\tdispatch = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (manual !== true) { //make sure the request is made before we dispatch the \"tick\" event so that timing is maintained. Otherwise, if processing the \"tick\" requires a bunch of time (like 15ms) and we're using a setTimeout() that's based on 16.7ms, it'd technically take 31.7ms between frames otherwise.\n\t\t\t\t\t\t_id = _req(_tick);\n\t\t\t\t\t}\n\t\t\t\t\tif (dispatch) {\n\t\t\t\t\t\t_self.dispatchEvent(_tickWord);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\tEventDispatcher.call(_self);\n\t\t\t_self.time = _self.frame = 0;\n\t\t\t_self.tick = function() {\n\t\t\t\t_tick(true);\n\t\t\t};\n\n\t\t\t_self.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t\t_lagThreshold = threshold || (1 / _tinyNum); //zero should be interpreted as basically unlimited\n\t\t\t\t_adjustedLag = Math.min(adjustedLag, _lagThreshold, 0);\n\t\t\t};\n\n\t\t\t_self.sleep = function() {\n\t\t\t\tif (_id == null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_useRAF || !_cancelAnimFrame) {\n\t\t\t\t\tclearTimeout(_id);\n\t\t\t\t} else {\n\t\t\t\t\t_cancelAnimFrame(_id);\n\t\t\t\t}\n\t\t\t\t_req = _emptyFunc;\n\t\t\t\t_id = null;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = false;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t_self.wake = function(seamless) {\n\t\t\t\tif (_id !== null) {\n\t\t\t\t\t_self.sleep();\n\t\t\t\t} else if (seamless) {\n\t\t\t\t\t_startTime += -_lastUpdate + (_lastUpdate = _getTime());\n\t\t\t\t} else if (_self.frame > 10) { //don't trigger lagSmoothing if we're just waking up, and make sure that at least 10 frames have elapsed because of the iOS bug that we work around below with the 1.5-second setTimout().\n\t\t\t\t\t_lastUpdate = _getTime() - _lagThreshold + 5;\n\t\t\t\t}\n\t\t\t\t_req = (_fps === 0) ? _emptyFunc : (!_useRAF || !_reqAnimFrame) ? function(f) { return setTimeout(f, ((_nextTime - _self.time) * 1000 + 1) | 0); } : _reqAnimFrame;\n\t\t\t\tif (_self === _ticker) {\n\t\t\t\t\t_tickerActive = true;\n\t\t\t\t}\n\t\t\t\t_tick(2);\n\t\t\t};\n\n\t\t\t_self.fps = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _fps;\n\t\t\t\t}\n\t\t\t\t_fps = value;\n\t\t\t\t_gap = 1 / (_fps || 60);\n\t\t\t\t_nextTime = this.time + _gap;\n\t\t\t\t_self.wake();\n\t\t\t};\n\n\t\t\t_self.useRAF = function(value) {\n\t\t\t\tif (!arguments.length) {\n\t\t\t\t\treturn _useRAF;\n\t\t\t\t}\n\t\t\t\t_self.sleep();\n\t\t\t\t_useRAF = value;\n\t\t\t\t_self.fps(_fps);\n\t\t\t};\n\t\t\t_self.fps(fps);\n\n\t\t\t//a bug in iOS 6 Safari occasionally prevents the requestAnimationFrame from working initially, so we use a 1.5-second timeout that automatically falls back to setTimeout() if it senses this condition.\n\t\t\tsetTimeout(function() {\n\t\t\t\tif (_useRAF === \"auto\" && _self.frame < 5 && _doc.visibilityState !== \"hidden\") {\n\t\t\t\t\t_self.useRAF(false);\n\t\t\t\t}\n\t\t\t}, 1500);\n\t\t});\n\n\t\tp = gs.Ticker.prototype = new gs.events.EventDispatcher();\n\t\tp.constructor = gs.Ticker;\n\n\n/*\n * ----------------------------------------------------------------\n * Animation\n * ----------------------------------------------------------------\n */\n\t\tvar Animation = _class(\"core.Animation\", function(duration, vars) {\n\t\t\t\tthis.vars = vars = vars || {};\n\t\t\t\tthis._duration = this._totalDuration = duration || 0;\n\t\t\t\tthis._delay = Number(vars.delay) || 0;\n\t\t\t\tthis._timeScale = 1;\n\t\t\t\tthis._active = (vars.immediateRender === true);\n\t\t\t\tthis.data = vars.data;\n\t\t\t\tthis._reversed = (vars.reversed === true);\n\n\t\t\t\tif (!_rootTimeline) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (!_tickerActive) { //some browsers (like iOS 6 Safari) shut down JavaScript execution when the tab is disabled and they [occasionally] neglect to start up requestAnimationFrame again when returning - this code ensures that the engine starts up again properly.\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\n\t\t\t\tvar tl = this.vars.useFrames ? _rootFramesTimeline : _rootTimeline;\n\t\t\t\ttl.add(this, tl._time);\n\n\t\t\t\tif (this.vars.paused) {\n\t\t\t\t\tthis.paused(true);\n\t\t\t\t}\n\t\t\t});\n\n\t\t_ticker = Animation.ticker = new gs.Ticker();\n\t\tp = Animation.prototype;\n\t\tp._dirty = p._gc = p._initted = p._paused = false;\n\t\tp._totalTime = p._time = 0;\n\t\tp._rawPrevTime = -1;\n\t\tp._next = p._last = p._onUpdate = p._timeline = p.timeline = null;\n\t\tp._paused = false;\n\n\n\t\t//some browsers (like iOS) occasionally drop the requestAnimationFrame event when the user switches to a different tab and then comes back again, so we use a 2-second setTimeout() to sense if/when that condition occurs and then wake() the ticker.\n\t\tvar _checkTimeout = function() {\n\t\t\t\tif (_tickerActive && _getTime() - _lastUpdate > 2000) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\tsetTimeout(_checkTimeout, 2000);\n\t\t\t};\n\t\t_checkTimeout();\n\n\n\t\tp.play = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(false).paused(false);\n\t\t};\n\n\t\tp.pause = function(atTime, suppressEvents) {\n\t\t\tif (atTime != null) {\n\t\t\t\tthis.seek(atTime, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(true);\n\t\t};\n\n\t\tp.resume = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek(from, suppressEvents);\n\t\t\t}\n\t\t\treturn this.paused(false);\n\t\t};\n\n\t\tp.seek = function(time, suppressEvents) {\n\t\t\treturn this.totalTime(Number(time), suppressEvents !== false);\n\t\t};\n\n\t\tp.restart = function(includeDelay, suppressEvents) {\n\t\t\treturn this.reversed(false).paused(false).totalTime(includeDelay ? -this._delay : 0, (suppressEvents !== false), true);\n\t\t};\n\n\t\tp.reverse = function(from, suppressEvents) {\n\t\t\tif (from != null) {\n\t\t\t\tthis.seek((from || this.totalDuration()), suppressEvents);\n\t\t\t}\n\t\t\treturn this.reversed(true).paused(false);\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\t//stub - we override this method in subclasses.\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tthis._time = this._totalTime = 0;\n\t\t\tthis._initted = this._gc = false;\n\t\t\tthis._rawPrevTime = -1;\n\t\t\tif (this._gc || !this.timeline) {\n\t\t\t\tthis._enabled(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.isActive = function() {\n\t\t\tvar tl = this._timeline, //the 2 root timelines won't have a _timeline; they're always active.\n\t\t\t\tstartTime = this._startTime,\n\t\t\t\trawTime;\n\t\t\treturn (!tl || (!this._gc && !this._paused && tl.isActive() && (rawTime = tl.rawTime(true)) >= startTime && rawTime < startTime + this.totalDuration() / this._timeScale));\n\t\t};\n\n\t\tp._enabled = function (enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tthis._gc = !enabled;\n\t\t\tthis._active = this.isActive();\n\t\t\tif (ignoreTimeline !== true) {\n\t\t\t\tif (enabled && !this.timeline) {\n\t\t\t\t\tthis._timeline.add(this, this._startTime - this._delay);\n\t\t\t\t} else if (!enabled && this.timeline) {\n\t\t\t\t\tthis._timeline._remove(this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n\t\tp._kill = function(vars, target) {\n\t\t\treturn this._enabled(false, false);\n\t\t};\n\n\t\tp.kill = function(vars, target) {\n\t\t\tthis._kill(vars, target);\n\t\t\treturn this;\n\t\t};\n\n\t\tp._uncache = function(includeSelf) {\n\t\t\tvar tween = includeSelf ? this : this.timeline;\n\t\t\twhile (tween) {\n\t\t\t\ttween._dirty = true;\n\t\t\t\ttween = tween.timeline;\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._swapSelfInParams = function(params) {\n\t\t\tvar i = params.length,\n\t\t\t\tcopy = params.concat();\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (params[i] === \"{self}\") {\n\t\t\t\t\tcopy[i] = this;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn copy;\n\t\t};\n\n\t\tp._callback = function(type) {\n\t\t\tvar v = this.vars,\n\t\t\t\tcallback = v[type],\n\t\t\t\tparams = v[type + \"Params\"],\n\t\t\t\tscope = v[type + \"Scope\"] || v.callbackScope || this,\n\t\t\t\tl = params ? params.length : 0;\n\t\t\tswitch (l) { //speed optimization; call() is faster than apply() so use it when there are only a few parameters (which is by far most common). Previously we simply did var v = this.vars; v[type].apply(v[type + \"Scope\"] || v.callbackScope || this, v[type + \"Params\"] || _blankArray);\n\t\t\t\tcase 0: callback.call(scope); break;\n\t\t\t\tcase 1: callback.call(scope, params[0]); break;\n\t\t\t\tcase 2: callback.call(scope, params[0], params[1]); break;\n\t\t\t\tdefault: callback.apply(scope, params);\n\t\t\t}\n\t\t};\n\n//----Animation getters/setters --------------------------------------------------------\n\n\t\tp.eventCallback = function(type, callback, params, scope) {\n\t\t\tif ((type || \"\").substr(0,2) === \"on\") {\n\t\t\t\tvar v = this.vars;\n\t\t\t\tif (arguments.length === 1) {\n\t\t\t\t\treturn v[type];\n\t\t\t\t}\n\t\t\t\tif (callback == null) {\n\t\t\t\t\tdelete v[type];\n\t\t\t\t} else {\n\t\t\t\t\tv[type] = callback;\n\t\t\t\t\tv[type + \"Params\"] = (_isArray(params) && params.join(\"\").indexOf(\"{self}\") !== -1) ? this._swapSelfInParams(params) : params;\n\t\t\t\t\tv[type + \"Scope\"] = scope;\n\t\t\t\t}\n\t\t\t\tif (type === \"onUpdate\") {\n\t\t\t\t\tthis._onUpdate = callback;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.delay = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._delay;\n\t\t\t}\n\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\tthis.startTime( this._startTime + value - this._delay );\n\t\t\t}\n\t\t\tthis._delay = value;\n\t\t\treturn this;\n\t\t};\n\n\t\tp.duration = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tthis._dirty = false;\n\t\t\t\treturn this._duration;\n\t\t\t}\n\t\t\tthis._duration = this._totalDuration = value;\n\t\t\tthis._uncache(true); //true in case it's a TweenMax or TimelineMax that has a repeat - we'll need to refresh the totalDuration.\n\t\t\tif (this._timeline.smoothChildTiming) if (this._time > 0) if (this._time < this._duration) if (value !== 0) {\n\t\t\t\tthis.totalTime(this._totalTime * (value / this._duration), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.totalDuration = function(value) {\n\t\t\tthis._dirty = false;\n\t\t\treturn (!arguments.length) ? this._totalDuration : this.duration(value);\n\t\t};\n\n\t\tp.time = function(value, suppressEvents) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._time;\n\t\t\t}\n\t\t\tif (this._dirty) {\n\t\t\t\tthis.totalDuration();\n\t\t\t}\n\t\t\treturn this.totalTime((value > this._duration) ? this._duration : value, suppressEvents);\n\t\t};\n\n\t\tp.totalTime = function(time, suppressEvents, uncapped) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._totalTime;\n\t\t\t}\n\t\t\tif (this._timeline) {\n\t\t\t\tif (time < 0 && !uncapped) {\n\t\t\t\t\ttime += this.totalDuration();\n\t\t\t\t}\n\t\t\t\tif (this._timeline.smoothChildTiming) {\n\t\t\t\t\tif (this._dirty) {\n\t\t\t\t\t\tthis.totalDuration();\n\t\t\t\t\t}\n\t\t\t\t\tvar totalDuration = this._totalDuration,\n\t\t\t\t\t\ttl = this._timeline;\n\t\t\t\t\tif (time > totalDuration && !uncapped) {\n\t\t\t\t\t\ttime = totalDuration;\n\t\t\t\t\t}\n\t\t\t\t\tthis._startTime = (this._paused ? this._pauseTime : tl._time) - ((!this._reversed ? time : totalDuration - time) / this._timeScale);\n\t\t\t\t\tif (!tl._dirty) { //for performance improvement. If the parent's cache is already dirty, it already took care of marking the ancestors as dirty too, so skip the function call here.\n\t\t\t\t\t\tthis._uncache(false);\n\t\t\t\t\t}\n\t\t\t\t\t//in case any of the ancestor timelines had completed but should now be enabled, we should reset their totalTime() which will also ensure that they're lined up properly and enabled. Skip for animations that are on the root (wasteful). Example: a TimelineLite.exportRoot() is performed when there's a paused tween on the root, the export will not complete until that tween is unpaused, but imagine a child gets restarted later, after all [unpaused] tweens have completed. The startTime of that child would get pushed out, but one of the ancestors may have completed.\n\t\t\t\t\tif (tl._timeline) {\n\t\t\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\t\t\tif (tl._timeline._time !== (tl._startTime + tl._totalTime) / tl._timeScale) {\n\t\t\t\t\t\t\t\ttl.totalTime(tl._totalTime, true);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this._gc) {\n\t\t\t\t\tthis._enabled(true, false);\n\t\t\t\t}\n\t\t\t\tif (this._totalTime !== time || this._duration === 0) {\n\t\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t\tthis.render(time, suppressEvents, false);\n\t\t\t\t\tif (_lazyTweens.length) { //in case rendering caused any tweens to lazy-init, we should render them because typically when someone calls seek() or time() or progress(), they expect an immediate render.\n\t\t\t\t\t\t_lazyRender();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.progress = p.totalProgress = function(value, suppressEvents) {\n\t\t\tvar duration = this.duration();\n\t\t\treturn (!arguments.length) ? (duration ? this._time / duration : this.ratio) : this.totalTime(duration * value, suppressEvents);\n\t\t};\n\n\t\tp.startTime = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._startTime;\n\t\t\t}\n\t\t\tif (value !== this._startTime) {\n\t\t\t\tthis._startTime = value;\n\t\t\t\tif (this.timeline) if (this.timeline._sortChildren) {\n\t\t\t\t\tthis.timeline.add(this, value - this._delay); //ensures that any necessary re-sequencing of Animations in the timeline occurs to make sure the rendering order is correct.\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.endTime = function(includeRepeats) {\n\t\t\treturn this._startTime + ((includeRepeats != false) ? this.totalDuration() : this.duration()) / this._timeScale;\n\t\t};\n\n\t\tp.timeScale = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._timeScale;\n\t\t\t}\n\t\t\tvalue = value || _tinyNum; //can't allow zero because it'll throw the math off\n\t\t\tif (this._timeline && this._timeline.smoothChildTiming) {\n\t\t\t\tvar pauseTime = this._pauseTime,\n\t\t\t\t\tt = (pauseTime || pauseTime === 0) ? pauseTime : this._timeline.totalTime();\n\t\t\t\tthis._startTime = t - ((t - this._startTime) * this._timeScale / value);\n\t\t\t}\n\t\t\tthis._timeScale = value;\n\t\t\treturn this._uncache(false);\n\t\t};\n\n\t\tp.reversed = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._reversed;\n\t\t\t}\n\t\t\tif (value != this._reversed) {\n\t\t\t\tthis._reversed = value;\n\t\t\t\tthis.totalTime(((this._timeline && !this._timeline.smoothChildTiming) ? this.totalDuration() - this._totalTime : this._totalTime), true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.paused = function(value) {\n\t\t\tif (!arguments.length) {\n\t\t\t\treturn this._paused;\n\t\t\t}\n\t\t\tvar tl = this._timeline,\n\t\t\t\traw, elapsed;\n\t\t\tif (value != this._paused) if (tl) {\n\t\t\t\tif (!_tickerActive && !value) {\n\t\t\t\t\t_ticker.wake();\n\t\t\t\t}\n\t\t\t\traw = tl.rawTime();\n\t\t\t\telapsed = raw - this._pauseTime;\n\t\t\t\tif (!value && tl.smoothChildTiming) {\n\t\t\t\t\tthis._startTime += elapsed;\n\t\t\t\t\tthis._uncache(false);\n\t\t\t\t}\n\t\t\t\tthis._pauseTime = value ? raw : null;\n\t\t\t\tthis._paused = value;\n\t\t\t\tthis._active = this.isActive();\n\t\t\t\tif (!value && elapsed !== 0 && this._initted && this.duration()) {\n\t\t\t\t\traw = tl.smoothChildTiming ? this._totalTime : (raw - this._startTime) / this._timeScale;\n\t\t\t\t\tthis.render(raw, (raw === this._totalTime), true); //in case the target's properties changed via some other tween or manual update by the user, we should force a render.\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._gc && !value) {\n\t\t\t\tthis._enabled(true, false);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\n/*\n * ----------------------------------------------------------------\n * SimpleTimeline\n * ----------------------------------------------------------------\n */\n\t\tvar SimpleTimeline = _class(\"core.SimpleTimeline\", function(vars) {\n\t\t\tAnimation.call(this, 0, vars);\n\t\t\tthis.autoRemoveChildren = this.smoothChildTiming = true;\n\t\t});\n\n\t\tp = SimpleTimeline.prototype = new Animation();\n\t\tp.constructor = SimpleTimeline;\n\t\tp.kill()._gc = false;\n\t\tp._first = p._last = p._recent = null;\n\t\tp._sortChildren = false;\n\n\t\tp.add = p.insert = function(child, position, align, stagger) {\n\t\t\tvar prevTween, st;\n\t\t\tchild._startTime = Number(position || 0) + child._delay;\n\t\t\tif (child._paused) if (this !== child._timeline) { //we only adjust the _pauseTime if it wasn't in this timeline already. Remember, sometimes a tween will be inserted again into the same timeline when its startTime is changed so that the tweens in the TimelineLite/Max are re-ordered properly in the linked list (so everything renders in the proper order).\n\t\t\t\tchild._pauseTime = child._startTime + ((this.rawTime() - child._startTime) / child._timeScale);\n\t\t\t}\n\t\t\tif (child.timeline) {\n\t\t\t\tchild.timeline._remove(child, true); //removes from existing timeline so that it can be properly added to this one.\n\t\t\t}\n\t\t\tchild.timeline = child._timeline = this;\n\t\t\tif (child._gc) {\n\t\t\t\tchild._enabled(true, true);\n\t\t\t}\n\t\t\tprevTween = this._last;\n\t\t\tif (this._sortChildren) {\n\t\t\t\tst = child._startTime;\n\t\t\t\twhile (prevTween && prevTween._startTime > st) {\n\t\t\t\t\tprevTween = prevTween._prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (prevTween) {\n\t\t\t\tchild._next = prevTween._next;\n\t\t\t\tprevTween._next = child;\n\t\t\t} else {\n\t\t\t\tchild._next = this._first;\n\t\t\t\tthis._first = child;\n\t\t\t}\n\t\t\tif (child._next) {\n\t\t\t\tchild._next._prev = child;\n\t\t\t} else {\n\t\t\t\tthis._last = child;\n\t\t\t}\n\t\t\tchild._prev = prevTween;\n\t\t\tthis._recent = child;\n\t\t\tif (this._timeline) {\n\t\t\t\tthis._uncache(true);\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._remove = function(tween, skipDisable) {\n\t\t\tif (tween.timeline === this) {\n\t\t\t\tif (!skipDisable) {\n\t\t\t\t\ttween._enabled(false, true);\n\t\t\t\t}\n\n\t\t\t\tif (tween._prev) {\n\t\t\t\t\ttween._prev._next = tween._next;\n\t\t\t\t} else if (this._first === tween) {\n\t\t\t\t\tthis._first = tween._next;\n\t\t\t\t}\n\t\t\t\tif (tween._next) {\n\t\t\t\t\ttween._next._prev = tween._prev;\n\t\t\t\t} else if (this._last === tween) {\n\t\t\t\t\tthis._last = tween._prev;\n\t\t\t\t}\n\t\t\t\ttween._next = tween._prev = tween.timeline = null;\n\t\t\t\tif (tween === this._recent) {\n\t\t\t\t\tthis._recent = this._last;\n\t\t\t\t}\n\n\t\t\t\tif (this._timeline) {\n\t\t\t\t\tthis._uncache(true);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar tween = this._first,\n\t\t\t\tnext;\n\t\t\tthis._totalTime = this._time = this._rawPrevTime = time;\n\t\t\twhile (tween) {\n\t\t\t\tnext = tween._next; //record it here because the value could change after rendering...\n\t\t\t\tif (tween._active || (time >= tween._startTime && !tween._paused)) {\n\t\t\t\t\tif (!tween._reversed) {\n\t\t\t\t\t\ttween.render((time - tween._startTime) * tween._timeScale, suppressEvents, force);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttween.render(((!tween._dirty) ? tween._totalDuration : tween.totalDuration()) - ((time - tween._startTime) * tween._timeScale), suppressEvents, force);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttween = next;\n\t\t\t}\n\t\t};\n\n\t\tp.rawTime = function() {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\treturn this._totalTime;\n\t\t};\n\n/*\n * ----------------------------------------------------------------\n * TweenLite\n * ----------------------------------------------------------------\n */\n\t\tvar TweenLite = _class(\"TweenLite\", function(target, duration, vars) {\n\t\t\t\tAnimation.call(this, duration, vars);\n\t\t\t\tthis.render = TweenLite.prototype.render; //speed optimization (avoid prototype lookup on this \"hot\" method)\n\n\t\t\t\tif (target == null) {\n\t\t\t\t\tthrow \"Cannot tween a null target.\";\n\t\t\t\t}\n\n\t\t\t\tthis.target = target = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\n\t\t\t\tvar isSelector = (target.jquery || (target.length && target !== window && target[0] && (target[0] === window || (target[0].nodeType && target[0].style && !target.nodeType)))),\n\t\t\t\t\toverwrite = this.vars.overwrite,\n\t\t\t\t\ti, targ, targets;\n\n\t\t\t\tthis._overwrite = overwrite = (overwrite == null) ? _overwriteLookup[TweenLite.defaultOverwrite] : (typeof(overwrite) === \"number\") ? overwrite >> 0 : _overwriteLookup[overwrite];\n\n\t\t\t\tif ((isSelector || target instanceof Array || (target.push && _isArray(target))) && typeof(target[0]) !== \"number\") {\n\t\t\t\t\tthis._targets = targets = _slice(target);  //don't use Array.prototype.slice.call(target, 0) because that doesn't work in IE8 with a NodeList that's returned by querySelectorAll()\n\t\t\t\t\tthis._propLookup = [];\n\t\t\t\t\tthis._siblings = [];\n\t\t\t\t\tfor (i = 0; i < targets.length; i++) {\n\t\t\t\t\t\ttarg = targets[i];\n\t\t\t\t\t\tif (!targ) {\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\ttarg = targets[i--] = TweenLite.selector(targ); //in case it's an array of strings\n\t\t\t\t\t\t\tif (typeof(targ) === \"string\") {\n\t\t\t\t\t\t\t\ttargets.splice(i+1, 1); //to avoid an endless loop (can't imagine why the selector would return a string, but just in case)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (targ.length && targ !== window && targ[0] && (targ[0] === window || (targ[0].nodeType && targ[0].style && !targ.nodeType))) { //in case the user is passing in an array of selector objects (like jQuery objects), we need to check one more level and pull things out if necessary. Also note that <select> elements pass all the criteria regarding length and the first child having style, so we must also check to ensure the target isn't an HTML node itself.\n\t\t\t\t\t\t\ttargets.splice(i--, 1);\n\t\t\t\t\t\t\tthis._targets = targets = targets.concat(_slice(targ));\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._siblings[i] = _register(targ, this, false);\n\t\t\t\t\t\tif (overwrite === 1) if (this._siblings[i].length > 1) {\n\t\t\t\t\t\t\t_applyOverwrite(targ, this, null, 1, this._siblings[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis._propLookup = {};\n\t\t\t\t\tthis._siblings = _register(target, this, false);\n\t\t\t\t\tif (overwrite === 1) if (this._siblings.length > 1) {\n\t\t\t\t\t\t_applyOverwrite(target, this, null, 1, this._siblings);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.immediateRender || (duration === 0 && this._delay === 0 && this.vars.immediateRender !== false)) {\n\t\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\t\tthis.render(Math.min(0, -this._delay)); //in case delay is negative\n\t\t\t\t}\n\t\t\t}, true),\n\t\t\t_isSelector = function(v) {\n\t\t\t\treturn (v && v.length && v !== window && v[0] && (v[0] === window || (v[0].nodeType && v[0].style && !v.nodeType))); //we cannot check \"nodeType\" if the target is window from within an iframe, otherwise it will trigger a security error in some browsers like Firefox.\n\t\t\t},\n\t\t\t_autoCSS = function(vars, target) {\n\t\t\t\tvar css = {},\n\t\t\t\t\tp;\n\t\t\t\tfor (p in vars) {\n\t\t\t\t\tif (!_reservedProps[p] && (!(p in target) || p === \"transform\" || p === \"x\" || p === \"y\" || p === \"width\" || p === \"height\" || p === \"className\" || p === \"border\") && (!_plugins[p] || (_plugins[p] && _plugins[p]._autoCSS))) { //note: <img> elements contain read-only \"x\" and \"y\" properties. We should also prioritize editing css width/height rather than the element's properties.\n\t\t\t\t\t\tcss[p] = vars[p];\n\t\t\t\t\t\tdelete vars[p];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tvars.css = css;\n\t\t\t};\n\n\t\tp = TweenLite.prototype = new Animation();\n\t\tp.constructor = TweenLite;\n\t\tp.kill()._gc = false;\n\n//----TweenLite defaults, overwrite management, and root updates ----------------------------------------------------\n\n\t\tp.ratio = 0;\n\t\tp._firstPT = p._targets = p._overwrittenProps = p._startAt = null;\n\t\tp._notifyPluginsOfEnabled = p._lazy = false;\n\n\t\tTweenLite.version = \"1.19.1\";\n\t\tTweenLite.defaultEase = p._ease = new Ease(null, null, 1, 1);\n\t\tTweenLite.defaultOverwrite = \"auto\";\n\t\tTweenLite.ticker = _ticker;\n\t\tTweenLite.autoSleep = 120;\n\t\tTweenLite.lagSmoothing = function(threshold, adjustedLag) {\n\t\t\t_ticker.lagSmoothing(threshold, adjustedLag);\n\t\t};\n\n\t\tTweenLite.selector = window.$ || window.jQuery || function(e) {\n\t\t\tvar selector = window.$ || window.jQuery;\n\t\t\tif (selector) {\n\t\t\t\tTweenLite.selector = selector;\n\t\t\t\treturn selector(e);\n\t\t\t}\n\t\t\treturn (typeof(_doc) === \"undefined\") ? e : (_doc.querySelectorAll ? _doc.querySelectorAll(e) : _doc.getElementById((e.charAt(0) === \"#\") ? e.substr(1) : e));\n\t\t};\n\n\t\tvar _lazyTweens = [],\n\t\t\t_lazyLookup = {},\n\t\t\t_numbersExp = /(?:(-|-=|\\+=)?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[0-9]/ig,\n\t\t\t//_nonNumbersExp = /(?:([\\-+](?!(\\d|=)))|[^\\d\\-+=e]|(e(?![\\-+][\\d])))+/ig,\n\t\t\t_setRatio = function(v) {\n\t\t\t\tvar pt = this._firstPT,\n\t\t\t\t\tmin = 0.000001,\n\t\t\t\t\tval;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tval = !pt.blob ? pt.c * v + pt.s : (v === 1) ? this.end : v ? this.join(\"\") : this.start;\n\t\t\t\t\tif (pt.m) {\n\t\t\t\t\t\tval = pt.m(val, this._target || pt.t);\n\t\t\t\t\t} else if (val < min) if (val > -min && !pt.blob) { //prevents issues with converting very small numbers to strings in the browser\n\t\t\t\t\t\tval = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (!pt.f) {\n\t\t\t\t\t\tpt.t[pt.p] = val;\n\t\t\t\t\t} else if (pt.fp) {\n\t\t\t\t\t\tpt.t[pt.p](pt.fp, val);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.t[pt.p](val);\n\t\t\t\t\t}\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t},\n\t\t\t//compares two strings (start/end), finds the numbers that are different and spits back an array representing the whole value but with the changing values isolated as elements. For example, \"rgb(0,0,0)\" and \"rgb(100,50,0)\" would become [\"rgb(\", 0, \",\", 50, \",0)\"]. Notice it merges the parts that are identical (performance optimization). The array also has a linked list of PropTweens attached starting with _firstPT that contain the tweening data (t, p, s, c, f, etc.). It also stores the starting value as a \"start\" property so that we can revert to it if/when necessary, like when a tween rewinds fully. If the quantity of numbers differs between the start and end, it will always prioritize the end value(s). The pt parameter is optional - it's for a PropTween that will be appended to the end of the linked list and is typically for actually setting the value after all of the elements have been updated (with array.join(\"\")).\n\t\t\t_blobDif = function(start, end, filter, pt) {\n\t\t\t\tvar a = [],\n\t\t\t\t\tcharIndex = 0,\n\t\t\t\t\ts = \"\",\n\t\t\t\t\tcolor = 0,\n\t\t\t\t\tstartNums, endNums, num, i, l, nonNumbers, currentNum;\n\t\t\t\ta.start = start;\n\t\t\t\ta.end = end;\n\t\t\t\tstart = a[0] = start + \"\"; //ensure values are strings\n\t\t\t\tend = a[1] = end + \"\";\n\t\t\t\tif (filter) {\n\t\t\t\t\tfilter(a); //pass an array with the starting and ending values and let the filter do whatever it needs to the values.\n\t\t\t\t\tstart = a[0];\n\t\t\t\t\tend = a[1];\n\t\t\t\t}\n\t\t\t\ta.length = 0;\n\t\t\t\tstartNums = start.match(_numbersExp) || [];\n\t\t\t\tendNums = end.match(_numbersExp) || [];\n\t\t\t\tif (pt) {\n\t\t\t\t\tpt._next = null;\n\t\t\t\t\tpt.blob = 1;\n\t\t\t\t\ta._firstPT = a._applyPT = pt; //apply last in the linked list (which means inserting it first)\n\t\t\t\t}\n\t\t\t\tl = endNums.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tcurrentNum = endNums[i];\n\t\t\t\t\tnonNumbers = end.substr(charIndex, end.indexOf(currentNum, charIndex)-charIndex);\n\t\t\t\t\ts += (nonNumbers || !i) ? nonNumbers : \",\"; //note: SVG spec allows omission of comma/space when a negative sign is wedged between two numbers, like 2.5-5.3 instead of 2.5,-5.3 but when tweening, the negative value may switch to positive, so we insert the comma just in case.\n\t\t\t\t\tcharIndex += nonNumbers.length;\n\t\t\t\t\tif (color) { //sense rgba() values and round them.\n\t\t\t\t\t\tcolor = (color + 1) % 5;\n\t\t\t\t\t} else if (nonNumbers.substr(-5) === \"rgba(\") {\n\t\t\t\t\t\tcolor = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (currentNum === startNums[i] || startNums.length <= i) {\n\t\t\t\t\t\ts += currentNum;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (s) {\n\t\t\t\t\t\t\ta.push(s);\n\t\t\t\t\t\t\ts = \"\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tnum = parseFloat(startNums[i]);\n\t\t\t\t\t\ta.push(num);\n\t\t\t\t\t\ta._firstPT = {_next: a._firstPT, t:a, p: a.length-1, s:num, c:((currentNum.charAt(1) === \"=\") ? parseInt(currentNum.charAt(0) + \"1\", 10) * parseFloat(currentNum.substr(2)) : (parseFloat(currentNum) - num)) || 0, f:0, m:(color && color < 4) ? Math.round : 0};\n\t\t\t\t\t\t//note: we don't set _prev because we'll never need to remove individual PropTweens from this list.\n\t\t\t\t\t}\n\t\t\t\t\tcharIndex += currentNum.length;\n\t\t\t\t}\n\t\t\t\ts += end.substr(charIndex);\n\t\t\t\tif (s) {\n\t\t\t\t\ta.push(s);\n\t\t\t\t}\n\t\t\t\ta.setRatio = _setRatio;\n\t\t\t\treturn a;\n\t\t\t},\n\t\t\t//note: \"funcParam\" is only necessary for function-based getters/setters that require an extra parameter like getAttribute(\"width\") and setAttribute(\"width\", value). In this example, funcParam would be \"width\". Used by AttrPlugin for example.\n\t\t\t_addPropTween = function(target, prop, start, end, overwriteProp, mod, funcParam, stringFilter, index) {\n\t\t\t\tif (typeof(end) === \"function\") {\n\t\t\t\t\tend = end(index || 0, target);\n\t\t\t\t}\n\t\t\t\tvar type = typeof(target[prop]),\n\t\t\t\t\tgetterName = (type !== \"function\") ? \"\" : ((prop.indexOf(\"set\") || typeof(target[\"get\" + prop.substr(3)]) !== \"function\") ? prop : \"get\" + prop.substr(3)),\n\t\t\t\t\ts = (start !== \"get\") ? start : !getterName ? target[prop] : funcParam ? target[getterName](funcParam) : target[getterName](),\n\t\t\t\t\tisRelative = (typeof(end) === \"string\" && end.charAt(1) === \"=\"),\n\t\t\t\t\tpt = {t:target, p:prop, s:s, f:(type === \"function\"), pg:0, n:overwriteProp || prop, m:(!mod ? 0 : (typeof(mod) === \"function\") ? mod : Math.round), pr:0, c:isRelative ? parseInt(end.charAt(0) + \"1\", 10) * parseFloat(end.substr(2)) : (parseFloat(end) - s) || 0},\n\t\t\t\t\tblob;\n\n\t\t\t\tif (typeof(s) !== \"number\" || (typeof(end) !== \"number\" && !isRelative)) {\n\t\t\t\t\tif (funcParam || isNaN(s) || (!isRelative && isNaN(end)) || typeof(s) === \"boolean\" || typeof(end) === \"boolean\") {\n\t\t\t\t\t\t//a blob (string that has multiple numbers in it)\n\t\t\t\t\t\tpt.fp = funcParam;\n\t\t\t\t\t\tblob = _blobDif(s, (isRelative ? pt.s + pt.c : end), stringFilter || TweenLite.defaultStringFilter, pt);\n\t\t\t\t\t\tpt = {t: blob, p: \"setRatio\", s: 0, c: 1, f: 2, pg: 0, n: overwriteProp || prop, pr: 0, m: 0}; //\"2\" indicates it's a Blob property tween. Needed for RoundPropsPlugin for example.\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.s = parseFloat(s);\n\t\t\t\t\t\tif (!isRelative) {\n\t\t\t\t\t\t\tpt.c = (parseFloat(end) - pt.s) || 0;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pt.c) { //only add it to the linked list if there's a change.\n\t\t\t\t\tif ((pt._next = this._firstPT)) {\n\t\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t\t}\n\t\t\t\t\tthis._firstPT = pt;\n\t\t\t\t\treturn pt;\n\t\t\t\t}\n\t\t\t},\n\t\t\t_internals = TweenLite._internals = {isArray:_isArray, isSelector:_isSelector, lazyTweens:_lazyTweens, blobDif:_blobDif}, //gives us a way to expose certain private values to other GreenSock classes without contaminating tha main TweenLite object.\n\t\t\t_plugins = TweenLite._plugins = {},\n\t\t\t_tweenLookup = _internals.tweenLookup = {},\n\t\t\t_tweenLookupNum = 0,\n\t\t\t_reservedProps = _internals.reservedProps = {ease:1, delay:1, overwrite:1, onComplete:1, onCompleteParams:1, onCompleteScope:1, useFrames:1, runBackwards:1, startAt:1, onUpdate:1, onUpdateParams:1, onUpdateScope:1, onStart:1, onStartParams:1, onStartScope:1, onReverseComplete:1, onReverseCompleteParams:1, onReverseCompleteScope:1, onRepeat:1, onRepeatParams:1, onRepeatScope:1, easeParams:1, yoyo:1, immediateRender:1, repeat:1, repeatDelay:1, data:1, paused:1, reversed:1, autoCSS:1, lazy:1, onOverwrite:1, callbackScope:1, stringFilter:1, id:1},\n\t\t\t_overwriteLookup = {none:0, all:1, auto:2, concurrent:3, allOnStart:4, preexisting:5, \"true\":1, \"false\":0},\n\t\t\t_rootFramesTimeline = Animation._rootFramesTimeline = new SimpleTimeline(),\n\t\t\t_rootTimeline = Animation._rootTimeline = new SimpleTimeline(),\n\t\t\t_nextGCFrame = 30,\n\t\t\t_lazyRender = _internals.lazyRender = function() {\n\t\t\t\tvar i = _lazyTweens.length,\n\t\t\t\t\ttween;\n\t\t\t\t_lazyLookup = {};\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ttween = _lazyTweens[i];\n\t\t\t\t\tif (tween && tween._lazy !== false) {\n\t\t\t\t\t\ttween.render(tween._lazy[0], tween._lazy[1], true);\n\t\t\t\t\t\ttween._lazy = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t_lazyTweens.length = 0;\n\t\t\t};\n\n\t\t_rootTimeline._startTime = _ticker.time;\n\t\t_rootFramesTimeline._startTime = _ticker.frame;\n\t\t_rootTimeline._active = _rootFramesTimeline._active = true;\n\t\tsetTimeout(_lazyRender, 1); //on some mobile devices, there isn't a \"tick\" before code runs which means any lazy renders wouldn't run before the next official \"tick\".\n\n\t\tAnimation._updateRoot = TweenLite.render = function() {\n\t\t\t\tvar i, a, p;\n\t\t\t\tif (_lazyTweens.length) { //if code is run outside of the requestAnimationFrame loop, there may be tweens queued AFTER the engine refreshed, so we need to ensure any pending renders occur before we refresh again.\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\t_rootTimeline.render((_ticker.time - _rootTimeline._startTime) * _rootTimeline._timeScale, false, false);\n\t\t\t\t_rootFramesTimeline.render((_ticker.frame - _rootFramesTimeline._startTime) * _rootFramesTimeline._timeScale, false, false);\n\t\t\t\tif (_lazyTweens.length) {\n\t\t\t\t\t_lazyRender();\n\t\t\t\t}\n\t\t\t\tif (_ticker.frame >= _nextGCFrame) { //dump garbage every 120 frames or whatever the user sets TweenLite.autoSleep to\n\t\t\t\t\t_nextGCFrame = _ticker.frame + (parseInt(TweenLite.autoSleep, 10) || 120);\n\t\t\t\t\tfor (p in _tweenLookup) {\n\t\t\t\t\t\ta = _tweenLookup[p].tweens;\n\t\t\t\t\t\ti = a.length;\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i]._gc) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (a.length === 0) {\n\t\t\t\t\t\t\tdelete _tweenLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t//if there are no more tweens in the root timelines, or if they're all paused, make the _timer sleep to reduce load on the CPU slightly\n\t\t\t\t\tp = _rootTimeline._first;\n\t\t\t\t\tif (!p || p._paused) if (TweenLite.autoSleep && !_rootFramesTimeline._first && _ticker._listeners.tick.length === 1) {\n\t\t\t\t\t\twhile (p && p._paused) {\n\t\t\t\t\t\t\tp = p._next;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (!p) {\n\t\t\t\t\t\t\t_ticker.sleep();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t_ticker.addEventListener(\"tick\", Animation._updateRoot);\n\n\t\tvar _register = function(target, tween, scrub) {\n\t\t\t\tvar id = target._gsTweenID, a, i;\n\t\t\t\tif (!_tweenLookup[id || (target._gsTweenID = id = \"t\" + (_tweenLookupNum++))]) {\n\t\t\t\t\t_tweenLookup[id] = {target:target, tweens:[]};\n\t\t\t\t}\n\t\t\t\tif (tween) {\n\t\t\t\t\ta = _tweenLookup[id].tweens;\n\t\t\t\t\ta[(i = a.length)] = tween;\n\t\t\t\t\tif (scrub) {\n\t\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\t\tif (a[i] === tween) {\n\t\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn _tweenLookup[id].tweens;\n\t\t\t},\n\t\t\t_onOverwrite = function(overwrittenTween, overwritingTween, target, killedProps) {\n\t\t\t\tvar func = overwrittenTween.vars.onOverwrite, r1, r2;\n\t\t\t\tif (func) {\n\t\t\t\t\tr1 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t\t\t\t}\n\t\t\t\tfunc = TweenLite.onOverwrite;\n\t\t\t\tif (func) {\n\t\t\t\t\tr2 = func(overwrittenTween, overwritingTween, target, killedProps);\n\t\t\t\t}\n\t\t\t\treturn (r1 !== false && r2 !== false);\n\t\t\t},\n\t\t\t_applyOverwrite = function(target, tween, props, mode, siblings) {\n\t\t\t\tvar i, changed, curTween, l;\n\t\t\t\tif (mode === 1 || mode >= 4) {\n\t\t\t\t\tl = siblings.length;\n\t\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\t\tif ((curTween = siblings[i]) !== tween) {\n\t\t\t\t\t\t\tif (!curTween._gc) {\n\t\t\t\t\t\t\t\tif (curTween._kill(null, target, tween)) {\n\t\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mode === 5) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn changed;\n\t\t\t\t}\n\t\t\t\t//NOTE: Add 0.0000000001 to overcome floating point errors that can cause the startTime to be VERY slightly off (when a tween's time() is set for example)\n\t\t\t\tvar startTime = tween._startTime + _tinyNum,\n\t\t\t\t\toverlaps = [],\n\t\t\t\t\toCount = 0,\n\t\t\t\t\tzeroDur = (tween._duration === 0),\n\t\t\t\t\tglobalStart;\n\t\t\t\ti = siblings.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif ((curTween = siblings[i]) === tween || curTween._gc || curTween._paused) {\n\t\t\t\t\t\t//ignore\n\t\t\t\t\t} else if (curTween._timeline !== tween._timeline) {\n\t\t\t\t\t\tglobalStart = globalStart || _checkOverlap(tween, 0, zeroDur);\n\t\t\t\t\t\tif (_checkOverlap(curTween, globalStart, zeroDur) === 0) {\n\t\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (curTween._startTime <= startTime) if (curTween._startTime + curTween.totalDuration() / curTween._timeScale > startTime) if (!((zeroDur || !curTween._initted) && startTime - curTween._startTime <= 0.0000000002)) {\n\t\t\t\t\t\toverlaps[oCount++] = curTween;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ti = oCount;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tcurTween = overlaps[i];\n\t\t\t\t\tif (mode === 2) if (curTween._kill(props, target, tween)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (mode !== 2 || (!curTween._firstPT && curTween._initted)) {\n\t\t\t\t\t\tif (mode !== 2 && !_onOverwrite(curTween, tween)) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (curTween._enabled(false, false)) { //if all property tweens have been overwritten, kill the tween.\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn changed;\n\t\t\t},\n\t\t\t_checkOverlap = function(tween, reference, zeroDur) {\n\t\t\t\tvar tl = tween._timeline,\n\t\t\t\t\tts = tl._timeScale,\n\t\t\t\t\tt = tween._startTime;\n\t\t\t\twhile (tl._timeline) {\n\t\t\t\t\tt += tl._startTime;\n\t\t\t\t\tts *= tl._timeScale;\n\t\t\t\t\tif (tl._paused) {\n\t\t\t\t\t\treturn -100;\n\t\t\t\t\t}\n\t\t\t\t\ttl = tl._timeline;\n\t\t\t\t}\n\t\t\t\tt /= ts;\n\t\t\t\treturn (t > reference) ? t - reference : ((zeroDur && t === reference) || (!tween._initted && t - reference < 2 * _tinyNum)) ? _tinyNum : ((t += tween.totalDuration() / tween._timeScale / ts) > reference + _tinyNum) ? 0 : t - reference - _tinyNum;\n\t\t\t};\n\n\n//---- TweenLite instance methods -----------------------------------------------------------------------------\n\n\t\tp._init = function() {\n\t\t\tvar v = this.vars,\n\t\t\t\top = this._overwrittenProps,\n\t\t\t\tdur = this._duration,\n\t\t\t\timmediate = !!v.immediateRender,\n\t\t\t\tease = v.ease,\n\t\t\t\ti, initPlugins, pt, p, startVars, l;\n\t\t\tif (v.startAt) {\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tthis._startAt.render(-1, true); //if we've run a startAt previously (when the tween instantiated), we should revert it so that the values re-instantiate correctly particularly for relative tweens. Without this, a TweenLite.fromTo(obj, 1, {x:\"+=100\"}, {x:\"-=100\"}), for example, would actually jump to +=200 because the startAt would run twice, doubling the relative change.\n\t\t\t\t\tthis._startAt.kill();\n\t\t\t\t}\n\t\t\t\tstartVars = {};\n\t\t\t\tfor (p in v.startAt) { //copy the properties/values into a new object to avoid collisions, like var to = {x:0}, from = {x:500}; timeline.fromTo(e, 1, from, to).fromTo(e, 1, to, from);\n\t\t\t\t\tstartVars[p] = v.startAt[p];\n\t\t\t\t}\n\t\t\t\tstartVars.overwrite = false;\n\t\t\t\tstartVars.immediateRender = true;\n\t\t\t\tstartVars.lazy = (immediate && v.lazy !== false);\n\t\t\t\tstartVars.startAt = startVars.delay = null; //no nesting of startAt objects allowed (otherwise it could cause an infinite loop).\n\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, startVars);\n\t\t\t\tif (immediate) {\n\t\t\t\t\tif (this._time > 0) {\n\t\t\t\t\t\tthis._startAt = null; //tweens that render immediately (like most from() and fromTo() tweens) shouldn't revert when their parent timeline's playhead goes backward past the startTime because the initial render could have happened anytime and it shouldn't be directly correlated to this tween's startTime. Imagine setting up a complex animation where the beginning states of various objects are rendered immediately but the tween doesn't happen for quite some time - if we revert to the starting values as soon as the playhead goes backward past the tween's startTime, it will throw things off visually. Reversion should only happen in TimelineLite/Max instances where immediateRender was false (which is the default in the convenience methods like from()).\n\t\t\t\t\t} else if (dur !== 0) {\n\t\t\t\t\t\treturn; //we skip initialization here so that overwriting doesn't occur until the tween actually begins. Otherwise, if you create several immediateRender:true tweens of the same target/properties to drop into a TimelineLite or TimelineMax, the last one created would overwrite the first ones because they didn't get placed into the timeline yet before the first render occurs and kicks in overwriting.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (v.runBackwards && dur !== 0) {\n\t\t\t\t//from() tweens must be handled uniquely: their beginning values must be rendered but we don't want overwriting to occur yet (when time is still 0). Wait until the tween actually begins before doing all the routines like overwriting. At that time, we should render at the END of the tween to ensure that things initialize correctly (remember, from() tweens go backwards)\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tthis._startAt.render(-1, true);\n\t\t\t\t\tthis._startAt.kill();\n\t\t\t\t\tthis._startAt = null;\n\t\t\t\t} else {\n\t\t\t\t\tif (this._time !== 0) { //in rare cases (like if a from() tween runs and then is invalidate()-ed), immediateRender could be true but the initial forced-render gets skipped, so there's no need to force the render in this context when the _time is greater than 0\n\t\t\t\t\t\timmediate = false;\n\t\t\t\t\t}\n\t\t\t\t\tpt = {};\n\t\t\t\t\tfor (p in v) { //copy props into a new object and skip any reserved props, otherwise onComplete or onUpdate or onStart could fire. We should, however, permit autoCSS to go through.\n\t\t\t\t\t\tif (!_reservedProps[p] || p === \"autoCSS\") {\n\t\t\t\t\t\t\tpt[p] = v[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpt.overwrite = 0;\n\t\t\t\t\tpt.data = \"isFromStart\"; //we tag the tween with as \"isFromStart\" so that if [inside a plugin] we need to only do something at the very END of a tween, we have a way of identifying this tween as merely the one that's setting the beginning values for a \"from()\" tween. For example, clearProps in CSSPlugin should only get applied at the very END of a tween and without this tag, from(...{height:100, clearProps:\"height\", delay:1}) would wipe the height at the beginning of the tween and after 1 second, it'd kick back in.\n\t\t\t\t\tpt.lazy = (immediate && v.lazy !== false);\n\t\t\t\t\tpt.immediateRender = immediate; //zero-duration tweens render immediately by default, but if we're not specifically instructed to render this tween immediately, we should skip this and merely _init() to record the starting values (rendering them immediately would push them to completion which is wasteful in that case - we'd have to render(-1) immediately after)\n\t\t\t\t\tthis._startAt = TweenLite.to(this.target, 0, pt);\n\t\t\t\t\tif (!immediate) {\n\t\t\t\t\t\tthis._startAt._init(); //ensures that the initial values are recorded\n\t\t\t\t\t\tthis._startAt._enabled(false); //no need to have the tween render on the next cycle. Disable it because we'll always manually control the renders of the _startAt tween.\n\t\t\t\t\t\tif (this.vars.immediateRender) {\n\t\t\t\t\t\t\tthis._startAt = null;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (this._time === 0) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._ease = ease = (!ease) ? TweenLite.defaultEase : (ease instanceof Ease) ? ease : (typeof(ease) === \"function\") ? new Ease(ease, v.easeParams) : _easeMap[ease] || TweenLite.defaultEase;\n\t\t\tif (v.easeParams instanceof Array && ease.config) {\n\t\t\t\tthis._ease = ease.config.apply(ease, v.easeParams);\n\t\t\t}\n\t\t\tthis._easeType = this._ease._type;\n\t\t\tthis._easePower = this._ease._power;\n\t\t\tthis._firstPT = null;\n\n\t\t\tif (this._targets) {\n\t\t\t\tl = this._targets.length;\n\t\t\t\tfor (i = 0; i < l; i++) {\n\t\t\t\t\tif ( this._initProps( this._targets[i], (this._propLookup[i] = {}), this._siblings[i], (op ? op[i] : null), i) ) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tinitPlugins = this._initProps(this.target, this._propLookup, this._siblings, op, 0);\n\t\t\t}\n\n\t\t\tif (initPlugins) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onInitAllProps\", this); //reorders the array in order of priority. Uses a static TweenPlugin method in order to minimize file size in TweenLite\n\t\t\t}\n\t\t\tif (op) if (!this._firstPT) if (typeof(this.target) !== \"function\") { //if all tweening properties have been overwritten, kill the tween. If the target is a function, it's probably a delayedCall so let it live.\n\t\t\t\tthis._enabled(false, false);\n\t\t\t}\n\t\t\tif (v.runBackwards) {\n\t\t\t\tpt = this._firstPT;\n\t\t\t\twhile (pt) {\n\t\t\t\t\tpt.s += pt.c;\n\t\t\t\t\tpt.c = -pt.c;\n\t\t\t\t\tpt = pt._next;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._onUpdate = v.onUpdate;\n\t\t\tthis._initted = true;\n\t\t};\n\n\t\tp._initProps = function(target, propLookup, siblings, overwrittenProps, index) {\n\t\t\tvar p, i, initPlugins, plugin, pt, v;\n\t\t\tif (target == null) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tif (_lazyLookup[target._gsTweenID]) {\n\t\t\t\t_lazyRender(); //if other tweens of the same target have recently initted but haven't rendered yet, we've got to force the render so that the starting values are correct (imagine populating a timeline with a bunch of sequential tweens and then jumping to the end)\n\t\t\t}\n\n\t\t\tif (!this.vars.css) if (target.style) if (target !== window && target.nodeType) if (_plugins.css) if (this.vars.autoCSS !== false) { //it's so common to use TweenLite/Max to animate the css of DOM elements, we assume that if the target is a DOM element, that's what is intended (a convenience so that users don't have to wrap things in css:{}, although we still recommend it for a slight performance boost and better specificity). Note: we cannot check \"nodeType\" on the window inside an iframe.\n\t\t\t\t_autoCSS(this.vars, target);\n\t\t\t}\n\t\t\tfor (p in this.vars) {\n\t\t\t\tv = this.vars[p];\n\t\t\t\tif (_reservedProps[p]) {\n\t\t\t\t\tif (v) if ((v instanceof Array) || (v.push && _isArray(v))) if (v.join(\"\").indexOf(\"{self}\") !== -1) {\n\t\t\t\t\t\tthis.vars[p] = v = this._swapSelfInParams(v, this);\n\t\t\t\t\t}\n\n\t\t\t\t} else if (_plugins[p] && (plugin = new _plugins[p]())._onInitTween(target, this.vars[p], this, index)) {\n\n\t\t\t\t\t//t - target \t\t[object]\n\t\t\t\t\t//p - property \t\t[string]\n\t\t\t\t\t//s - start\t\t\t[number]\n\t\t\t\t\t//c - change\t\t[number]\n\t\t\t\t\t//f - isFunction\t[boolean]\n\t\t\t\t\t//n - name\t\t\t[string]\n\t\t\t\t\t//pg - isPlugin \t[boolean]\n\t\t\t\t\t//pr - priority\t\t[number]\n\t\t\t\t\t//m - mod           [function | 0]\n\t\t\t\t\tthis._firstPT = pt = {_next:this._firstPT, t:plugin, p:\"setRatio\", s:0, c:1, f:1, n:p, pg:1, pr:plugin._priority, m:0};\n\t\t\t\t\ti = plugin._overwriteProps.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tpropLookup[plugin._overwriteProps[i]] = this._firstPT;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._priority || plugin._onInitAllProps) {\n\t\t\t\t\t\tinitPlugins = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (plugin._onDisable || plugin._onEnable) {\n\t\t\t\t\t\tthis._notifyPluginsOfEnabled = true;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt;\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup[p] = _addPropTween.call(this, target, p, \"get\", v, p, 0, null, this.vars.stringFilter, index);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (overwrittenProps) if (this._kill(overwrittenProps, target)) { //another tween may have tried to overwrite properties of this tween before init() was called (like if two tweens start at the same time, the one created second will run first)\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps, index);\n\t\t\t}\n\t\t\tif (this._overwrite > 1) if (this._firstPT) if (siblings.length > 1) if (_applyOverwrite(target, this, propLookup, this._overwrite, siblings)) {\n\t\t\t\tthis._kill(propLookup, target);\n\t\t\t\treturn this._initProps(target, propLookup, siblings, overwrittenProps, index);\n\t\t\t}\n\t\t\tif (this._firstPT) if ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration)) { //zero duration tweens don't lazy render by default; everything else does.\n\t\t\t\t_lazyLookup[target._gsTweenID] = true;\n\t\t\t}\n\t\t\treturn initPlugins;\n\t\t};\n\n\t\tp.render = function(time, suppressEvents, force) {\n\t\t\tvar prevTime = this._time,\n\t\t\t\tduration = this._duration,\n\t\t\t\tprevRawPrevTime = this._rawPrevTime,\n\t\t\t\tisComplete, callback, pt, rawPrevTime;\n\t\t\tif (time >= duration - 0.0000001 && time >= 0) { //to work around occasional floating point math artifacts.\n\t\t\t\tthis._totalTime = this._time = duration;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(1) : 1;\n\t\t\t\tif (!this._reversed ) {\n\t\t\t\t\tisComplete = true;\n\t\t\t\t\tcallback = \"onComplete\";\n\t\t\t\t\tforce = (force || this._timeline.autoRemoveChildren); //otherwise, if the animation is unpaused/activated after it's already finished, it doesn't get removed from the parent timeline.\n\t\t\t\t}\n\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\tif (this._startTime === this._timeline._duration) { //if a zero-duration tween is at the VERY end of a timeline and that timeline renders at its end, it will typically add a tiny bit of cushion to the render time to prevent rounding errors from getting in the way of tweens rendering their VERY end. If we then reverse() that timeline, the zero-duration tween will trigger its onReverseComplete even though technically the playhead didn't pass over it again. It's a very specific edge case we must accommodate.\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t}\n\t\t\t\t\tif (prevRawPrevTime < 0 || (time <= 0 && time >= -0.0000001) || (prevRawPrevTime === _tinyNum && this.data !== \"isPause\")) if (prevRawPrevTime !== time) { //note: when this.data is \"isPause\", it's a callback added by addPause() on a timeline that we should not be triggered when LEAVING its exact start time. In other words, tl.addPause(1).play(1) shouldn't pause.\n\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\tif (prevRawPrevTime > _tinyNum) {\n\t\t\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t}\n\n\t\t\t} else if (time < 0.0000001) { //to work around occasional floating point math artifacts, round super small values to 0.\n\t\t\t\tthis._totalTime = this._time = 0;\n\t\t\t\tthis.ratio = this._ease._calcEnd ? this._ease.getRatio(0) : 0;\n\t\t\t\tif (prevTime !== 0 || (duration === 0 && prevRawPrevTime > 0)) {\n\t\t\t\t\tcallback = \"onReverseComplete\";\n\t\t\t\t\tisComplete = this._reversed;\n\t\t\t\t}\n\t\t\t\tif (time < 0) {\n\t\t\t\t\tthis._active = false;\n\t\t\t\t\tif (duration === 0) if (this._initted || !this.vars.lazy || force) { //zero-duration tweens are tricky because we must discern the momentum/direction of time in order to determine whether the starting values should be rendered or the ending values. If the \"playhead\" of its timeline goes past the zero-duration tween in the forward direction or lands directly on it, the end values should be rendered, but if the timeline's \"playhead\" moves past it in the backward direction (from a postitive time to a negative time), the starting values must be rendered.\n\t\t\t\t\t\tif (prevRawPrevTime >= 0 && !(prevRawPrevTime === _tinyNum && this.data === \"isPause\")) {\n\t\t\t\t\t\t\tforce = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis._rawPrevTime = rawPrevTime = (!suppressEvents || time || prevRawPrevTime === time) ? time : _tinyNum; //when the playhead arrives at EXACTLY time 0 (right on top) of a zero-duration tween, we need to discern if events are suppressed so that when the playhead moves again (next time), it'll trigger the callback. If events are NOT suppressed, obviously the callback would be triggered in this render. Basically, the callback should fire either when the playhead ARRIVES or LEAVES this exact spot, not both. Imagine doing a timeline.seek(0) and there's a callback that sits at 0. Since events are suppressed on that seek() by default, nothing will fire, but when the playhead moves off of that position, the callback should fire. This behavior is what people intuitively expect. We set the _rawPrevTime to be a precise tiny number to indicate this scenario rather than using another property/variable which would increase memory usage. This technique is less readable, but more efficient.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!this._initted) { //if we render the very beginning (time == 0) of a fromTo(), we must force the render (normal tweens wouldn't need to render at a time of 0 when the prevTime was also 0). This is also mandatory to make sure overwriting kicks in immediately.\n\t\t\t\t\tforce = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._totalTime = this._time = time;\n\n\t\t\t\tif (this._easeType) {\n\t\t\t\t\tvar r = time / duration, type = this._easeType, pow = this._easePower;\n\t\t\t\t\tif (type === 1 || (type === 3 && r >= 0.5)) {\n\t\t\t\t\t\tr = 1 - r;\n\t\t\t\t\t}\n\t\t\t\t\tif (type === 3) {\n\t\t\t\t\t\tr *= 2;\n\t\t\t\t\t}\n\t\t\t\t\tif (pow === 1) {\n\t\t\t\t\t\tr *= r;\n\t\t\t\t\t} else if (pow === 2) {\n\t\t\t\t\t\tr *= r * r;\n\t\t\t\t\t} else if (pow === 3) {\n\t\t\t\t\t\tr *= r * r * r;\n\t\t\t\t\t} else if (pow === 4) {\n\t\t\t\t\t\tr *= r * r * r * r;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (type === 1) {\n\t\t\t\t\t\tthis.ratio = 1 - r;\n\t\t\t\t\t} else if (type === 2) {\n\t\t\t\t\t\tthis.ratio = r;\n\t\t\t\t\t} else if (time / duration < 0.5) {\n\t\t\t\t\t\tthis.ratio = r / 2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.ratio = 1 - (r / 2);\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(time / duration);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this._time === prevTime && !force) {\n\t\t\t\treturn;\n\t\t\t} else if (!this._initted) {\n\t\t\t\tthis._init();\n\t\t\t\tif (!this._initted || this._gc) { //immediateRender tweens typically won't initialize until the playhead advances (_time is greater than 0) in order to ensure that overwriting occurs properly. Also, if all of the tweening properties have been overwritten (which would cause _gc to be true, as set in _init()), we shouldn't continue otherwise an onStart callback could be called for example.\n\t\t\t\t\treturn;\n\t\t\t\t} else if (!force && this._firstPT && ((this.vars.lazy !== false && this._duration) || (this.vars.lazy && !this._duration))) {\n\t\t\t\t\tthis._time = this._totalTime = prevTime;\n\t\t\t\t\tthis._rawPrevTime = prevRawPrevTime;\n\t\t\t\t\t_lazyTweens.push(this);\n\t\t\t\t\tthis._lazy = [time, suppressEvents];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t//_ease is initially set to defaultEase, so now that init() has run, _ease is set properly and we need to recalculate the ratio. Overall this is faster than using conditional logic earlier in the method to avoid having to set ratio twice because we only init() once but renderTime() gets called VERY frequently.\n\t\t\t\tif (this._time && !isComplete) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio(this._time / duration);\n\t\t\t\t} else if (isComplete && this._ease._calcEnd) {\n\t\t\t\t\tthis.ratio = this._ease.getRatio((this._time === 0) ? 0 : 1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (this._lazy !== false) { //in case a lazy render is pending, we should flush it because the new render is occurring now (imagine a lazy tween instantiating and then immediately the user calls tween.seek(tween.duration()), skipping to the end - the end render would be forced, and then if we didn't flush the lazy render, it'd fire AFTER the seek(), rendering it at the wrong time.\n\t\t\t\tthis._lazy = false;\n\t\t\t}\n\t\t\tif (!this._active) if (!this._paused && this._time !== prevTime && time >= 0) {\n\t\t\t\tthis._active = true;  //so that if the user renders a tween (as opposed to the timeline rendering it), the timeline is forced to re-render and align it with the proper time/frame on the next rendering cycle. Maybe the tween already finished but the user manually re-renders it as halfway done.\n\t\t\t}\n\t\t\tif (prevTime === 0) {\n\t\t\t\tif (this._startAt) {\n\t\t\t\t\tif (time >= 0) {\n\t\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t\t} else if (!callback) {\n\t\t\t\t\t\tcallback = \"_dummyGS\"; //if no callback is defined, use a dummy value just so that the condition at the end evaluates as true because _startAt should render AFTER the normal render loop when the time is negative. We could handle this in a more intuitive way, of course, but the render loop is the MOST important thing to optimize, so this technique allows us to avoid adding extra conditional logic in a high-frequency area.\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.vars.onStart) if (this._time !== 0 || duration === 0) if (!suppressEvents) {\n\t\t\t\t\tthis._callback(\"onStart\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tpt = this._firstPT;\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.f) {\n\t\t\t\t\tpt.t[pt.p](pt.c * this.ratio + pt.s);\n\t\t\t\t} else {\n\t\t\t\t\tpt.t[pt.p] = pt.c * this.ratio + pt.s;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\n\t\t\tif (this._onUpdate) {\n\t\t\t\tif (time < 0) if (this._startAt && time !== -0.0001) { //if the tween is positioned at the VERY beginning (_startTime 0) of its parent timeline, it's illegal for the playhead to go back further, so we should not render the recorded startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force); //note: for performance reasons, we tuck this conditional logic inside less traveled areas (most tweens don't have an onUpdate). We'd just have it at the end before the onComplete, but the values should be updated before any onUpdate is called, so we ALSO put it here and then if it's not called, we do so later near the onComplete.\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents) if (this._time !== prevTime || isComplete || force) {\n\t\t\t\t\tthis._callback(\"onUpdate\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (callback) if (!this._gc || force) { //check _gc because there's a chance that kill() could be called in an onUpdate\n\t\t\t\tif (time < 0 && this._startAt && !this._onUpdate && time !== -0.0001) { //-0.0001 is a special value that we use when looping back to the beginning of a repeated TimelineMax, in which case we shouldn't render the _startAt values.\n\t\t\t\t\tthis._startAt.render(time, suppressEvents, force);\n\t\t\t\t}\n\t\t\t\tif (isComplete) {\n\t\t\t\t\tif (this._timeline.autoRemoveChildren) {\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t\tthis._active = false;\n\t\t\t\t}\n\t\t\t\tif (!suppressEvents && this.vars[callback]) {\n\t\t\t\t\tthis._callback(callback);\n\t\t\t\t}\n\t\t\t\tif (duration === 0 && this._rawPrevTime === _tinyNum && rawPrevTime !== _tinyNum) { //the onComplete or onReverseComplete could trigger movement of the playhead and for zero-duration tweens (which must discern direction) that land directly back on their start time, we don't want to fire again on the next render. Think of several addPause()'s in a timeline that forces the playhead to a certain spot, but what if it's already paused and another tween is tweening the \"time\" of the timeline? Each time it moves [forward] past that spot, it would move back, and since suppressEvents is true, it'd reset _rawPrevTime to _tinyNum so that when it begins again, the callback would fire (so ultimately it could bounce back and forth during that tween). Again, this is a very uncommon scenario, but possible nonetheless.\n\t\t\t\t\tthis._rawPrevTime = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tp._kill = function(vars, target, overwritingTween) {\n\t\t\tif (vars === \"all\") {\n\t\t\t\tvars = null;\n\t\t\t}\n\t\t\tif (vars == null) if (target == null || target === this.target) {\n\t\t\t\tthis._lazy = false;\n\t\t\t\treturn this._enabled(false, false);\n\t\t\t}\n\t\t\ttarget = (typeof(target) !== \"string\") ? (target || this._targets || this.target) : TweenLite.selector(target) || target;\n\t\t\tvar simultaneousOverwrite = (overwritingTween && this._time && overwritingTween._startTime === this._startTime && this._timeline === overwritingTween._timeline),\n\t\t\t\ti, overwrittenProps, p, pt, propLookup, changed, killProps, record, killed;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (this._kill(vars, target[i], overwritingTween)) {\n\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._targets) {\n\t\t\t\t\ti = this._targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tif (target === this._targets[i]) {\n\t\t\t\t\t\t\tpropLookup = this._propLookup[i] || {};\n\t\t\t\t\t\t\tthis._overwrittenProps = this._overwrittenProps || [];\n\t\t\t\t\t\t\toverwrittenProps = this._overwrittenProps[i] = vars ? this._overwrittenProps[i] || {} : \"all\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (target !== this.target) {\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\tpropLookup = this._propLookup;\n\t\t\t\t\toverwrittenProps = this._overwrittenProps = vars ? this._overwrittenProps || {} : \"all\";\n\t\t\t\t}\n\n\t\t\t\tif (propLookup) {\n\t\t\t\t\tkillProps = vars || propLookup;\n\t\t\t\t\trecord = (vars !== overwrittenProps && overwrittenProps !== \"all\" && vars !== propLookup && (typeof(vars) !== \"object\" || !vars._tempKill)); //_tempKill is a super-secret way to delete a particular tweening property but NOT have it remembered as an official overwritten property (like in BezierPlugin)\n\t\t\t\t\tif (overwritingTween && (TweenLite.onOverwrite || this.vars.onOverwrite)) {\n\t\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\t\tif (propLookup[p]) {\n\t\t\t\t\t\t\t\tif (!killed) {\n\t\t\t\t\t\t\t\t\tkilled = [];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tkilled.push(p);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ((killed || !vars) && !_onOverwrite(this, overwritingTween, target, killed)) { //if the onOverwrite returned false, that means the user wants to override the overwriting (cancel it).\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (p in killProps) {\n\t\t\t\t\t\tif ((pt = propLookup[p])) {\n\t\t\t\t\t\t\tif (simultaneousOverwrite) { //if another tween overwrites this one and they both start at exactly the same time, yet this tween has already rendered once (for example, at 0.001) because it's first in the queue, we should revert the values to where they were at 0 so that the starting values aren't contaminated on the overwriting tween.\n\t\t\t\t\t\t\t\tif (pt.f) {\n\t\t\t\t\t\t\t\t\tpt.t[pt.p](pt.s);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tpt.t[pt.p] = pt.s;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (pt.pg && pt.t._kill(killProps)) {\n\t\t\t\t\t\t\t\tchanged = true; //some plugins need to be notified so they can perform cleanup tasks first\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!pt.pg || pt.t._overwriteProps.length === 0) {\n\t\t\t\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\t\t\t} else if (pt === this._firstPT) {\n\t\t\t\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tpt._next = pt._prev = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tdelete propLookup[p];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (record) {\n\t\t\t\t\t\t\toverwrittenProps[p] = 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!this._firstPT && this._initted) { //if all tweening properties are killed, kill the tween. Without this line, if there's a tween with multiple targets and then you killTweensOf() each target individually, the tween would technically still remain active and fire its onComplete even though there aren't any more properties tweening.\n\t\t\t\t\t\tthis._enabled(false, false);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tp.invalidate = function() {\n\t\t\tif (this._notifyPluginsOfEnabled) {\n\t\t\t\tTweenLite._onPluginEvent(\"_onDisable\", this);\n\t\t\t}\n\t\t\tthis._firstPT = this._overwrittenProps = this._startAt = this._onUpdate = null;\n\t\t\tthis._notifyPluginsOfEnabled = this._active = this._lazy = false;\n\t\t\tthis._propLookup = (this._targets) ? {} : [];\n\t\t\tAnimation.prototype.invalidate.call(this);\n\t\t\tif (this.vars.immediateRender) {\n\t\t\t\tthis._time = -_tinyNum; //forces a render without having to set the render() \"force\" parameter to true because we want to allow lazying by default (using the \"force\" parameter always forces an immediate full render)\n\t\t\t\tthis.render(Math.min(0, -this._delay)); //in case delay is negative.\n\t\t\t}\n\t\t\treturn this;\n\t\t};\n\n\t\tp._enabled = function(enabled, ignoreTimeline) {\n\t\t\tif (!_tickerActive) {\n\t\t\t\t_ticker.wake();\n\t\t\t}\n\t\t\tif (enabled && this._gc) {\n\t\t\t\tvar targets = this._targets,\n\t\t\t\t\ti;\n\t\t\t\tif (targets) {\n\t\t\t\t\ti = targets.length;\n\t\t\t\t\twhile (--i > -1) {\n\t\t\t\t\t\tthis._siblings[i] = _register(targets[i], this, true);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis._siblings = _register(this.target, this, true);\n\t\t\t\t}\n\t\t\t}\n\t\t\tAnimation.prototype._enabled.call(this, enabled, ignoreTimeline);\n\t\t\tif (this._notifyPluginsOfEnabled) if (this._firstPT) {\n\t\t\t\treturn TweenLite._onPluginEvent((enabled ? \"_onEnable\" : \"_onDisable\"), this);\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\n//----TweenLite static methods -----------------------------------------------------\n\n\t\tTweenLite.to = function(target, duration, vars) {\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.from = function(target, duration, vars) {\n\t\t\tvars.runBackwards = true;\n\t\t\tvars.immediateRender = (vars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, vars);\n\t\t};\n\n\t\tTweenLite.fromTo = function(target, duration, fromVars, toVars) {\n\t\t\ttoVars.startAt = fromVars;\n\t\t\ttoVars.immediateRender = (toVars.immediateRender != false && fromVars.immediateRender != false);\n\t\t\treturn new TweenLite(target, duration, toVars);\n\t\t};\n\n\t\tTweenLite.delayedCall = function(delay, callback, params, scope, useFrames) {\n\t\t\treturn new TweenLite(callback, 0, {delay:delay, onComplete:callback, onCompleteParams:params, callbackScope:scope, onReverseComplete:callback, onReverseCompleteParams:params, immediateRender:false, lazy:false, useFrames:useFrames, overwrite:0});\n\t\t};\n\n\t\tTweenLite.set = function(target, vars) {\n\t\t\treturn new TweenLite(target, 0, vars);\n\t\t};\n\n\t\tTweenLite.getTweensOf = function(target, onlyActive) {\n\t\t\tif (target == null) { return []; }\n\t\t\ttarget = (typeof(target) !== \"string\") ? target : TweenLite.selector(target) || target;\n\t\t\tvar i, a, j, t;\n\t\t\tif ((_isArray(target) || _isSelector(target)) && typeof(target[0]) !== \"number\") {\n\t\t\t\ti = target.length;\n\t\t\t\ta = [];\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\ta = a.concat(TweenLite.getTweensOf(target[i], onlyActive));\n\t\t\t\t}\n\t\t\t\ti = a.length;\n\t\t\t\t//now get rid of any duplicates (tweens of arrays of objects could cause duplicates)\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tt = a[i];\n\t\t\t\t\tj = i;\n\t\t\t\t\twhile (--j > -1) {\n\t\t\t\t\t\tif (t === a[j]) {\n\t\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ta = _register(target).concat();\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (a[i]._gc || (onlyActive && !a[i].isActive())) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn a;\n\t\t};\n\n\t\tTweenLite.killTweensOf = TweenLite.killDelayedCallsTo = function(target, onlyActive, vars) {\n\t\t\tif (typeof(onlyActive) === \"object\") {\n\t\t\t\tvars = onlyActive; //for backwards compatibility (before \"onlyActive\" parameter was inserted)\n\t\t\t\tonlyActive = false;\n\t\t\t}\n\t\t\tvar a = TweenLite.getTweensOf(target, onlyActive),\n\t\t\t\ti = a.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\ta[i]._kill(vars, target);\n\t\t\t}\n\t\t};\n\n\n\n/*\n * ----------------------------------------------------------------\n * TweenPlugin   (could easily be split out as a separate file/class, but included for ease of use (so that people don't need to include another script call before loading plugins which is easy to forget)\n * ----------------------------------------------------------------\n */\n\t\tvar TweenPlugin = _class(\"plugins.TweenPlugin\", function(props, priority) {\n\t\t\t\t\tthis._overwriteProps = (props || \"\").split(\",\");\n\t\t\t\t\tthis._propName = this._overwriteProps[0];\n\t\t\t\t\tthis._priority = priority || 0;\n\t\t\t\t\tthis._super = TweenPlugin.prototype;\n\t\t\t\t}, true);\n\n\t\tp = TweenPlugin.prototype;\n\t\tTweenPlugin.version = \"1.19.0\";\n\t\tTweenPlugin.API = 2;\n\t\tp._firstPT = null;\n\t\tp._addTween = _addPropTween;\n\t\tp.setRatio = _setRatio;\n\n\t\tp._kill = function(lookup) {\n\t\t\tvar a = this._overwriteProps,\n\t\t\t\tpt = this._firstPT,\n\t\t\t\ti;\n\t\t\tif (lookup[this._propName] != null) {\n\t\t\t\tthis._overwriteProps = [];\n\t\t\t} else {\n\t\t\t\ti = a.length;\n\t\t\t\twhile (--i > -1) {\n\t\t\t\t\tif (lookup[a[i]] != null) {\n\t\t\t\t\t\ta.splice(i, 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (lookup[pt.n] != null) {\n\t\t\t\t\tif (pt._next) {\n\t\t\t\t\t\tpt._next._prev = pt._prev;\n\t\t\t\t\t}\n\t\t\t\t\tif (pt._prev) {\n\t\t\t\t\t\tpt._prev._next = pt._next;\n\t\t\t\t\t\tpt._prev = null;\n\t\t\t\t\t} else if (this._firstPT === pt) {\n\t\t\t\t\t\tthis._firstPT = pt._next;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t\tp._mod = p._roundProps = function(lookup) {\n\t\t\tvar pt = this._firstPT,\n\t\t\t\tval;\n\t\t\twhile (pt) {\n\t\t\t\tval = lookup[this._propName] || (pt.n != null && lookup[ pt.n.split(this._propName + \"_\").join(\"\") ]);\n\t\t\t\tif (val && typeof(val) === \"function\") { //some properties that are very plugin-specific add a prefix named after the _propName plus an underscore, so we need to ignore that extra stuff here.\n\t\t\t\t\tif (pt.f === 2) {\n\t\t\t\t\t\tpt.t._applyPT.m = val;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpt.m = val;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t};\n\n\t\tTweenLite._onPluginEvent = function(type, tween) {\n\t\t\tvar pt = tween._firstPT,\n\t\t\t\tchanged, pt2, first, last, next;\n\t\t\tif (type === \"_onInitAllProps\") {\n\t\t\t\t//sorts the PropTween linked list in order of priority because some plugins need to render earlier/later than others, like MotionBlurPlugin applies its effects after all x/y/alpha tweens have rendered on each frame.\n\t\t\t\twhile (pt) {\n\t\t\t\t\tnext = pt._next;\n\t\t\t\t\tpt2 = first;\n\t\t\t\t\twhile (pt2 && pt2.pr > pt.pr) {\n\t\t\t\t\t\tpt2 = pt2._next;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._prev = pt2 ? pt2._prev : last)) {\n\t\t\t\t\t\tpt._prev._next = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfirst = pt;\n\t\t\t\t\t}\n\t\t\t\t\tif ((pt._next = pt2)) {\n\t\t\t\t\t\tpt2._prev = pt;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlast = pt;\n\t\t\t\t\t}\n\t\t\t\t\tpt = next;\n\t\t\t\t}\n\t\t\t\tpt = tween._firstPT = first;\n\t\t\t}\n\t\t\twhile (pt) {\n\t\t\t\tif (pt.pg) if (typeof(pt.t[type]) === \"function\") if (pt.t[type]()) {\n\t\t\t\t\tchanged = true;\n\t\t\t\t}\n\t\t\t\tpt = pt._next;\n\t\t\t}\n\t\t\treturn changed;\n\t\t};\n\n\t\tTweenPlugin.activate = function(plugins) {\n\t\t\tvar i = plugins.length;\n\t\t\twhile (--i > -1) {\n\t\t\t\tif (plugins[i].API === TweenPlugin.API) {\n\t\t\t\t\t_plugins[(new plugins[i]())._propName] = plugins[i];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\n\t\t//provides a more concise way to define plugins that have no dependencies besides TweenPlugin and TweenLite, wrapping common boilerplate stuff into one function (added in 1.9.0). You don't NEED to use this to define a plugin - the old way still works and can be useful in certain (rare) situations.\n\t\t_gsDefine.plugin = function(config) {\n\t\t\tif (!config || !config.propName || !config.init || !config.API) { throw \"illegal plugin definition.\"; }\n\t\t\tvar propName = config.propName,\n\t\t\t\tpriority = config.priority || 0,\n\t\t\t\toverwriteProps = config.overwriteProps,\n\t\t\t\tmap = {init:\"_onInitTween\", set:\"setRatio\", kill:\"_kill\", round:\"_mod\", mod:\"_mod\", initAll:\"_onInitAllProps\"},\n\t\t\t\tPlugin = _class(\"plugins.\" + propName.charAt(0).toUpperCase() + propName.substr(1) + \"Plugin\",\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\tTweenPlugin.call(this, propName, priority);\n\t\t\t\t\t\tthis._overwriteProps = overwriteProps || [];\n\t\t\t\t\t}, (config.global === true)),\n\t\t\t\tp = Plugin.prototype = new TweenPlugin(propName),\n\t\t\t\tprop;\n\t\t\tp.constructor = Plugin;\n\t\t\tPlugin.API = config.API;\n\t\t\tfor (prop in map) {\n\t\t\t\tif (typeof(config[prop]) === \"function\") {\n\t\t\t\t\tp[map[prop]] = config[prop];\n\t\t\t\t}\n\t\t\t}\n\t\t\tPlugin.version = config.version;\n\t\t\tTweenPlugin.activate([Plugin]);\n\t\t\treturn Plugin;\n\t\t};\n\n\n\t\t//now run through all the dependencies discovered and if any are missing, log that to the console as a warning. This is why it's best to have TweenLite load last - it can check all the dependencies for you.\n\t\ta = window._gsQueue;\n\t\tif (a) {\n\t\t\tfor (i = 0; i < a.length; i++) {\n\t\t\t\ta[i]();\n\t\t\t}\n\t\t\tfor (p in _defLookup) {\n\t\t\t\tif (!_defLookup[p].func) {\n\t\t\t\t\twindow.console.log(\"GSAP encountered missing dependency: \" + p);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_tickerActive = false; //ensures that the first official animation forces a ticker.tick() to update the time when it is instantiated\n\n})((typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || window, \"TweenLite\");","/*!\n * VERSION: 1.15.5\n * DATE: 2017-01-17\n * UPDATES AND DOCS AT: http://greensock.com\n *\n * @license Copyright (c) 2008-2017, GreenSock. All rights reserved.\n * This work is subject to the terms at http://greensock.com/standard-license or for\n * Club GreenSock members, the software agreement that was issued with your membership.\n * \n * @author: Jack Doyle, jack@greensock.com\n **/\nvar _gsScope = (typeof(module) !== \"undefined\" && module.exports && typeof(global) !== \"undefined\") ? global : this || window; //helps ensure compatibility with AMD/RequireJS and CommonJS/Node\n(_gsScope._gsQueue || (_gsScope._gsQueue = [])).push( function() {\n\n\t\"use strict\";\n\n\t_gsScope._gsDefine(\"easing.Back\", [\"easing.Ease\"], function(Ease) {\n\t\t\n\t\tvar w = (_gsScope.GreenSockGlobals || _gsScope),\n\t\t\tgs = w.com.greensock,\n\t\t\t_2PI = Math.PI * 2,\n\t\t\t_HALF_PI = Math.PI / 2,\n\t\t\t_class = gs._class,\n\t\t\t_create = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(){}, true),\n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\t_easeReg = Ease.register || function(){}, //put an empty function in place just as a safety measure in case someone loads an OLD version of TweenLite.js where Ease.register doesn't exist.\n\t\t\t_wrap = function(name, EaseOut, EaseIn, EaseInOut, aliases) {\n\t\t\t\tvar C = _class(\"easing.\"+name, {\n\t\t\t\t\teaseOut:new EaseOut(),\n\t\t\t\t\teaseIn:new EaseIn(),\n\t\t\t\t\teaseInOut:new EaseInOut()\n\t\t\t\t}, true);\n\t\t\t\t_easeReg(C, name);\n\t\t\t\treturn C;\n\t\t\t},\n\t\t\tEasePoint = function(time, value, next) {\n\t\t\t\tthis.t = time;\n\t\t\t\tthis.v = value;\n\t\t\t\tif (next) {\n\t\t\t\t\tthis.next = next;\n\t\t\t\t\tnext.prev = this;\n\t\t\t\t\tthis.c = next.v - value;\n\t\t\t\t\tthis.gap = next.t - time;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t//Back\n\t\t\t_createBack = function(n, f) {\n\t\t\t\tvar C = _class(\"easing.\" + n, function(overshoot) {\n\t\t\t\t\t\tthis._p1 = (overshoot || overshoot === 0) ? overshoot : 1.70158;\n\t\t\t\t\t\tthis._p2 = this._p1 * 1.525;\n\t\t\t\t\t}, true), \n\t\t\t\t\tp = C.prototype = new Ease();\n\t\t\t\tp.constructor = C;\n\t\t\t\tp.getRatio = f;\n\t\t\t\tp.config = function(overshoot) {\n\t\t\t\t\treturn new C(overshoot);\n\t\t\t\t};\n\t\t\t\treturn C;\n\t\t\t},\n\n\t\t\tBack = _wrap(\"Back\",\n\t\t\t\t_createBack(\"BackOut\", function(p) {\n\t\t\t\t\treturn ((p = p - 1) * p * ((this._p1 + 1) * p + this._p1) + 1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackIn\", function(p) {\n\t\t\t\t\treturn p * p * ((this._p1 + 1) * p - this._p1);\n\t\t\t\t}),\n\t\t\t\t_createBack(\"BackInOut\", function(p) {\n\t\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * p * p * ((this._p2 + 1) * p - this._p2) : 0.5 * ((p -= 2) * p * ((this._p2 + 1) * p + this._p2) + 2);\n\t\t\t\t})\n\t\t\t),\n\n\n\t\t\t//SlowMo\n\t\t\tSlowMo = _class(\"easing.SlowMo\", function(linearRatio, power, yoyoMode) {\n\t\t\t\tpower = (power || power === 0) ? power : 0.7;\n\t\t\t\tif (linearRatio == null) {\n\t\t\t\t\tlinearRatio = 0.7;\n\t\t\t\t} else if (linearRatio > 1) {\n\t\t\t\t\tlinearRatio = 1;\n\t\t\t\t}\n\t\t\t\tthis._p = (linearRatio !== 1) ? power : 0;\n\t\t\t\tthis._p1 = (1 - linearRatio) / 2;\n\t\t\t\tthis._p2 = linearRatio;\n\t\t\t\tthis._p3 = this._p1 + this._p2;\n\t\t\t\tthis._calcEnd = (yoyoMode === true);\n\t\t\t}, true),\n\t\t\tp = SlowMo.prototype = new Ease(),\n\t\t\tSteppedEase, RoughEase, _createElastic;\n\t\t\t\n\t\tp.constructor = SlowMo;\n\t\tp.getRatio = function(p) {\n\t\t\tvar r = p + (0.5 - p) * this._p;\n\t\t\tif (p < this._p1) {\n\t\t\t\treturn this._calcEnd ? 1 - ((p = 1 - (p / this._p1)) * p) : r - ((p = 1 - (p / this._p1)) * p * p * p * r);\n\t\t\t} else if (p > this._p3) {\n\t\t\t\treturn this._calcEnd ? 1 - (p = (p - this._p3) / this._p1) * p : r + ((p - r) * (p = (p - this._p3) / this._p1) * p * p * p);\n\t\t\t}\n\t\t\treturn this._calcEnd ? 1 : r;\n\t\t};\n\t\tSlowMo.ease = new SlowMo(0.7, 0.7);\n\t\t\n\t\tp.config = SlowMo.config = function(linearRatio, power, yoyoMode) {\n\t\t\treturn new SlowMo(linearRatio, power, yoyoMode);\n\t\t};\n\n\n\t\t//SteppedEase\n\t\tSteppedEase = _class(\"easing.SteppedEase\", function(steps) {\n\t\t\t\tsteps = steps || 1;\n\t\t\t\tthis._p1 = 1 / steps;\n\t\t\t\tthis._p2 = steps + 1;\n\t\t\t}, true);\n\t\tp = SteppedEase.prototype = new Ease();\t\n\t\tp.constructor = SteppedEase;\n\t\tp.getRatio = function(p) {\n\t\t\tif (p < 0) {\n\t\t\t\tp = 0;\n\t\t\t} else if (p >= 1) {\n\t\t\t\tp = 0.999999999;\n\t\t\t}\n\t\t\treturn ((this._p2 * p) >> 0) * this._p1;\n\t\t};\n\t\tp.config = SteppedEase.config = function(steps) {\n\t\t\treturn new SteppedEase(steps);\n\t\t};\n\n\n\t\t//RoughEase\n\t\tRoughEase = _class(\"easing.RoughEase\", function(vars) {\n\t\t\tvars = vars || {};\n\t\t\tvar taper = vars.taper || \"none\",\n\t\t\t\ta = [],\n\t\t\t\tcnt = 0,\n\t\t\t\tpoints = (vars.points || 20) | 0,\n\t\t\t\ti = points,\n\t\t\t\trandomize = (vars.randomize !== false),\n\t\t\t\tclamp = (vars.clamp === true),\n\t\t\t\ttemplate = (vars.template instanceof Ease) ? vars.template : null,\n\t\t\t\tstrength = (typeof(vars.strength) === \"number\") ? vars.strength * 0.4 : 0.4,\n\t\t\t\tx, y, bump, invX, obj, pnt;\n\t\t\twhile (--i > -1) {\n\t\t\t\tx = randomize ? Math.random() : (1 / points) * i;\n\t\t\t\ty = template ? template.getRatio(x) : x;\n\t\t\t\tif (taper === \"none\") {\n\t\t\t\t\tbump = strength;\n\t\t\t\t} else if (taper === \"out\") {\n\t\t\t\t\tinvX = 1 - x;\n\t\t\t\t\tbump = invX * invX * strength;\n\t\t\t\t} else if (taper === \"in\") {\n\t\t\t\t\tbump = x * x * strength;\n\t\t\t\t} else if (x < 0.5) {  //\"both\" (start)\n\t\t\t\t\tinvX = x * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t} else {\t\t\t\t//\"both\" (end)\n\t\t\t\t\tinvX = (1 - x) * 2;\n\t\t\t\t\tbump = invX * invX * 0.5 * strength;\n\t\t\t\t}\n\t\t\t\tif (randomize) {\n\t\t\t\t\ty += (Math.random() * bump) - (bump * 0.5);\n\t\t\t\t} else if (i % 2) {\n\t\t\t\t\ty += bump * 0.5;\n\t\t\t\t} else {\n\t\t\t\t\ty -= bump * 0.5;\n\t\t\t\t}\n\t\t\t\tif (clamp) {\n\t\t\t\t\tif (y > 1) {\n\t\t\t\t\t\ty = 1;\n\t\t\t\t\t} else if (y < 0) {\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ta[cnt++] = {x:x, y:y};\n\t\t\t}\n\t\t\ta.sort(function(a, b) {\n\t\t\t\treturn a.x - b.x;\n\t\t\t});\n\n\t\t\tpnt = new EasePoint(1, 1, null);\n\t\t\ti = points;\n\t\t\twhile (--i > -1) {\n\t\t\t\tobj = a[i];\n\t\t\t\tpnt = new EasePoint(obj.x, obj.y, pnt);\n\t\t\t}\n\n\t\t\tthis._prev = new EasePoint(0, 0, (pnt.t !== 0) ? pnt : pnt.next);\n\t\t}, true);\n\t\tp = RoughEase.prototype = new Ease();\n\t\tp.constructor = RoughEase;\n\t\tp.getRatio = function(p) {\n\t\t\tvar pnt = this._prev;\n\t\t\tif (p > pnt.t) {\n\t\t\t\twhile (pnt.next && p >= pnt.t) {\n\t\t\t\t\tpnt = pnt.next;\n\t\t\t\t}\n\t\t\t\tpnt = pnt.prev;\n\t\t\t} else {\n\t\t\t\twhile (pnt.prev && p <= pnt.t) {\n\t\t\t\t\tpnt = pnt.prev;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._prev = pnt;\n\t\t\treturn (pnt.v + ((p - pnt.t) / pnt.gap) * pnt.c);\n\t\t};\n\t\tp.config = function(vars) {\n\t\t\treturn new RoughEase(vars);\n\t\t};\n\t\tRoughEase.ease = new RoughEase();\n\n\n\t\t//Bounce\n\t\t_wrap(\"Bounce\",\n\t\t\t_create(\"BounceOut\", function(p) {\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\treturn 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t}\n\t\t\t\treturn 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t}),\n\t\t\t_create(\"BounceIn\", function(p) {\n\t\t\t\tif ((p = 1 - p) < 1 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * p * p);\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 1.5 / 2.75) * p + 0.75);\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\treturn 1 - (7.5625 * (p -= 2.25 / 2.75) * p + 0.9375);\n\t\t\t\t}\n\t\t\t\treturn 1 - (7.5625 * (p -= 2.625 / 2.75) * p + 0.984375);\n\t\t\t}),\n\t\t\t_create(\"BounceInOut\", function(p) {\n\t\t\t\tvar invert = (p < 0.5);\n\t\t\t\tif (invert) {\n\t\t\t\t\tp = 1 - (p * 2);\n\t\t\t\t} else {\n\t\t\t\t\tp = (p * 2) - 1;\n\t\t\t\t}\n\t\t\t\tif (p < 1 / 2.75) {\n\t\t\t\t\tp = 7.5625 * p * p;\n\t\t\t\t} else if (p < 2 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 1.5 / 2.75) * p + 0.75;\n\t\t\t\t} else if (p < 2.5 / 2.75) {\n\t\t\t\t\tp = 7.5625 * (p -= 2.25 / 2.75) * p + 0.9375;\n\t\t\t\t} else {\n\t\t\t\t\tp = 7.5625 * (p -= 2.625 / 2.75) * p + 0.984375;\n\t\t\t\t}\n\t\t\t\treturn invert ? (1 - p) * 0.5 : p * 0.5 + 0.5;\n\t\t\t})\n\t\t);\n\n\n\t\t//CIRC\n\t\t_wrap(\"Circ\",\n\t\t\t_create(\"CircOut\", function(p) {\n\t\t\t\treturn Math.sqrt(1 - (p = p - 1) * p);\n\t\t\t}),\n\t\t\t_create(\"CircIn\", function(p) {\n\t\t\t\treturn -(Math.sqrt(1 - (p * p)) - 1);\n\t\t\t}),\n\t\t\t_create(\"CircInOut\", function(p) {\n\t\t\t\treturn ((p*=2) < 1) ? -0.5 * (Math.sqrt(1 - p * p) - 1) : 0.5 * (Math.sqrt(1 - (p -= 2) * p) + 1);\n\t\t\t})\n\t\t);\n\n\n\t\t//Elastic\n\t\t_createElastic = function(n, f, def) {\n\t\t\tvar C = _class(\"easing.\" + n, function(amplitude, period) {\n\t\t\t\t\tthis._p1 = (amplitude >= 1) ? amplitude : 1; //note: if amplitude is < 1, we simply adjust the period for a more natural feel. Otherwise the math doesn't work right and the curve starts at 1.\n\t\t\t\t\tthis._p2 = (period || def) / (amplitude < 1 ? amplitude : 1);\n\t\t\t\t\tthis._p3 = this._p2 / _2PI * (Math.asin(1 / this._p1) || 0);\n\t\t\t\t\tthis._p2 = _2PI / this._p2; //precalculate to optimize\n\t\t\t\t}, true),\n\t\t\t\tp = C.prototype = new Ease();\n\t\t\tp.constructor = C;\n\t\t\tp.getRatio = f;\n\t\t\tp.config = function(amplitude, period) {\n\t\t\t\treturn new C(amplitude, period);\n\t\t\t};\n\t\t\treturn C;\n\t\t};\n\t\t_wrap(\"Elastic\",\n\t\t\t_createElastic(\"ElasticOut\", function(p) {\n\t\t\t\treturn this._p1 * Math.pow(2, -10 * p) * Math.sin( (p - this._p3) * this._p2 ) + 1;\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticIn\", function(p) {\n\t\t\t\treturn -(this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * this._p2 ));\n\t\t\t}, 0.3),\n\t\t\t_createElastic(\"ElasticInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? -0.5 * (this._p1 * Math.pow(2, 10 * (p -= 1)) * Math.sin( (p - this._p3) * this._p2)) : this._p1 * Math.pow(2, -10 *(p -= 1)) * Math.sin( (p - this._p3) * this._p2 ) * 0.5 + 1;\n\t\t\t}, 0.45)\n\t\t);\n\n\n\t\t//Expo\n\t\t_wrap(\"Expo\",\n\t\t\t_create(\"ExpoOut\", function(p) {\n\t\t\t\treturn 1 - Math.pow(2, -10 * p);\n\t\t\t}),\n\t\t\t_create(\"ExpoIn\", function(p) {\n\t\t\t\treturn Math.pow(2, 10 * (p - 1)) - 0.001;\n\t\t\t}),\n\t\t\t_create(\"ExpoInOut\", function(p) {\n\t\t\t\treturn ((p *= 2) < 1) ? 0.5 * Math.pow(2, 10 * (p - 1)) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\t\t\t})\n\t\t);\n\n\n\t\t//Sine\n\t\t_wrap(\"Sine\",\n\t\t\t_create(\"SineOut\", function(p) {\n\t\t\t\treturn Math.sin(p * _HALF_PI);\n\t\t\t}),\n\t\t\t_create(\"SineIn\", function(p) {\n\t\t\t\treturn -Math.cos(p * _HALF_PI) + 1;\n\t\t\t}),\n\t\t\t_create(\"SineInOut\", function(p) {\n\t\t\t\treturn -0.5 * (Math.cos(Math.PI * p) - 1);\n\t\t\t})\n\t\t);\n\n\t\t_class(\"easing.EaseLookup\", {\n\t\t\t\tfind:function(s) {\n\t\t\t\t\treturn Ease.map[s];\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t//register the non-standard eases\n\t\t_easeReg(w.SlowMo, \"SlowMo\", \"ease,\");\n\t\t_easeReg(RoughEase, \"RoughEase\", \"ease,\");\n\t\t_easeReg(SteppedEase, \"SteppedEase\", \"ease,\");\n\t\t\n\t\treturn Back;\n\t\t\n\t}, true);\n\n}); if (_gsScope._gsDefine) { _gsScope._gsQueue.pop()(); }\n\n//export to AMD/RequireJS and CommonJS/Node (precursor to full modular build system coming at a later date)\n(function() {\n\t\"use strict\";\n\tvar getGlobal = function() {\n\t\treturn (_gsScope.GreenSockGlobals || _gsScope);\n\t};\n\tif (typeof(define) === \"function\" && define.amd) { //AMD\n\t\tdefine([\"./TweenLite\"], getGlobal);\n\t} else if (typeof(module) !== \"undefined\" && module.exports) { //node\n\t\trequire(\"./TweenLite.js\");\n\t\tmodule.exports = getGlobal();\n\t}\n}());","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '77' };\r\n\r\n//\r\n\r\nif ( typeof define === 'function' && define.amd ) {\r\n\r\n\tdefine( 'three', THREE );\r\n\r\n} else if ( 'undefined' !== typeof exports && 'undefined' !== typeof module ) {\r\n\r\n\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n// Polyfills\r\n\r\nif ( Number.EPSILON === undefined ) {\r\n\r\n\tNumber.EPSILON = Math.pow( 2, - 52 );\r\n\r\n}\r\n\r\n//\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\r\n\r\n\t};\r\n\r\n}\r\n\r\nif ( Function.prototype.name === undefined ) {\r\n\r\n\t// Missing in IE9-11.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\r\n\r\n\tObject.defineProperty( Function.prototype, 'name', {\r\n\r\n\t\tget: function () {\r\n\r\n\t\t\treturn this.toString().match( /^\\s*function\\s*(\\S*)\\s*\\(/ )[ 1 ];\r\n\r\n\t\t}\r\n\r\n\t} );\r\n\r\n}\r\n\r\nif ( Object.assign === undefined ) {\r\n\r\n\t// Missing in IE.\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\r\n\r\n\t( function () {\r\n\r\n\t\tObject.assign = function ( target ) {\r\n\r\n\t\t\t'use strict';\r\n\r\n\t\t\tif ( target === undefined || target === null ) {\r\n\r\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar output = Object( target );\r\n\r\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\r\n\r\n\t\t\t\tvar source = arguments[ index ];\r\n\r\n\t\t\t\tif ( source !== undefined && source !== null ) {\r\n\r\n\t\t\t\t\tfor ( var nextKey in source ) {\r\n\r\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\r\n\r\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n}\r\n\r\n//\r\n\r\nObject.assign( THREE, {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\n\tMOUSE: { LEFT: 0, MIDDLE: 1, RIGHT: 2 },\r\n\r\n\t// GL STATE CONSTANTS\r\n\r\n\tCullFaceNone: 0,\r\n\tCullFaceBack: 1,\r\n\tCullFaceFront: 2,\r\n\tCullFaceFrontBack: 3,\r\n\r\n\tFrontFaceDirectionCW: 0,\r\n\tFrontFaceDirectionCCW: 1,\r\n\r\n\t// SHADOWING TYPES\r\n\r\n\tBasicShadowMap: 0,\r\n\tPCFShadowMap: 1,\r\n\tPCFSoftShadowMap: 2,\r\n\r\n\t// MATERIAL CONSTANTS\r\n\r\n\t// side\r\n\r\n\tFrontSide: 0,\r\n\tBackSide: 1,\r\n\tDoubleSide: 2,\r\n\r\n\t// shading\r\n\r\n\tFlatShading: 1,\r\n\tSmoothShading: 2,\r\n\r\n\t// colors\r\n\r\n\tNoColors: 0,\r\n\tFaceColors: 1,\r\n\tVertexColors: 2,\r\n\r\n\t// blending modes\r\n\r\n\tNoBlending: 0,\r\n\tNormalBlending: 1,\r\n\tAdditiveBlending: 2,\r\n\tSubtractiveBlending: 3,\r\n\tMultiplyBlending: 4,\r\n\tCustomBlending: 5,\r\n\r\n\t// custom blending equations\r\n\t// (numbers start from 100 not to clash with other\r\n\t// mappings to OpenGL constants defined in Texture.js)\r\n\r\n\tAddEquation: 100,\r\n\tSubtractEquation: 101,\r\n\tReverseSubtractEquation: 102,\r\n\tMinEquation: 103,\r\n\tMaxEquation: 104,\r\n\r\n\t// custom blending destination factors\r\n\r\n\tZeroFactor: 200,\r\n\tOneFactor: 201,\r\n\tSrcColorFactor: 202,\r\n\tOneMinusSrcColorFactor: 203,\r\n\tSrcAlphaFactor: 204,\r\n\tOneMinusSrcAlphaFactor: 205,\r\n\tDstAlphaFactor: 206,\r\n\tOneMinusDstAlphaFactor: 207,\r\n\r\n\t// custom blending source factors\r\n\r\n\t//ZeroFactor: 200,\r\n\t//OneFactor: 201,\r\n\t//SrcAlphaFactor: 204,\r\n\t//OneMinusSrcAlphaFactor: 205,\r\n\t//DstAlphaFactor: 206,\r\n\t//OneMinusDstAlphaFactor: 207,\r\n\tDstColorFactor: 208,\r\n\tOneMinusDstColorFactor: 209,\r\n\tSrcAlphaSaturateFactor: 210,\r\n\r\n\t// depth modes\r\n\r\n\tNeverDepth: 0,\r\n\tAlwaysDepth: 1,\r\n\tLessDepth: 2,\r\n\tLessEqualDepth: 3,\r\n\tEqualDepth: 4,\r\n\tGreaterEqualDepth: 5,\r\n\tGreaterDepth: 6,\r\n\tNotEqualDepth: 7,\r\n\r\n\r\n\t// TEXTURE CONSTANTS\r\n\r\n\tMultiplyOperation: 0,\r\n\tMixOperation: 1,\r\n\tAddOperation: 2,\r\n\r\n\t// Tone Mapping modes\r\n\r\n\tNoToneMapping: 0, // do not do any tone mapping, not even exposure (required for special purpose passes.)\r\n\tLinearToneMapping: 1, // only apply exposure.\r\n\tReinhardToneMapping: 2,\r\n\tUncharted2ToneMapping: 3, // John Hable\r\n\tCineonToneMapping: 4, // optimized filmic operator by Jim Hejl and Richard Burgess-Dawson\r\n\r\n\t// Mapping modes\r\n\r\n\tUVMapping: 300,\r\n\r\n\tCubeReflectionMapping: 301,\r\n\tCubeRefractionMapping: 302,\r\n\r\n\tEquirectangularReflectionMapping: 303,\r\n\tEquirectangularRefractionMapping: 304,\r\n\r\n\tSphericalReflectionMapping: 305,\r\n\tCubeUVReflectionMapping: 306,\r\n\tCubeUVRefractionMapping: 307,\r\n\r\n\t// Wrapping modes\r\n\r\n\tRepeatWrapping: 1000,\r\n\tClampToEdgeWrapping: 1001,\r\n\tMirroredRepeatWrapping: 1002,\r\n\r\n\t// Filters\r\n\r\n\tNearestFilter: 1003,\r\n\tNearestMipMapNearestFilter: 1004,\r\n\tNearestMipMapLinearFilter: 1005,\r\n\tLinearFilter: 1006,\r\n\tLinearMipMapNearestFilter: 1007,\r\n\tLinearMipMapLinearFilter: 1008,\r\n\r\n\t// Data types\r\n\r\n\tUnsignedByteType: 1009,\r\n\tByteType: 1010,\r\n\tShortType: 1011,\r\n\tUnsignedShortType: 1012,\r\n\tIntType: 1013,\r\n\tUnsignedIntType: 1014,\r\n\tFloatType: 1015,\r\n\tHalfFloatType: 1025,\r\n\r\n\t// Pixel types\r\n\r\n\t//UnsignedByteType: 1009,\r\n\tUnsignedShort4444Type: 1016,\r\n\tUnsignedShort5551Type: 1017,\r\n\tUnsignedShort565Type: 1018,\r\n\r\n\t// Pixel formats\r\n\r\n\tAlphaFormat: 1019,\r\n\tRGBFormat: 1020,\r\n\tRGBAFormat: 1021,\r\n\tLuminanceFormat: 1022,\r\n\tLuminanceAlphaFormat: 1023,\r\n\t// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\n\tRGBEFormat: THREE.RGBAFormat, //1024;\r\n\tDepthFormat: 1026,\r\n\r\n\t// DDS / ST3C Compressed texture formats\r\n\r\n\tRGB_S3TC_DXT1_Format: 2001,\r\n\tRGBA_S3TC_DXT1_Format: 2002,\r\n\tRGBA_S3TC_DXT3_Format: 2003,\r\n\tRGBA_S3TC_DXT5_Format: 2004,\r\n\r\n\t// PVRTC compressed texture formats\r\n\r\n\tRGB_PVRTC_4BPPV1_Format: 2100,\r\n\tRGB_PVRTC_2BPPV1_Format: 2101,\r\n\tRGBA_PVRTC_4BPPV1_Format: 2102,\r\n\tRGBA_PVRTC_2BPPV1_Format: 2103,\r\n\r\n\t// ETC compressed texture formats\r\n\r\n\tRGB_ETC1_Format: 2151,\r\n\r\n\t// Loop styles for AnimationAction\r\n\r\n\tLoopOnce: 2200,\r\n\tLoopRepeat: 2201,\r\n\tLoopPingPong: 2202,\r\n\r\n\t// Interpolation\r\n\r\n\tInterpolateDiscrete: 2300,\r\n\tInterpolateLinear: 2301,\r\n\tInterpolateSmooth: 2302,\r\n\r\n\t// Interpolant ending modes\r\n\r\n\tZeroCurvatureEnding: 2400,\r\n\tZeroSlopeEnding: 2401,\r\n\tWrapAroundEnding: 2402,\r\n\r\n\t// Triangle Draw modes\r\n\r\n\tTrianglesDrawMode: 0,\r\n\tTriangleStripDrawMode: 1,\r\n\tTriangleFanDrawMode: 2,\r\n\r\n\t// Texture Encodings\r\n\r\n\tLinearEncoding: 3000, // No encoding at all.\r\n\tsRGBEncoding: 3001,\r\n\tGammaEncoding: 3007, // uses GAMMA_FACTOR, for backwards compatibility with WebGLRenderer.gammaInput/gammaOutput\r\n\r\n\t// The following Texture Encodings are for RGB-only (no alpha) HDR light emission sources.\r\n\t// These encodings should not specified as output encodings except in rare situations.\r\n\tRGBEEncoding: 3002, // AKA Radiance.\r\n\tLogLuvEncoding: 3003,\r\n\tRGBM7Encoding: 3004,\r\n\tRGBM16Encoding: 3005,\r\n\tRGBDEncoding: 3006, // MaxRange is 256.\r\n\r\n\t// Depth packing strategies\r\n\r\n\tBasicDepthPacking: 3200, // for writing to float textures for high precision or for visualizing results in RGB buffers\r\n\tRGBADepthPacking: 3201 // for packing into RGBA buffers.\r\n\r\n} );\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( r, g, b ) {\r\n\r\n\tif ( g === undefined && b === undefined ) {\r\n\r\n\t\t// r is THREE.Color, hex or string\r\n\t\treturn this.set( r );\r\n\r\n\t}\r\n\r\n\treturn this.setRGB( r, g, b );\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.r = scalar;\r\n\t\tthis.g = scalar;\r\n\t\tthis.b = scalar;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function () {\r\n\r\n\t\tfunction hue2rgb( p, q, t ) {\r\n\r\n\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\treturn p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( h, s, l ) {\r\n\r\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\t\t\th = THREE.Math.euclideanModulo( h, 1 );\r\n\t\t\ts = THREE.Math.clamp( s, 0, 1 );\r\n\t\t\tl = THREE.Math.clamp( l, 0, 1 );\r\n\r\n\t\t\tif ( s === 0 ) {\r\n\r\n\t\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\tfunction handleAlpha( string ) {\r\n\r\n\t\t\tif ( string === undefined ) return;\r\n\r\n\t\t\tif ( parseFloat( string ) < 1 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar m;\r\n\r\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\r\n\r\n\t\t\t// rgb / hsl\r\n\r\n\t\t\tvar color;\r\n\t\t\tvar name = m[ 1 ];\r\n\t\t\tvar components = m[ 2 ];\r\n\r\n\t\t\tswitch ( name ) {\r\n\r\n\t\t\t\tcase 'rgb':\r\n\t\t\t\tcase 'rgba':\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\r\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'hsl':\r\n\t\t\t\tcase 'hsla':\r\n\r\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\r\n\r\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\r\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\r\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\r\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\r\n\r\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\r\n\r\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\r\n\r\n\t\t\t// hex color\r\n\r\n\t\t\tvar hex = m[ 1 ];\r\n\t\t\tvar size = hex.length;\r\n\r\n\t\t\tif ( size === 3 ) {\r\n\r\n\t\t\t\t// #ff0\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t} else if ( size === 6 ) {\r\n\r\n\t\t\t\t// #ff0000\r\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\r\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\r\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\r\n\r\n\t\t\t\treturn this;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( style && style.length > 0 ) {\r\n\r\n\t\t\t// color keywords\r\n\t\t\tvar hex = THREE.ColorKeywords[ style ];\r\n\r\n\t\t\tif ( hex !== undefined ) {\r\n\r\n\t\t\t\t// red\r\n\t\t\t\tthis.setHex( hex );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// unknown color\r\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.r, this.g, this.b );\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.r = array[ offset ];\r\n\t\tthis.g = array[ offset + 1 ];\r\n\t\tthis.b = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tvar order = euler.order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\treturn this.normalize();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\treturn this.conjugate().normalize();\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tpremultiply: function ( q ) {\r\n\r\n\t\treturn this.multiplyQuaternions( q, this );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\nObject.assign( THREE.Quaternion, {\r\n\r\n\tslerp: function( qa, qb, qm, t ) {\r\n\r\n\t\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n\t},\r\n\r\n\tslerpFlat: function(\r\n\t\t\tdst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\r\n\r\n\t\t// fuzz-free, array-based Quaternion SLERP operation\r\n\r\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\r\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\r\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\r\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\r\n\r\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\r\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\r\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\r\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\r\n\r\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\r\n\r\n\t\t\tvar s = 1 - t,\r\n\r\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\r\n\r\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\r\n\t\t\t\tsqrSin = 1 - cos * cos;\r\n\r\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\r\n\t\t\tif ( sqrSin > Number.EPSILON ) {\r\n\r\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\r\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\r\n\r\n\t\t\t\ts = Math.sin( s * len ) / sin;\r\n\t\t\t\tt = Math.sin( t * len ) / sin;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar tDir = t * dir;\r\n\r\n\t\t\tx0 = x0 * s + x1 * tDir;\r\n\t\t\ty0 = y0 * s + y1 * tDir;\r\n\t\t\tz0 = z0 * s + z1 * tDir;\r\n\t\t\tw0 = w0 * s + w1 * tDir;\r\n\r\n\t\t\t// Normalize in case we just did a lerp:\r\n\t\t\tif ( s === 1 - t ) {\r\n\r\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\r\n\r\n\t\t\t\tx0 *= f;\r\n\t\t\t\ty0 *= f;\r\n\t\t\t\tz0 *= f;\r\n\t\t\t\tw0 *= f;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdst[ dstOffset ] = x0;\r\n\t\tdst[ dstOffset + 1 ] = y0;\r\n\t\tdst[ dstOffset + 2 ] = z0;\r\n\t\tdst[ dstOffset + 3 ] = w0;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tget width() {\r\n\r\n\t\treturn this.x;\r\n\r\n\t},\r\n\r\n\tset width( value ) {\r\n\r\n\t\tthis.x = value;\r\n\r\n\t},\r\n\r\n\tget height() {\r\n\r\n\t\treturn this.y;\r\n\r\n\t},\r\n\r\n\tset height( value ) {\r\n\r\n\t\tthis.y = value;\r\n\r\n\t},\r\n\r\n\t//\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function() {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tangle: function () {\r\n\r\n\t\t// computes the angle in radians with respect to the positive x-axis\r\n\r\n\t\tvar angle = Math.atan2( this.y, this.x );\r\n\r\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\r\n\r\n\t\treturn angle;\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateAround: function ( center, angle ) {\r\n\r\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\r\n\r\n\t\tvar x = this.x - center.x;\r\n\t\tvar y = this.y - center.y;\r\n\r\n\t\tthis.x = x * c - y * s + center.x;\r\n\t\tthis.y = x * s + y * c + center.y;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyEuler( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function applyAxisAngle( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function project( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function unproject( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\treturn this.normalize();\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclampLength: function ( min, max ) {\r\n\r\n\t\tvar length = this.length();\r\n\r\n\t\treturn this.multiplyScalar( Math.max( min, Math.min( max, length ) ) / length );\r\n\r\n\t},\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function projectOnVector( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function projectOnPlane( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function reflect( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetFromSpherical: function( s ) {\r\n\r\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\r\n\r\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\r\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\r\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\treturn this.setFromMatrixColumn( m, 3 );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\r\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\r\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( m, index ) {\r\n\r\n\t\tif ( typeof m === 'number' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).' );\r\n\t\t\tvar temp = m\r\n\t\t\tm = index;\r\n\t\t\tindex = temp;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.fromArray( m.elements, index * 4 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetScalar: function ( scalar ) {\r\n\r\n\t\tthis.x = scalar;\r\n\t\tthis.y = scalar;\r\n\t\tthis.z = scalar;\r\n\t\tthis.w = scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScaledVector: function ( v, s ) {\r\n\r\n\t\tthis.x += v.x * s;\r\n\t\tthis.y += v.y * s;\r\n\t\tthis.z += v.z * s;\r\n\t\tthis.w += v.w * s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tif ( isFinite( scalar ) ) {\r\n\r\n\t\t\tthis.x *= scalar;\r\n\t\t\tthis.y *= scalar;\r\n\t\t\tthis.z *= scalar;\r\n\t\t\tthis.w *= scalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\treturn this.multiplyScalar( 1 / scalar );\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\r\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\r\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\r\n\r\n\t\t\t\t// m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) {\r\n\r\n\t\t\t\t// m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\r\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\r\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tthis.x = Math.min( this.x, v.x );\r\n\t\tthis.y = Math.min( this.y, v.y );\r\n\t\tthis.z = Math.min( this.z, v.z );\r\n\t\tthis.w = Math.min( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tthis.x = Math.max( this.x, v.x );\r\n\t\tthis.y = Math.max( this.y, v.y );\r\n\t\tthis.z = Math.max( this.z, v.z );\r\n\t\tthis.w = Math.max( this.w, v.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\r\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\r\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\r\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function clampScalar( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( length ) {\r\n\r\n\t\treturn this.multiplyScalar( length / this.length() );\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\r\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\t\r\n\t\t\treturn this.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( + Infinity, + Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = + Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tisEmpty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( + Infinity, + Infinity, + Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromArray: function ( array ) {\r\n\r\n\t\tvar minX = + Infinity;\r\n\t\tvar minY = + Infinity;\r\n\t\tvar minZ = + Infinity;\r\n\r\n\t\tvar maxX = - Infinity;\r\n\t\tvar maxY = - Infinity;\r\n\t\tvar maxZ = - Infinity;\r\n\r\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\tvar x = array[ i ];\r\n\t\t\tvar y = array[ i + 1 ];\r\n\t\t\tvar z = array[ i + 2 ];\r\n\r\n\t\t\tif ( x < minX ) minX = x;\r\n\t\t\tif ( y < minY ) minY = y;\r\n\t\t\tif ( z < minZ ) minZ = z;\r\n\r\n\t\t\tif ( x > maxX ) maxX = x;\r\n\t\t\tif ( y > maxY ) maxY = y;\r\n\t\t\tif ( z > maxZ ) maxZ = z;\r\n\r\n\t\t}\r\n\r\n\t\tthis.min.set( minX, minY, minZ );\r\n\t\tthis.max.set( maxX, maxY, maxZ );\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and children's, world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.fromArray( positions, i );\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tisEmpty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t\t\t point.y < this.min.y || point.y > this.max.y ||\r\n\t\t\t\t point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t\t\t box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t\t\t box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsSphere: ( function () {\r\n\r\n\t\tvar closestPoint;\r\n\r\n\t\treturn function intersectsSphere( sphere ) {\r\n\r\n\t\t\tif ( closestPoint === undefined ) closestPoint = new THREE.Vector3();\r\n\r\n\t\t\t// Find the point on the AABB closest to the sphere center.\r\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\r\n\r\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\r\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// We compute the minimum and maximum dot product values. If those values\r\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\r\n\r\n\t\tvar min, max;\r\n\r\n\t\tif ( plane.normal.x > 0 ) {\r\n\r\n\t\t\tmin = plane.normal.x * this.min.x;\r\n\t\t\tmax = plane.normal.x * this.max.x;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin = plane.normal.x * this.max.x;\r\n\t\t\tmax = plane.normal.x * this.min.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.y > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.y * this.min.y;\r\n\t\t\tmax += plane.normal.y * this.max.y;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.y * this.max.y;\r\n\t\t\tmax += plane.normal.y * this.min.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( plane.normal.z > 0 ) {\r\n\r\n\t\t\tmin += plane.normal.z * this.min.z;\r\n\t\t\tmax += plane.normal.z * this.max.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmin += plane.normal.z * this.max.z;\r\n\t\t\tmax += plane.normal.z * this.min.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn ( min <= plane.constant && max >= plane.constant );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\r\n\t\tif( this.isEmpty() ) this.makeEmpty();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// transform of empty box is an empty box.\r\n\t\t\tif( this.isEmpty() ) return this;\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\r\n\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://clara.io\r\n * @author tschw\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\r\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\r\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix4: function( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 4 ], me[  8 ],\r\n\t\t\tme[ 1 ], me[ 5 ], me[  9 ],\r\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\r\n\r\n\t\tif ( matrix instanceof THREE.Matrix4 ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Matrix3.getInverse no longer takes a Matrix4 argument.\" );\r\n\r\n\t\t}\r\n\r\n\t\tvar me = matrix.elements,\r\n\t\t\tte = this.elements,\r\n\r\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\r\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\r\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\r\n\r\n\t\t\tt11 = n33 * n22 - n32 * n23,\r\n\t\t\tt12 = n32 * n13 - n33 * n12,\r\n\t\t\tt13 = n23 * n12 - n22 * n13,\r\n\r\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnDegenerate || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.identity();\r\n\t\t}\r\n\t\t\r\n\t\tvar detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\r\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\r\n\r\n\t\tte[ 3 ] = t12 * detInv;\r\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\r\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\r\n\r\n\t\tte[ 6 ] = t13 * detInv;\r\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\r\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\r\n\t\t\t\t\"- just use .toArray instead.\" );\r\n\r\n\t\treturn this.toArray( array, offset );\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( matrix4 ) {\r\n\r\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\txAxis.setFromMatrixColumn( this, 0 );\r\n\t\tyAxis.setFromMatrixColumn( this, 1 );\r\n\t\tzAxis.setFromMatrixColumn( this, 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\r\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\r\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x, y, z;\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tif ( x === undefined ) {\r\n\r\n\t\t\t\tx = new THREE.Vector3();\r\n\t\t\t\ty = new THREE.Vector3();\r\n\t\t\t\tz = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.lengthSq() === 0 ) {\r\n\r\n\t\t\t\tz.z += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tpremultiply: function ( m ) {\r\n\r\n\t\treturn this.multiplyMatrices( m, this );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.fromArray( array, j );\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\t\t\t\tv1.toArray( array, j );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyToBuffer: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function applyToBuffer( buffer, offset, length ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = buffer.length / buffer.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i ++, j ++ ) {\r\n\r\n\t\t\t\tv1.x = buffer.getX( j );\r\n\t\t\t\tv1.y = buffer.getY( j );\r\n\t\t\t\tv1.z = buffer.getZ( j );\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tbuffer.setXYZ( v1.x, v1.y, v1.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn buffer;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset is deprecated \" +\r\n\t\t\t\t\"- just use .toArray instead.\" );\r\n\r\n\t\treturn this.toArray( array, offset );\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnDegenerate ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements,\r\n\t\t\tme = m.elements,\r\n\r\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\r\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\r\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\r\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\r\n\r\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\r\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\r\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\r\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\r\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnDegenerate || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this.identity();\r\n\r\n\t\t}\r\n\t\t\r\n\t\tvar detInv = 1 / det;\r\n\r\n\t\tte[ 0 ] = t11 * detInv;\r\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\r\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\r\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 4 ] = t12 * detInv;\r\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\r\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\r\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\r\n\r\n\t\tte[ 8 ] = t13 * detInv;\r\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\r\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\r\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\r\n\r\n\t\tte[ 12 ] = t14 * detInv;\r\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\r\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\r\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector, matrix;\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\t\t\t\tmatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\r\n\t\t\t\tsx = - sx;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = 1.0 / ( right - left );\r\n\t\tvar h = 1.0 / ( top - bottom );\r\n\t\tvar p = 1.0 / ( far - near );\r\n\r\n\t\tvar x = ( right + left ) * w;\r\n\t\tvar y = ( top + bottom ) * h;\r\n\t\tvar z = ( far + near ) * p;\r\n\r\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( matrix ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tfor ( var i = 0; i < 16; i ++ ) {\r\n\r\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tlookAt: function ( v ) {\r\n\r\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\r\n\r\n\t},\r\n\r\n\tdistanceSqToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceToSquared( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceToSquared( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectsBox: ( function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\treturn box.intersectsSphere( this );\r\n\r\n\t},\r\n\r\n\tintersectsPlane: function ( plane ) {\r\n\r\n\t\t// We use the following equation to compute the signed distance from\r\n\t\t// the center of the sphere to the plane.\r\n\t\t//\r\n\t\t// distance = q * n - d\r\n\t\t//\r\n\t\t// If this distance is greater than the radius of the sphere,\r\n\t\t// then there is no intersection.\r\n\r\n\t\treturn Math.abs( this.center.dot( plane.normal ) - plane.constant ) <= this.radius;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null )\r\n\t\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere )\r\n\t\t\t\t.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSprite: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( sprite ) {\r\n\r\n\t\t\tsphere.center.set( 0, 0, 0 );\r\n\t\t\tsphere.radius = 0.7071067811865476;\r\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator === 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectsBox: function ( box ) {\r\n\r\n\t\treturn box.intersectsPlane( this );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\treturn sphere.intersectsPlane( this );\r\n\r\n\t},\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\r\n\r\n\t\t\t// transform normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t// recalculate constant (like in setFromNormalAndCoplanarPoint)\r\n\t\t\tthis.constant = - referencePoint.dot( normal );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spherical.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\r\n *\r\n * The poles (phi) are at the positive and negative y axis.\r\n * The equator starts at positive z.\r\n */\r\n\r\nTHREE.Spherical = function ( radius, phi, theta ) {\r\n\r\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\r\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\r\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Spherical.prototype = {\r\n\r\n\tconstructor: THREE.Spherical,\r\n\r\n\tset: function ( radius, phi, theta ) {\r\n\r\n\t\tthis.radius = radius;\r\n\t\tthis.phi = phi;\r\n\t\tthis.theta = theta;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( other ) {\r\n\r\n\t\tthis.radius.copy( other.radius );\r\n\t\tthis.phi.copy( other.phi );\r\n\t\tthis.theta.copy( other.theta );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// restrict phi to be betwee EPS and PI-EPS\r\n\tmakeSafe: function() {\r\n\r\n\t\tvar EPS = 0.000001;\r\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromVector3: function( vec3 ) {\r\n\r\n\t\tthis.radius = vec3.length();\r\n\r\n\t\tif ( this.radius === 0 ) {\r\n\r\n\t\t\tthis.theta = 0;\r\n\t\t\tthis.phi = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\r\n\t\t\tthis.phi = Math.acos( THREE.Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tDEG2RAD: Math.PI / 180,\r\n\tRAD2DEG: 180 / Math.PI,\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i === 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclamp: function ( value, min, max ) {\r\n\r\n\t\treturn Math.max( min, Math.min( max, value ) );\r\n\r\n\t},\r\n\r\n\t// compute euclidian modulo of m % n\r\n\t// https://en.wikipedia.org/wiki/Modulo_operation\r\n\r\n\teuclideanModulo: function ( n, m ) {\r\n\r\n\t\treturn ( ( n % m ) + m ) % m;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\trandom16: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Math.random16() has been deprecated. Use Math.random() instead.' );\r\n\t\treturn Math.random();\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function ( degrees ) {\r\n\r\n\t\treturn degrees * THREE.Math.DEG2RAD;\r\n\r\n\t},\r\n\r\n\tradToDeg: function ( radians ) {\r\n\r\n\t\treturn radians * THREE.Math.RAD2DEG;\r\n\r\n\t},\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnearestPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn Math.pow( 2, Math.round( Math.log( value ) / Math.LN2 ) );\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint !== oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://clara.io\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycentric coordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// collinear or singular triangle\r\n\t\tif ( denom === 0 ) {\r\n\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycentric coordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tclosestPointToPoint: function () {\r\n\r\n\t\tvar plane, edgeList, projectedPoint, closestPoint;\r\n\r\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\r\n\r\n\t\t\tif ( plane === undefined ) {\r\n\r\n\t\t\t\tplane = new THREE.Plane();\r\n\t\t\t\tedgeList = [ new THREE.Line3(), new THREE.Line3(), new THREE.Line3() ];\r\n\t\t\t\tprojectedPoint = new THREE.Vector3();\r\n\t\t\t\tclosestPoint = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\t\tvar minDistance = Infinity;\r\n\r\n\t\t\t// project the point onto the plane of the triangle\r\n\r\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\t\t\tplane.projectPoint( point, projectedPoint );\r\n\r\n\t\t\t// check if the projection lies within the triangle\r\n\r\n\t\t\tif( this.containsPoint( projectedPoint ) === true ) {\r\n\r\n\t\t\t\t// if so, this is the closest point\r\n\r\n\t\t\t\tresult.copy( projectedPoint );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\r\n\r\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\r\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\r\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\r\n\r\n\t\t\t\tfor( var i = 0; i < edgeList.length; i ++ ) {\r\n\r\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\r\n\r\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\r\n\r\n\t\t\t\t\tif( distance < minDistance ) {\r\n\r\n\t\t\t\t\t\tminDistance = distance;\r\n\r\n\t\t\t\t\t\tresult.copy( closestPoint );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Interpolant.js\r\n\r\n/**\r\n * Abstract base class of interpolants over parametric samples.\r\n *\r\n * The parameter domain is one dimensional, typically the time or a path\r\n * along a curve defined by the data.\r\n *\r\n * The sample values can have any dimensionality and derived classes may\r\n * apply special interpretations to the data.\r\n *\r\n * This class provides the interval seek in a Template Method, deferring\r\n * the actual interpolation to derived classes.\r\n *\r\n * Time complexity is O(1) for linear access crossing at most two points\r\n * and O(log N) for random access, where N is the number of positions.\r\n *\r\n * References:\r\n *\r\n * \t\thttp://www.oodesign.com/template-method-pattern.html\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.Interpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tthis.parameterPositions = parameterPositions;\r\n\tthis._cachedIndex = 0;\r\n\r\n\tthis.resultBuffer = resultBuffer !== undefined ?\r\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\r\n\tthis.sampleValues = sampleValues;\r\n\tthis.valueSize = sampleSize;\r\n\r\n};\r\n\r\nTHREE.Interpolant.prototype = {\r\n\r\n\tconstructor: THREE.Interpolant,\r\n\r\n\tevaluate: function( t ) {\r\n\r\n\t\tvar pp = this.parameterPositions,\r\n\t\t\ti1 = this._cachedIndex,\r\n\r\n\t\t\tt1 = pp[   i1   ],\r\n\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\tvalidate_interval: {\r\n\r\n\t\t\tseek: {\r\n\r\n\t\t\t\tvar right;\r\n\r\n\t\t\t\tlinear_scan: {\r\n//- See http://jsperf.com/comparison-to-undefined/3\r\n//- slower code:\r\n//-\r\n//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\r\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\r\n\r\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ;) {\r\n\r\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\r\n\r\n\t\t\t\t\t\t\t\t// after end\r\n\r\n\t\t\t\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt0 = t1;\r\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t < t1 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the right side of the index\r\n\t\t\t\t\t\tright = pp.length;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n//- slower code:\r\n//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\r\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\r\n\r\n\t\t\t\t\t\t// looping?\r\n\r\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\r\n\r\n\t\t\t\t\t\tif ( t < t1global ) {\r\n\r\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\r\n\t\t\t\t\t\t\tt0 = t1global;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// linear reverse scan\r\n\r\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ;) {\r\n\r\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\t// before start\r\n\r\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\r\n\r\n\t\t\t\t\t\t\tt1 = t0;\r\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( t >= t0 ) {\r\n\r\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\r\n\t\t\t\t\t\t\t\tbreak seek;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// prepare binary search on the left side of the index\r\n\t\t\t\t\t\tright = i1;\r\n\t\t\t\t\t\ti1 = 0;\r\n\t\t\t\t\t\tbreak linear_scan;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// the interval is valid\r\n\r\n\t\t\t\t\tbreak validate_interval;\r\n\r\n\t\t\t\t} // linear scan\r\n\r\n\t\t\t\t// binary search\r\n\r\n\t\t\t\twhile ( i1 < right ) {\r\n\r\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\r\n\r\n\t\t\t\t\tif ( t < pp[ mid ] ) {\r\n\r\n\t\t\t\t\t\tright = mid;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ti1 = mid + 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tt1 = pp[   i1   ];\r\n\t\t\t\tt0 = pp[ i1 - 1 ];\r\n\r\n\t\t\t\t// check boundary cases, again\r\n\r\n\t\t\t\tif ( t0 === undefined ) {\r\n\r\n\t\t\t\t\tthis._cachedIndex = 0;\r\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( t1 === undefined ) {\r\n\r\n\t\t\t\t\ti1 = pp.length;\r\n\t\t\t\t\tthis._cachedIndex = i1;\r\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} // seek\r\n\r\n\t\t\tthis._cachedIndex = i1;\r\n\r\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\r\n\r\n\t\t} // validate_interval\r\n\r\n\t\treturn this.interpolate_( i1, t0, t, t1 );\r\n\r\n\t},\r\n\r\n\tsettings: null, // optional, subclass-specific settings structure\r\n\t// Note: The indirection allows central control of many interpolants.\r\n\r\n\t// --- Protected interface\r\n\r\n\tDefaultSettings_: {},\r\n\r\n\tgetSettings_: function() {\r\n\r\n\t\treturn this.settings || this.DefaultSettings_;\r\n\r\n\t},\r\n\r\n\tcopySampleValue_: function( index ) {\r\n\r\n\t\t// copies a sample value to the result buffer\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = index * stride;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] = values[ offset + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// Template methods for derived classes:\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tthrow new Error( \"call to abstract method\" );\r\n\t\t// implementations shall return this.resultBuffer\r\n\r\n\t},\r\n\r\n\tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n\t\t// empty\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Interpolant.prototype, {\r\n\r\n\tbeforeStart_: //( 0, t, t0 ), returns this.resultBuffer\r\n\t\tTHREE.Interpolant.prototype.copySampleValue_,\r\n\r\n\tafterEnd_: //( N-1, tN-1, t ), returns this.resultBuffer\r\n\t\tTHREE.Interpolant.prototype.copySampleValue_\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/CubicInterpolant.js\r\n\r\n/**\r\n * Fast and simple cubic spline interpolant.\r\n *\r\n * It was derived from a Hermitian construction setting the first derivative\r\n * at each sample position to the linear slope between neighboring positions\r\n * over their parameter interval.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.CubicInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n\tthis._weightPrev = -0;\r\n\tthis._offsetPrev = -0;\r\n\tthis._weightNext = -0;\r\n\tthis._offsetNext = -0;\r\n\r\n};\r\n\r\nTHREE.CubicInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.CubicInterpolant,\r\n\r\n\tDefaultSettings_: {\r\n\r\n\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\r\n\t},\r\n\r\n\tintervalChanged_: function( i1, t0, t1 ) {\r\n\r\n\t\tvar pp = this.parameterPositions,\r\n\t\t\tiPrev = i1 - 2,\r\n\t\t\tiNext = i1 + 1,\r\n\r\n\t\t\ttPrev = pp[ iPrev ],\r\n\t\t\ttNext = pp[ iNext ];\r\n\r\n\t\tif ( tPrev === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingStart ) {\r\n\r\n\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(t0) = 0\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = 2 * t0 - t1;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiPrev = pp.length - 2;\r\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\r\n\t\t\t\t\tiPrev = i1;\r\n\t\t\t\t\ttPrev = t1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tNext === undefined ) {\r\n\r\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\r\n\r\n\t\t\t\tcase THREE.ZeroSlopeEnding:\r\n\r\n\t\t\t\t\t// f'(tN) = 0\r\n\t\t\t\t\tiNext = i1;\r\n\t\t\t\t\ttNext = 2 * t1 - t0;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.WrapAroundEnding:\r\n\r\n\t\t\t\t\t// use the other end of the curve\r\n\t\t\t\t\tiNext = 1;\r\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault: // ZeroCurvatureEnding\r\n\r\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\r\n\t\t\t\t\tiNext = i1 - 1;\r\n\t\t\t\t\ttNext = t0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\r\n\t\t\tstride = this.valueSize;\r\n\r\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\r\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\r\n\t\tthis._offsetPrev = iPrev * stride;\r\n\t\tthis._offsetNext = iNext * stride;\r\n\r\n\t},\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\r\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\r\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\r\n\r\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tpp = p * p,\r\n\t\t\tppp = pp * p;\r\n\r\n\t\t// evaluate polynomials\r\n\r\n\t\tvar sP =     - wP   * ppp   +         2 * wP    * pp    -          wP   * p;\r\n\t\tvar s0 = ( 1 + wP ) * ppp   + (-1.5 - 2 * wP )  * pp    + ( -0.5 + wP ) * p     + 1;\r\n\t\tvar s1 = (-1 - wN ) * ppp   + ( 1.5 +   wN   )  * pp    +    0.5        * p;\r\n\t\tvar sN =       wN   * ppp   -           wN      * pp;\r\n\r\n\t\t// combine data linearly\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tsP * values[ oP + i ] +\r\n\t\t\t\t\ts0 * values[ o0 + i ] +\r\n\t\t\t\t\ts1 * values[ o1 + i ] +\r\n\t\t\t\t\tsN * values[ oN + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/DiscreteInterpolant.js\r\n\r\n/**\r\n *\r\n * Interpolant that evaluates to the sample value at the position preceeding\r\n * the parameter.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.DiscreteInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.DiscreteInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.DiscreteInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\treturn this.copySampleValue_( i1 - 1 );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/LinearInterpolant.js\r\n\r\n/**\r\n * @author tschw\r\n */\r\n\r\nTHREE.LinearInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.LinearInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.LinearInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset1 = i1 * stride,\r\n\t\t\toffset0 = offset1 - stride,\r\n\r\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\r\n\t\t\tweight0 = 1 - weight1;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tresult[ i ] =\r\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\r\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/math/interpolants/QuaternionLinearInterpolant.js\r\n\r\n/**\r\n * Spherical linear unit quaternion interpolant.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.QuaternionLinearInterpolant = function(\r\n\t\tparameterPositions, sampleValues, sampleSize, resultBuffer ) {\r\n\r\n\tTHREE.Interpolant.call(\r\n\t\t\tthis, parameterPositions, sampleValues, sampleSize, resultBuffer );\r\n\r\n};\r\n\r\nTHREE.QuaternionLinearInterpolant.prototype =\r\n\t\tObject.assign( Object.create( THREE.Interpolant.prototype ), {\r\n\r\n\tconstructor: THREE.QuaternionLinearInterpolant,\r\n\r\n\tinterpolate_: function( i1, t0, t, t1 ) {\r\n\r\n\t\tvar result = this.resultBuffer,\r\n\t\t\tvalues = this.sampleValues,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toffset = i1 * stride,\r\n\r\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\r\n\r\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\r\n\r\n\t\t\tTHREE.Quaternion.slerpFlat( result, 0,\r\n\t\t\t\t\tvalues, offset - stride, values, offset, alpha );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = ( performance || Date ).now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = ( performance || Date ).now();\r\n\r\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {};\r\n\r\nObject.assign( THREE.EventDispatcher.prototype, {\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [], i = 0;\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/Layers.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Layers = function () {\r\n\r\n\tthis.mask = 1;\r\n\r\n};\r\n\r\nTHREE.Layers.prototype = {\r\n\r\n\tconstructor: THREE.Layers,\r\n\r\n\tset: function ( channel ) {\r\n\r\n\t\tthis.mask = 1 << channel;\r\n\r\n\t},\r\n\r\n\tenable: function ( channel ) {\r\n\r\n\t\tthis.mask |= 1 << channel;\r\n\r\n\t},\r\n\r\n\ttoggle: function ( channel ) {\r\n\r\n\t\tthis.mask ^= 1 << channel;\r\n\r\n\t},\r\n\r\n\tdisable: function ( channel ) {\r\n\r\n\t\tthis.mask &= ~ ( 1 << channel );\r\n\r\n\t},\r\n\r\n\ttest: function ( layers ) {\r\n\r\n\t\treturn ( this.mask & layers.mask ) !== 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://clara.io/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tMesh: {},\r\n\t\t\tLine: {},\r\n\t\t\tLOD: {},\r\n\t\t\tPoints: { threshold: 1 },\r\n\t\t\tSprite: {}\r\n\t\t};\r\n\r\n\t\tObject.defineProperties( this.params, {\r\n\t\t\tPointCloud: {\r\n\t\t\t\tget: function () {\r\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\r\n\t\t\t\t\treturn this.Points;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tfunction ascSort( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t}\r\n\r\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( Array.isArray( objects ) === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( ascSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author elephantatwork / www.elephantatwork.ch\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = null;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tfunction onRotationChange() {\r\n\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\r\n\t}\r\n\r\n\tfunction onQuaternionChange() {\r\n\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\r\n\t}\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t},\r\n\t\tmodelViewMatrix: {\r\n\t\t\tvalue: new THREE.Matrix4()\r\n\t\t},\r\n\t\tnormalMatrix: {\r\n\t\t\tvalue: new THREE.Matrix3()\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = THREE.Object3D.DefaultMatrixAutoUpdate;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.layers = new THREE.Layers();\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\nTHREE.Object3D.DefaultMatrixAutoUpdate = true;\r\n\r\nObject.assign( THREE.Object3D.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== null ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = null;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tvar children = this.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tchildren[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tvar parent = this.parent;\r\n\r\n\t\tif ( parent !== null ) {\r\n\r\n\t\t\tcallback( parent );\r\n\r\n\t\t\tparent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === null ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\t// meta is '' when called from JSON.stringify\r\n\t\tvar isRootObject = ( meta === undefined || meta === '' );\r\n\r\n\t\tvar output = {};\r\n\r\n\t\t// meta is a hash used to collect geometries, materials.\r\n\t\t// not providing it implies that this is the root object\r\n\t\t// being serialized.\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\t// initialize meta obj\r\n\t\t\tmeta = {\r\n\t\t\t\tgeometries: {},\r\n\t\t\t\tmaterials: {},\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t\toutput.metadata = {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'Object3D.toJSON'\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// standard Object3D serialization\r\n\r\n\t\tvar object = {};\r\n\r\n\t\tobject.uuid = this.uuid;\r\n\t\tobject.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) object.name = this.name;\r\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\r\n\t\tif ( this.castShadow === true ) object.castShadow = true;\r\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\r\n\t\tif ( this.visible === false ) object.visible = false;\r\n\r\n\t\tobject.matrix = this.matrix.toArray();\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.geometry !== undefined ) {\r\n\r\n\t\t\tif ( meta.geometries[ this.geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.geometries[ this.geometry.uuid ] = this.geometry.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.geometry = this.geometry.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.material !== undefined ) {\r\n\r\n\t\t\tif ( meta.materials[ this.material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.materials[ this.material.uuid ] = this.material.toJSON( meta );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.material = this.material.uuid;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( this.children.length > 0 ) {\r\n\r\n\t\t\tobject.children = [];\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRootObject ) {\r\n\r\n\t\t\tvar geometries = extractFromCache( meta.geometries );\r\n\t\t\tvar materials = extractFromCache( meta.materials );\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\r\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\r\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\r\n\t\t\tif ( images.length > 0 ) output.images = images;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = object;\r\n\r\n\t\treturn output;\r\n\r\n\t\t// extract data from the cache hash\r\n\t\t// remove metadata on each item\r\n\t\t// and return as array\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function ( recursive ) {\r\n\r\n\t\treturn new this.constructor().copy( this, recursive );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source, recursive ) {\r\n\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.up.copy( source.up );\r\n\r\n\t\tthis.position.copy( source.position );\r\n\t\tthis.quaternion.copy( source.quaternion );\r\n\t\tthis.scale.copy( source.scale );\r\n\r\n\t\tthis.matrix.copy( source.matrix );\r\n\t\tthis.matrixWorld.copy( source.matrixWorld );\r\n\r\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\r\n\r\n\t\tthis.visible = source.visible;\r\n\r\n\t\tthis.castShadow = source.castShadow;\r\n\t\tthis.receiveShadow = source.receiveShadow;\r\n\r\n\t\tthis.frustumCulled = source.frustumCulled;\r\n\t\tthis.renderOrder = source.renderOrder;\r\n\r\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = source.children[ i ];\r\n\t\t\t\tthis.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.a = source.a;\r\n\t\tthis.b = source.b;\r\n\t\tthis.c = source.c;\r\n\r\n\t\tthis.normal.copy( source.normal );\r\n\t\tthis.color.copy( source.color );\r\n\r\n\t\tthis.materialIndex = source.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize, normalized ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\tthis.normalized = normalized === true;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.array.length / this.itemSize;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.itemSize = source.itemSize;\r\n\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyArray: function ( array ) {\r\n\r\n\t\tthis.array.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyColorsArray: function ( colors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar color = colors[ i ];\r\n\r\n\t\t\tif ( color === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\r\n\t\t\t\tcolor = new THREE.Color();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = color.r;\r\n\t\t\tarray[ offset ++ ] = color.g;\r\n\t\t\tarray[ offset ++ ] = color.b;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyIndicesArray: function ( indices ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar index = indices[ i ];\r\n\r\n\t\t\tarray[ offset ++ ] = index.a;\r\n\t\t\tarray[ offset ++ ] = index.b;\r\n\t\t\tarray[ offset ++ ] = index.c;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector2sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector3sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyVector4sArray: function ( vectors ) {\r\n\r\n\t\tvar array = this.array, offset = 0;\r\n\r\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar vector = vectors[ i ];\r\n\r\n\t\t\tif ( vector === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\r\n\t\t\t\tvector = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray[ offset ++ ] = vector.x;\r\n\t\t\tarray[ offset ++ ] = vector.y;\r\n\t\t\tarray[ offset ++ ] = vector.z;\r\n\t\t\tarray[ offset ++ ] = vector.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize ];\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 1 ];\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 2 ];\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.array[ index * this.itemSize + 3 ];\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index + 0 ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint8ClampedArray( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint16Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Int32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Uint32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float32Array( array ), itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( array, itemSize ) {\r\n\r\n\treturn new THREE.BufferAttribute( new Float64Array( array ), itemSize );\r\n\r\n};\r\n\r\n\r\n// Deprecated\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\r\n\treturn new THREE.BufferAttribute( array, itemSize ).setDynamic( true );\r\n\r\n};\r\n\r\n// File:src/core/InstancedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferAttribute = function ( array, itemSize, meshPerAttribute ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.InstancedBufferAttribute.prototype.constructor = THREE.InstancedBufferAttribute;\r\n\r\nTHREE.InstancedBufferAttribute.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.BufferAttribute.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBuffer = function ( array, stride ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.array = array;\r\n\tthis.stride = stride;\r\n\r\n\tthis.dynamic = false;\r\n\tthis.updateRange = { offset: 0, count: - 1 };\r\n\r\n\tthis.version = 0;\r\n\r\n};\r\n\r\nTHREE.InterleavedBuffer.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBuffer,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count () {\r\n\r\n\t\treturn this.array.length / this.stride;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tsetDynamic: function ( value ) {\r\n\r\n\t\tthis.dynamic = value;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.array = new source.array.constructor( source.array );\r\n\t\tthis.stride = source.stride;\r\n\t\tthis.dynamic = source.dynamic;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.stride;\r\n\t\tindex2 *= attribute.stride;\r\n\r\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/InstancedInterleavedBuffer.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedInterleavedBuffer = function ( array, stride, meshPerAttribute ) {\r\n\r\n\tTHREE.InterleavedBuffer.call( this, array, stride );\r\n\r\n\tthis.meshPerAttribute = meshPerAttribute || 1;\r\n\r\n};\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype = Object.create( THREE.InterleavedBuffer.prototype );\r\nTHREE.InstancedInterleavedBuffer.prototype.constructor = THREE.InstancedInterleavedBuffer;\r\n\r\nTHREE.InstancedInterleavedBuffer.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.InterleavedBuffer.prototype.copy.call( this, source );\r\n\r\n\tthis.meshPerAttribute = source.meshPerAttribute;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/InterleavedBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InterleavedBufferAttribute = function ( interleavedBuffer, itemSize, offset ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.data = interleavedBuffer;\r\n\tthis.itemSize = itemSize;\r\n\tthis.offset = offset;\r\n\r\n};\r\n\r\n\r\nTHREE.InterleavedBufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.InterleavedBufferAttribute,\r\n\r\n\tget length() {\r\n\r\n\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tget count() {\r\n\r\n\t\treturn this.data.count;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( index, w ) {\r\n\r\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetX: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\r\n\r\n\t},\r\n\r\n\tgetY: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\r\n\r\n\t},\r\n\r\n\tgetZ: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\r\n\r\n\t},\r\n\r\n\tgetW: function ( index ) {\r\n\r\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex = index * this.data.stride + this.offset;\r\n\r\n\t\tthis.data.array[ index + 0 ] = x;\r\n\t\tthis.data.array[ index + 1 ] = y;\r\n\t\tthis.data.array[ index + 2 ] = z;\r\n\t\tthis.data.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];\r\n\tthis.faces = [];\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.Geometry.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar positions = attributes.position.array;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\r\n\r\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\t\tvar tempUVs2 = [];\r\n\r\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\ttempUVs2.push( new THREE.Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction addFace( a, b, c, materialIndex ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\r\n\r\n\t\t\tscope.faces.push( face );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs2 !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar groups = geometry.groups;\r\n\r\n\t\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex  );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tthis.computeBoundingSphere();\r\n\r\n\t\tvar center = this.boundingSphere.center;\r\n\t\tvar radius = this.boundingSphere.radius;\r\n\r\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\t\tmatrix.set(\r\n\t\t\ts, 0, 0, - s * center.x,\r\n\t\t\t0, s, 0, - s * center.y,\r\n\t\t\t0, 0, s, - s * center.z,\r\n\t\t\t0, 0, 0, 1\r\n\t\t);\r\n\r\n\t\tthis.applyMatrix( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\r\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\r\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.faces.length > 0 ) {\r\n\r\n\t\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\r\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\tsortFacesByMaterialIndex: function () {\r\n\r\n\t\tvar faces = this.faces;\r\n\t\tvar length = faces.length;\r\n\r\n\t\t// tag faces\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tfaces[ i ]._id = i;\r\n\r\n\t\t}\r\n\r\n\t\t// sort faces\r\n\r\n\t\tfunction materialIndexSort( a, b ) {\r\n\r\n\t\t\treturn a.materialIndex - b.materialIndex;\r\n\r\n\t\t}\r\n\r\n\t\tfaces.sort( materialIndexSort );\r\n\r\n\t\t// sort uvs\r\n\r\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\r\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\r\n\r\n\t\tvar newUvs1, newUvs2;\r\n\r\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\r\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\r\n\r\n\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar id = faces[ i ]._id;\r\n\r\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\r\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\r\n\r\n\t\t}\r\n\r\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\r\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Geometry',\r\n\t\t\t\tgenerator: 'Geometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Geometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = true;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = {};\r\n\r\n\t\tdata.data.vertices = vertices;\r\n\t\tdata.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\tdata.data.faces = faces;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\t/*\r\n\t\t// Handle primitives\r\n\r\n\t\tvar parameters = this.parameters;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\t\t*/\r\n\r\n\t\treturn new THREE.Geometry().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.vertices = [];\r\n\t\tthis.faces = [];\r\n\t\tthis.faceVertexUvs = [ [] ];\r\n\r\n\t\tvar vertices = source.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = source.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/core/DirectGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'DirectGeometry';\r\n\r\n\tthis.indices = [];\r\n\tthis.vertices = [];\r\n\tthis.normals = [];\r\n\tthis.colors = [];\r\n\tthis.uvs = [];\r\n\tthis.uvs2 = [];\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.morphTargets = {};\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\t// this.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.DirectGeometry.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tcomputeBoundingBox: THREE.Geometry.prototype.computeBoundingBox,\r\n\tcomputeBoundingSphere: THREE.Geometry.prototype.computeBoundingSphere,\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeFaceNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tconsole.warn( 'THREE.DirectGeometry: computeVertexNormals() is not a method of this type of geometry.' );\r\n\r\n\t},\r\n\r\n\tcomputeGroups: function ( geometry ) {\r\n\r\n\t\tvar group;\r\n\t\tvar groups = [];\r\n\t\tvar materialIndex;\r\n\r\n\t\tvar faces = geometry.faces;\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t// materials\r\n\r\n\t\t\tif ( face.materialIndex !== materialIndex ) {\r\n\r\n\t\t\t\tmaterialIndex = face.materialIndex;\r\n\r\n\t\t\t\tif ( group !== undefined ) {\r\n\r\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\t\t\tgroups.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tstart: i * 3,\r\n\t\t\t\t\tmaterialIndex: materialIndex\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( group !== undefined ) {\r\n\r\n\t\t\tgroup.count = ( i * 3 ) - group.start;\r\n\t\t\tgroups.push( group );\r\n\r\n\t\t}\r\n\r\n\t\tthis.groups = groups;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\r\n\r\n\t\t// morphs\r\n\r\n\t\tvar morphTargets = geometry.morphTargets;\r\n\t\tvar morphTargetsLength = morphTargets.length;\r\n\r\n\t\tvar morphTargetsPosition;\r\n\r\n\t\tif ( morphTargetsLength > 0 ) {\r\n\r\n\t\t\tmorphTargetsPosition = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsPosition[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\r\n\r\n\t\t}\r\n\r\n\t\tvar morphNormals = geometry.morphNormals;\r\n\t\tvar morphNormalsLength = morphNormals.length;\r\n\r\n\t\tvar morphTargetsNormal;\r\n\r\n\t\tif ( morphNormalsLength > 0 ) {\r\n\r\n\t\t\tmorphTargetsNormal = [];\r\n\r\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\r\n\r\n\t\t\t\tmorphTargetsNormal[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\r\n\r\n\t\t}\r\n\r\n\t\t// skins\r\n\r\n\t\tvar skinIndices = geometry.skinIndices;\r\n\t\tvar skinWeights = geometry.skinWeights;\r\n\r\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\r\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\r\n\r\n\t\t//\r\n\r\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\r\n\r\n\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\tif ( vertexNormals.length === 3 ) {\r\n\r\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar normal = face.normal;\r\n\r\n\t\t\t\tthis.normals.push( normal, normal, normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\tif ( vertexColors.length === 3 ) {\r\n\r\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar color = face.color;\r\n\r\n\t\t\t\tthis.colors.push( color, color, color );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\r\n\r\n\t\t\t\t\tthis.uvs.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv2 === true ) {\r\n\r\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\r\n\r\n\t\t\t\tif ( vertexUvs !== undefined ) {\r\n\r\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\r\n\r\n\t\t\t\t\tthis.uvs2.push( new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// morphs\r\n\r\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\r\n\r\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\r\n\r\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\r\n\r\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// skins\r\n\r\n\t\t\tif ( hasSkinIndices ) {\r\n\r\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasSkinWeights ) {\r\n\r\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeGroups( geometry );\r\n\r\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.index = null;\r\n\tthis.attributes = {};\r\n\r\n\tthis.morphAttributes = {};\r\n\r\n\tthis.groups = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.drawRange = { start: 0, count: Infinity };\r\n\r\n};\r\n\r\nObject.assign( THREE.BufferGeometry.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tgetIndex: function () {\r\n\r\n\t\treturn this.index;\r\n\r\n\t},\r\n\r\n\tsetIndex: function ( index ) {\r\n\r\n\t\tthis.index = index;\r\n\r\n\t},\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false && attribute instanceof THREE.InterleavedBufferAttribute === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.addAttribute( name, new THREE.BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( name === 'index' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\r\n\t\t\tthis.setIndex( attribute );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\tremoveAttribute: function ( name ) {\r\n\r\n\t\tdelete this.attributes[ name ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddGroup: function ( start, count, materialIndex ) {\r\n\r\n\t\tthis.groups.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tclearGroups: function () {\r\n\r\n\t\tthis.groups = [];\r\n\r\n\t},\r\n\r\n\tsetDrawRange: function ( start, count ) {\r\n\r\n\t\tthis.drawRange.start = start;\r\n\t\tthis.drawRange.count = count;\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\trotateX: function () {\r\n\r\n\t\t// rotate geometry around world x-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateX( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationX( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\t// rotate geometry around world y-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateY( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationY( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\t// rotate geometry around world z-axis\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function rotateZ( angle ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeRotationZ( angle );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function () {\r\n\r\n\t\t// translate geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function translate( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeTranslation( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tscale: function () {\r\n\r\n\t\t// scale geometry\r\n\r\n\t\tvar m1;\r\n\r\n\t\treturn function scale( x, y, z ) {\r\n\r\n\t\t\tif ( m1 === undefined ) m1 = new THREE.Matrix4();\r\n\r\n\t\t\tm1.makeScale( x, y, z );\r\n\r\n\t\t\tthis.applyMatrix( m1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar obj;\r\n\r\n\t\treturn function lookAt( vector ) {\r\n\r\n\t\t\tif ( obj === undefined ) obj = new THREE.Object3D();\r\n\r\n\t\t\tobj.lookAt( vector );\r\n\r\n\t\t\tobj.updateMatrix();\r\n\r\n\t\t\tthis.applyMatrix( obj.matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.translate( offset.x, offset.y, offset.z );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tsetFromObject: function ( object ) {\r\n\r\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Points || object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar positions = new THREE.Float32Attribute( geometry.vertices.length * 3, 3 );\r\n\t\t\tvar colors = new THREE.Float32Attribute( geometry.colors.length * 3, 3 );\r\n\r\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\r\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\r\n\r\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\r\n\r\n\t\t\t\tvar lineDistances = new THREE.Float32Attribute( geometry.lineDistances.length, 1 );\r\n\r\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tthis.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateFromObject: function ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar direct = geometry.__directGeometry;\r\n\r\n\t\t\tif ( direct === undefined ) {\r\n\r\n\t\t\t\treturn this.fromGeometry( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\r\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\r\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\r\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\r\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t\tgeometry = direct;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.verticesNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.position;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.normalsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.normal;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colorsNeedUpdate === true ) {\r\n\r\n\t\t\tvar attribute = this.attributes.color;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvsNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.uv;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\r\n\r\n\t\t\tvar attribute = this.attributes.lineDistance;\r\n\r\n\t\t\tif ( attribute !== undefined ) {\r\n\r\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\r\n\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.groupsNeedUpdate ) {\r\n\r\n\t\t\tgeometry.computeGroups( object.geometry );\r\n\t\t\tthis.groups = geometry.groups;\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry ) {\r\n\r\n\t\tgeometry.__directGeometry = new THREE.DirectGeometry().fromGeometry( geometry );\r\n\r\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\r\n\r\n\t},\r\n\r\n\tfromDirectGeometry: function ( geometry ) {\r\n\r\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\r\n\r\n\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\r\n\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs.length > 0 ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.uvs2.length > 0 ) {\r\n\r\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\r\n\t\t\tthis.addAttribute( 'uv2', new THREE.BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.indices.length > 0 ) {\r\n\r\n\t\t\tvar TypeArray = geometry.vertices.length > 65535 ? Uint32Array : Uint16Array;\r\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\r\n\t\t\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\r\n\r\n\t\t}\r\n\r\n\t\t// groups\r\n\r\n\t\tthis.groups = geometry.groups;\r\n\r\n\t\t// morphs\r\n\r\n\t\tfor ( var name in geometry.morphTargets ) {\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar morphTarget = morphTargets[ i ];\r\n\r\n\t\t\t\tvar attribute = new THREE.Float32Attribute( morphTarget.length * 3, 3 );\r\n\r\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.morphAttributes[ name ] = array;\r\n\r\n\t\t}\r\n\r\n\t\t// skinning\r\n\r\n\t\tif ( geometry.skinIndices.length > 0 ) {\r\n\r\n\t\t\tvar skinIndices = new THREE.Float32Attribute( geometry.skinIndices.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.skinWeights.length > 0 ) {\r\n\r\n\t\t\tvar skinWeights = new THREE.Float32Attribute( geometry.skinWeights.length * 4, 4 );\r\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\tif ( positions !== undefined ) {\r\n\r\n\t\t\tthis.boundingBox.setFromArray( positions );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.boundingBox.makeEmpty();\r\n\r\n\t\t}\r\n\r\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function computeBoundingSphere() {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tbox.setFromArray( positions );\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.fromArray( positions, i );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar index = this.index;\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar array = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tarray[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\t\tthis.addGroup( 0, indices.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar group = groups[ j ];\r\n\r\n\t\t\t\t\tvar start = group.start;\r\n\t\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\r\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\r\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoNonIndexed: function () {\r\n\r\n\t\tif ( this.index === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry2 = new THREE.BufferGeometry();\r\n\r\n\t\tvar indices = this.index.array;\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\r\n\t\t\tvar array = attribute.array;\r\n\t\t\tvar itemSize = attribute.itemSize;\r\n\r\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\r\n\r\n\t\t\tvar index = 0, index2 = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tindex = indices[ i ] * itemSize;\r\n\r\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\r\n\r\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry2.addAttribute( name, new THREE.BufferAttribute( array2, itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry2;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard BufferGeometry serialization\r\n\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\tdata.data = { attributes: {} };\r\n\r\n\t\tvar index = this.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( index.array );\r\n\r\n\t\t\tdata.data.index = {\r\n\t\t\t\ttype: index.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\tdata.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array,\r\n\t\t\t\tnormalized: attribute.normalized\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = this.groups;\r\n\r\n\t\tif ( groups.length > 0 ) {\r\n\r\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\tdata.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\t/*\r\n\t\t// Handle primitives\r\n\r\n\t\tvar parameters = this.parameters;\r\n\r\n\t\tif ( parameters !== undefined ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tvalues.push( parameters[ key ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometry = Object.create( this.constructor.prototype );\r\n\t\t\tthis.constructor.apply( geometry, values );\r\n\t\t\treturn geometry;\r\n\r\n\t\t}\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\t\t*/\r\n\r\n\t\treturn new THREE.BufferGeometry().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tvar index = source.index;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tthis.setIndex( index.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = source.attributes;\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ name ];\r\n\t\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = source.groups;\r\n\r\n\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar group = groups[ i ];\r\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.BufferGeometry.MaxIndex = 65535;\r\n\r\n// File:src/core/InstancedBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.InstancedBufferGeometry = function () {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'InstancedBufferGeometry';\r\n\tthis.maxInstancedCount = undefined;\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.InstancedBufferGeometry.prototype.constructor = THREE.InstancedBufferGeometry;\r\n\r\nTHREE.InstancedBufferGeometry.prototype.addGroup = function ( start, count, instances ) {\r\n\r\n\tthis.groups.push( {\r\n\r\n\t\tstart: start,\r\n\t\tcount: count,\r\n\t\tinstances: instances\r\n\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.InstancedBufferGeometry.prototype.copy = function ( source ) {\r\n\r\n\tvar index = source.index;\r\n\r\n\tif ( index !== null ) {\r\n\r\n\t\tthis.setIndex( index.clone() );\r\n\r\n\t}\r\n\r\n\tvar attributes = source.attributes;\r\n\r\n\tfor ( var name in attributes ) {\r\n\r\n\t\tvar attribute = attributes[ name ];\r\n\t\tthis.addAttribute( name, attribute.clone() );\r\n\r\n\t}\r\n\r\n\tvar groups = source.groups;\r\n\r\n\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\tvar group = groups[ i ];\r\n\t\tthis.addGroup( group.start, group.count, group.instances );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/core/Uniform.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Uniform = function ( value ) {\r\n\r\n\tif ( typeof value === 'string' ) {\r\n\r\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\r\n\t\tvalue = arguments[ 1 ];\r\n\r\n\t}\r\n\r\n\tthis.value = value;\r\n\r\n\tthis.dynamic = false;\r\n\r\n};\r\n\r\nTHREE.Uniform.prototype = {\r\n\r\n\tconstructor: THREE.Uniform,\r\n\r\n\tonUpdate: function ( callback ) {\r\n\r\n\t\tthis.dynamic = true;\r\n\t\tthis.onUpdateCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/AnimationAction.js\r\n\r\n/**\r\n *\r\n * Action provided by AnimationMixer for scheduling clip playback on specific\r\n * objects.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n *\r\n */\r\n\r\nTHREE.AnimationAction = function() {\r\n\r\n\tthrow new Error( \"THREE.AnimationAction: \" +\r\n\t\t\t\"Use mixer.clipAction for construction.\" );\r\n\r\n};\r\n\r\nTHREE.AnimationAction._new =\r\n\t\tfunction AnimationAction( mixer, clip, localRoot ) {\r\n\r\n\tthis._mixer = mixer;\r\n\tthis._clip = clip;\r\n\tthis._localRoot = localRoot || null;\r\n\r\n\tvar tracks = clip.tracks,\r\n\t\tnTracks = tracks.length,\r\n\t\tinterpolants = new Array( nTracks );\r\n\r\n\tvar interpolantSettings = {\r\n\t\t\tendingStart: \tTHREE.ZeroCurvatureEnding,\r\n\t\t\tendingEnd:\t\tTHREE.ZeroCurvatureEnding\r\n\t};\r\n\r\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\r\n\t\tinterpolants[ i ] = interpolant;\r\n\t\tinterpolant.settings = interpolantSettings;\r\n\r\n\t}\r\n\r\n\tthis._interpolantSettings = interpolantSettings;\r\n\r\n\tthis._interpolants = interpolants;\t// bound by the mixer\r\n\r\n\t// inside: PropertyMixer (managed by the mixer)\r\n\tthis._propertyBindings = new Array( nTracks );\r\n\r\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\r\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\r\n\r\n\tthis._timeScaleInterpolant = null;\r\n\tthis._weightInterpolant = null;\r\n\r\n\tthis.loop = THREE.LoopRepeat;\r\n\tthis._loopCount = -1;\r\n\r\n\t// global mixer time when the action is to be started\r\n\t// it's set back to 'null' upon start of the action\r\n\tthis._startTime = null;\r\n\r\n\t// scaled local time of the action\r\n\t// gets clamped or wrapped to 0..clip.duration according to loop\r\n\tthis.time = 0;\r\n\r\n\tthis.timeScale = 1;\r\n\tthis._effectiveTimeScale = 1;\r\n\r\n\tthis.weight = 1;\r\n\tthis._effectiveWeight = 1;\r\n\r\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\r\n\r\n\tthis.paused = false;\t\t\t\t// false -> zero effective time scale\r\n\tthis.enabled = true;\t\t\t\t// true -> zero effective weight\r\n\r\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\r\n\r\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\r\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\r\n\r\n};\r\n\r\nTHREE.AnimationAction._new.prototype = {\r\n\r\n\tconstructor: THREE.AnimationAction._new,\r\n\r\n\t// State & Scheduling\r\n\r\n\tplay: function() {\r\n\r\n\t\tthis._mixer._activateAction( this );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis._mixer._deactivateAction( this );\r\n\r\n\t\treturn this.reset();\r\n\r\n\t},\r\n\r\n\treset: function() {\r\n\r\n\t\tthis.paused = false;\r\n\t\tthis.enabled = true;\r\n\r\n\t\tthis.time = 0;\t\t\t// restart clip\r\n\t\tthis._loopCount = -1;\t// forget previous loops\r\n\t\tthis._startTime = null;\t// forget scheduling\r\n\r\n\t\treturn this.stopFading().stopWarping();\r\n\r\n\t},\r\n\r\n\tisRunning: function() {\r\n\r\n\t\tvar start = this._startTime;\r\n\r\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\r\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\r\n\r\n\t},\r\n\r\n\t// return true when play has been called\r\n\tisScheduled: function() {\r\n\r\n\t\treturn this._mixer._isActiveAction( this );\r\n\r\n\t},\r\n\r\n\tstartAt: function( time ) {\r\n\r\n\t\tthis._startTime = time;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetLoop: function( mode, repetitions ) {\r\n\r\n\t\tthis.loop = mode;\r\n\t\tthis.repetitions = repetitions;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Weight\r\n\r\n\t// set the weight stopping any scheduled fading\r\n\t// although .enabled = false yields an effective weight of zero, this\r\n\t// method does *not* change .enabled, because it would be confusing\r\n\tsetEffectiveWeight: function( weight ) {\r\n\r\n\t\tthis.weight = weight;\r\n\r\n\t\t// note: same logic as when updated at runtime\r\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\r\n\r\n\t\treturn this.stopFading();\r\n\r\n\t},\r\n\r\n\t// return the weight considering fading and .enabled\r\n\tgetEffectiveWeight: function() {\r\n\r\n\t\treturn this._effectiveWeight;\r\n\r\n\t},\r\n\r\n\tfadeIn: function( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 0, 1 );\r\n\r\n\t},\r\n\r\n\tfadeOut: function( duration ) {\r\n\r\n\t\treturn this._scheduleFading( duration, 1, 0 );\r\n\r\n\t},\r\n\r\n\tcrossFadeFrom: function( fadeOutAction, duration, warp ) {\r\n\r\n\t\tvar mixer = this._mixer;\r\n\r\n\t\tfadeOutAction.fadeOut( duration );\r\n\t\tthis.fadeIn( duration );\r\n\r\n\t\tif( warp ) {\r\n\r\n\t\t\tvar fadeInDuration = this._clip.duration,\r\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\r\n\r\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\r\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\r\n\r\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\r\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossFadeTo: function( fadeInAction, duration, warp ) {\r\n\r\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\r\n\r\n\t},\r\n\r\n\tstopFading: function() {\r\n\r\n\t\tvar weightInterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( weightInterpolant !== null ) {\r\n\r\n\t\t\tthis._weightInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Time Scale Control\r\n\r\n\t// set the weight stopping any scheduled warping\r\n\t// although .paused = true yields an effective time scale of zero, this\r\n\t// method does *not* change .paused, because it would be confusing\r\n\tsetEffectiveTimeScale: function( timeScale ) {\r\n\r\n\t\tthis.timeScale = timeScale;\r\n\t\tthis._effectiveTimeScale = this.paused ? 0 :timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\t// return the time scale considering warping and .paused\r\n\tgetEffectiveTimeScale: function() {\r\n\r\n\t\treturn this._effectiveTimeScale;\r\n\r\n\t},\r\n\r\n\tsetDuration: function( duration ) {\r\n\r\n\t\tthis.timeScale = this._clip.duration / duration;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\tsyncWith: function( action ) {\r\n\r\n\t\tthis.time = action.time;\r\n\t\tthis.timeScale = action.timeScale;\r\n\r\n\t\treturn this.stopWarping();\r\n\r\n\t},\r\n\r\n\thalt: function( duration ) {\r\n\r\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\r\n\r\n\t},\r\n\r\n\twarp: function( startTimeScale, endTimeScale, duration ) {\r\n\r\n\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\tinterpolant = this._timeScaleInterpolant,\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\tthis._timeScaleInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now;\r\n\t\ttimes[ 1 ] = now + duration;\r\n\r\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\r\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstopWarping: function() {\r\n\r\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\r\n\r\n\t\tif ( timeScaleInterpolant !== null ) {\r\n\r\n\t\t\tthis._timeScaleInterpolant = null;\r\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// Object Accessors\r\n\r\n\tgetMixer: function() {\r\n\r\n\t\treturn this._mixer;\r\n\r\n\t},\r\n\r\n\tgetClip: function() {\r\n\r\n\t\treturn this._clip;\r\n\r\n\t},\r\n\r\n\tgetRoot: function() {\r\n\r\n\t\treturn this._localRoot || this._mixer._root;\r\n\r\n\t},\r\n\r\n\t// Interna\r\n\r\n\t_update: function( time, deltaTime, timeDirection, accuIndex ) {\r\n\t\t// called by the mixer\r\n\r\n\t\tvar startTime = this._startTime;\r\n\r\n\t\tif ( startTime !== null ) {\r\n\r\n\t\t\t// check for scheduled start of action\r\n\r\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\r\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\r\n\r\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// start\r\n\r\n\t\t\tthis._startTime = null; // unschedule\r\n\t\t\tdeltaTime = timeDirection * timeRunning;\r\n\r\n\t\t}\r\n\r\n\t\t// apply time scale and advance time\r\n\r\n\t\tdeltaTime *= this._updateTimeScale( time );\r\n\t\tvar clipTime = this._updateTime( deltaTime );\r\n\r\n\t\t// note: _updateTime may disable the action resulting in\r\n\t\t// an effective weight of 0\r\n\r\n\t\tvar weight = this._updateWeight( time );\r\n\r\n\t\tif ( weight > 0 ) {\r\n\r\n\t\t\tvar interpolants = this._interpolants;\r\n\t\t\tvar propertyMixers = this._propertyBindings;\r\n\r\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\r\n\r\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\r\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_updateWeight: function( time ) {\r\n\r\n\t\tvar weight = 0;\r\n\r\n\t\tif ( this.enabled ) {\r\n\r\n\t\t\tweight = this.weight;\r\n\t\t\tvar interpolant = this._weightInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\tweight *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopFading();\r\n\r\n\t\t\t\t\tif ( interpolantValue === 0 ) {\r\n\r\n\t\t\t\t\t\t// faded out, disable\r\n\t\t\t\t\t\tthis.enabled = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveWeight = weight;\r\n\t\treturn weight;\r\n\r\n\t},\r\n\r\n\t_updateTimeScale: function( time ) {\r\n\r\n\t\tvar timeScale = 0;\r\n\r\n\t\tif ( ! this.paused ) {\r\n\r\n\t\t\ttimeScale = this.timeScale;\r\n\r\n\t\t\tvar interpolant = this._timeScaleInterpolant;\r\n\r\n\t\t\tif ( interpolant !== null ) {\r\n\r\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\r\n\r\n\t\t\t\ttimeScale *= interpolantValue;\r\n\r\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\r\n\r\n\t\t\t\t\tthis.stopWarping();\r\n\r\n\t\t\t\t\tif ( timeScale === 0 ) {\r\n\r\n\t\t\t\t\t\t// motion has halted, pause\r\n\t\t\t\t\t\tthis.paused = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// warp done - apply final time scale\r\n\t\t\t\t\t\tthis.timeScale = timeScale;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis._effectiveTimeScale = timeScale;\r\n\t\treturn timeScale;\r\n\r\n\t},\r\n\r\n\t_updateTime: function( deltaTime ) {\r\n\r\n\t\tvar time = this.time + deltaTime;\r\n\r\n\t\tif ( deltaTime === 0 ) return time;\r\n\r\n\t\tvar duration = this._clip.duration,\r\n\r\n\t\t\tloop = this.loop,\r\n\t\t\tloopCount = this._loopCount;\r\n\r\n\t\tif ( loop === THREE.LoopOnce ) {\r\n\r\n\t\t\tif ( loopCount === -1 ) {\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tthis.loopCount = 0;\r\n\t\t\t\tthis._setEndings( true, true, false );\r\n\r\n\t\t\t}\r\n\r\n\t\t\thandle_stop: {\r\n\r\n\t\t\t\tif ( time >= duration ) {\r\n\r\n\t\t\t\t\ttime = duration;\r\n\r\n\t\t\t\t} else if ( time < 0 ) {\r\n\r\n\t\t\t\t\ttime = 0;\r\n\r\n\t\t\t\t} else break handle_stop;\r\n\r\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // repetitive Repeat or PingPong\r\n\r\n\t\t\tvar pingPong = ( loop === THREE.LoopPingPong );\r\n\r\n\t\t\tif ( loopCount === -1 ) {\r\n\t\t\t\t// just started\r\n\r\n\t\t\t\tif ( deltaTime >= 0 ) {\r\n\r\n\t\t\t\t\tloopCount = 0;\r\n\r\n\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\ttrue, this.repetitions === 0, pingPong );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// when looping in reverse direction, the initial\r\n\t\t\t\t\t// transition through zero counts as a repetition,\r\n\t\t\t\t\t// so leave loopCount at -1\r\n\r\n\t\t\t\t\tthis._setEndings(\r\n\t\t\t\t\t\t\tthis.repetitions === 0, true, pingPong );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( time >= duration || time < 0 ) {\r\n\t\t\t\t// wrap around\r\n\r\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\r\n\t\t\t\ttime -= duration * loopDelta;\r\n\r\n\t\t\t\tloopCount += Math.abs( loopDelta );\r\n\r\n\t\t\t\tvar pending = this.repetitions - loopCount;\r\n\r\n\t\t\t\tif ( pending < 0 ) {\r\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\r\n\r\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\r\n\t\t\t\t\telse this.enabled = false;\r\n\r\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'finished', action: this,\r\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// keep running\r\n\r\n\t\t\t\t\tif ( pending === 0 ) {\r\n\t\t\t\t\t\t// entering the last round\r\n\r\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\r\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis._loopCount = loopCount;\r\n\r\n\t\t\t\t\tthis._mixer.dispatchEvent( {\r\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\r\n\t\t\t\t// invert time for the \"pong round\"\r\n\r\n\t\t\t\tthis.time = time;\r\n\t\t\t\treturn duration - time;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.time = time;\r\n\t\treturn time;\r\n\r\n\t},\r\n\r\n\t_setEndings: function( atStart, atEnd, pingPong ) {\r\n\r\n\t\tvar settings = this._interpolantSettings;\r\n\r\n\t\tif ( pingPong ) {\r\n\r\n\t\t\tsettings.endingStart \t= THREE.ZeroSlopeEnding;\r\n\t\t\tsettings.endingEnd\t\t= THREE.ZeroSlopeEnding;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\r\n\r\n\t\t\tif ( atStart ) {\r\n\r\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ?\r\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingStart = THREE.WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( atEnd ) {\r\n\r\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ?\r\n\t\t\t\t\t\tTHREE.ZeroSlopeEnding : THREE.ZeroCurvatureEnding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsettings.endingEnd \t = THREE.WrapAroundEnding;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_scheduleFading: function( duration, weightNow, weightThen ) {\r\n\r\n\t\tvar mixer = this._mixer, now = mixer.time,\r\n\t\t\tinterpolant = this._weightInterpolant;\r\n\r\n\t\tif ( interpolant === null ) {\r\n\r\n\t\t\tinterpolant = mixer._lendControlInterpolant(),\r\n\t\t\tthis._weightInterpolant = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = interpolant.parameterPositions,\r\n\t\t\tvalues = interpolant.sampleValues;\r\n\r\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\r\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/animation/AnimationClip.js\r\n\r\n/**\r\n *\r\n * Reusable set of Tracks that represent an animation.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationClip = function ( name, duration, tracks ) {\r\n\r\n\tthis.name = name;\r\n\tthis.tracks = tracks;\r\n\tthis.duration = ( duration !== undefined ) ? duration : -1;\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\t// this means it should figure out its duration by scanning the tracks\r\n\tif ( this.duration < 0 ) {\r\n\r\n\t\tthis.resetDuration();\r\n\r\n\t}\r\n\r\n\t// maybe only do these on demand, as doing them here could potentially slow down loading\r\n\t// but leaving these here during development as this ensures a lot of testing of these functions\r\n\tthis.trim();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.AnimationClip.prototype = {\r\n\r\n\tconstructor: THREE.AnimationClip,\r\n\r\n\tresetDuration: function() {\r\n\r\n\t\tvar tracks = this.tracks,\r\n\t\t\tduration = 0;\r\n\r\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar track = this.tracks[ i ];\r\n\r\n\t\t\tduration = Math.max(\r\n\t\t\t\t\tduration, track.times[ track.times.length - 1 ] );\r\n\r\n\t\t}\r\n\r\n\t\tthis.duration = duration;\r\n\r\n\t},\r\n\r\n\ttrim: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\toptimize: function() {\r\n\r\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\r\n\r\n\t\t\tthis.tracks[ i ].optimize();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Static methods:\r\n\r\nObject.assign( THREE.AnimationClip, {\r\n\r\n\tparse: function( json ) {\r\n\r\n\t\tvar tracks = [],\r\n\t\t\tjsonTracks = json.tracks,\r\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\r\n\r\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( THREE.KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn new THREE.AnimationClip( json.name, json.duration, tracks );\r\n\r\n\t},\r\n\r\n\r\n\ttoJSON: function( clip ) {\r\n\r\n\t\tvar tracks = [],\r\n\t\t\tclipTracks = clip.tracks;\r\n\r\n\t\tvar json = {\r\n\r\n\t\t\t'name': clip.name,\r\n\t\t\t'duration': clip.duration,\r\n\t\t\t'tracks': tracks\r\n\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\r\n\r\n\t\t\ttracks.push( THREE.KeyframeTrack.toJSON( clipTracks[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn json;\r\n\r\n\t},\r\n\r\n\r\n\tCreateFromMorphTargetSequence: function( name, morphTargetSequence, fps, noLoop ) {\r\n\r\n\t\tvar numMorphTargets = morphTargetSequence.length;\r\n\t\tvar tracks = [];\r\n\r\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\r\n\r\n\t\t\tvar times = [];\r\n\t\t\tvar values = [];\r\n\r\n\t\t\ttimes.push(\r\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\r\n\t\t\t\t\ti,\r\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\r\n\r\n\t\t\tvalues.push( 0, 1, 0 );\r\n\r\n\t\t\tvar order = THREE.AnimationUtils.getKeyframeOrder( times );\r\n\t\t\ttimes = THREE.AnimationUtils.sortedArray( times, 1, order );\r\n\t\t\tvalues = THREE.AnimationUtils.sortedArray( values, 1, order );\r\n\r\n\t\t\t// if there is a key at the first frame, duplicate it as the\r\n\t\t\t// last frame as well for perfect loop.\r\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\r\n\r\n\t\t\t\ttimes.push( numMorphTargets );\r\n\t\t\t\tvalues.push( values[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttracks.push(\r\n\t\t\t\t\tnew THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\r\n\t\t\t\t\t\ttimes, values\r\n\t\t\t\t\t).scale( 1.0 / fps ) );\r\n\t\t}\r\n\r\n\t\treturn new THREE.AnimationClip( name, -1, tracks );\r\n\r\n\t},\r\n\r\n\tfindByName: function( objectOrClipArray, name ) {\r\n\r\n\t\tvar clipArray = objectOrClipArray;\r\n\r\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\r\n\r\n\t\t\tvar o = objectOrClipArray;\r\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\r\n\r\n\t\t\tif ( clipArray[ i ].name === name ) {\r\n\r\n\t\t\t\treturn clipArray[ i ];\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\tCreateClipsFromMorphTargetSequences: function( morphTargets, fps, noLoop ) {\r\n\r\n\t\tvar animationToMorphTargets = {};\r\n\r\n\t\t// tested with https://regex101.com/ on trick sequences\r\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\r\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\r\n\r\n\t\t// sort morph target names into animation groups based\r\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\r\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar morphTarget = morphTargets[ i ];\r\n\t\t\tvar parts = morphTarget.name.match( pattern );\r\n\r\n\t\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\t\tvar name = parts[ 1 ];\r\n\r\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\r\n\t\t\t\tif ( ! animationMorphTargets ) {\r\n\r\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationMorphTargets.push( morphTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar clips = [];\r\n\r\n\t\tfor ( var name in animationToMorphTargets ) {\r\n\r\n\t\t\tclips.push( THREE.AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn clips;\r\n\r\n\t},\r\n\r\n\t// parse the animation.hierarchy format\r\n\tparseAnimation: function( animation, bones, nodeName ) {\r\n\r\n\t\tif ( ! animation ) {\r\n\r\n\t\t\tconsole.error( \"  no animation in JSONLoader data\" );\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar addNonemptyTrack = function(\r\n\t\t\t\ttrackType, trackName, animationKeys, propertyName, destTracks ) {\r\n\r\n\t\t\t// only return track if there are actually keys.\r\n\t\t\tif ( animationKeys.length !== 0 ) {\r\n\r\n\t\t\t\tvar times = [];\r\n\t\t\t\tvar values = [];\r\n\r\n\t\t\t\tTHREE.AnimationUtils.flattenJSON(\r\n\t\t\t\t\t\tanimationKeys, times, values, propertyName );\r\n\r\n\t\t\t\t// empty keys are filtered out, so check again\r\n\t\t\t\tif ( times.length !== 0 ) {\r\n\r\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar tracks = [];\r\n\r\n\t\tvar clipName = animation.name || 'default';\r\n\t\t// automatic length determination in AnimationClip.\r\n\t\tvar duration = animation.length || -1;\r\n\t\tvar fps = animation.fps || 30;\r\n\r\n\t\tvar hierarchyTracks = animation.hierarchy || [];\r\n\r\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\r\n\r\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\r\n\r\n\t\t\t// skip empty tracks\r\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\r\n\r\n\t\t\t// process morph targets in a way exactly compatible\r\n\t\t\t// with AnimationHandler.init( animation )\r\n\t\t\tif ( animationKeys[0].morphTargets ) {\r\n\r\n\t\t\t\t// figure out all morph targets used in this track\r\n\t\t\t\tvar morphTargetNames = {};\r\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\r\n\r\n\t\t\t\t\tif ( animationKeys[k].morphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[k].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[k].morphTargets[m] ] = -1;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create a track for each morph target with all zero\r\n\t\t\t\t// morphTargetInfluences except for the keys in which\r\n\t\t\t\t// the morphTarget is named.\r\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\r\n\r\n\t\t\t\t\tvar times = [];\r\n\t\t\t\t\tvar values = [];\r\n\r\n\t\t\t\t\tfor ( var m = 0;\r\n\t\t\t\t\t\t\tm !== animationKeys[k].morphTargets.length; ++ m ) {\r\n\r\n\t\t\t\t\t\tvar animationKey = animationKeys[k];\r\n\r\n\t\t\t\t\t\ttimes.push( animationKey.time );\r\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttracks.push( new THREE.NumberKeyframeTrack(\r\n\t\t\t\t\t\t\t'.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\r\n\r\n\t\t\t} else {\r\n\t\t\t\t// ...assume skeletal animation\r\n\r\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.position',\r\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.QuaternionKeyframeTrack, boneName + '.quaternion',\r\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\r\n\r\n\t\t\t\taddNonemptyTrack(\r\n\t\t\t\t\t\tTHREE.VectorKeyframeTrack, boneName + '.scale',\r\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( tracks.length === 0 ) {\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar clip = new THREE.AnimationClip( clipName, duration, tracks );\r\n\r\n\t\treturn clip;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/animation/AnimationMixer.js\r\n\r\n/**\r\n *\r\n * Player for AnimationClips.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.AnimationMixer = function( root ) {\r\n\r\n\tthis._root = root;\r\n\tthis._initMemoryManager();\r\n\tthis._accuIndex = 0;\r\n\r\n\tthis.time = 0;\r\n\r\n\tthis.timeScale = 1.0;\r\n\r\n};\r\n\r\nObject.assign( THREE.AnimationMixer.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\t// return an action for a clip optionally using a custom root target\r\n\t// object (this method allocates a lot of dynamic memory in case a\r\n\t// previously unknown clip/root combination is specified)\r\n\tclipAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\r\n\t\t\tprototypeAction = null;\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\tvar existingAction =\r\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( existingAction !== undefined ) {\r\n\r\n\t\t\t\treturn existingAction;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// we know the clip, so we don't have to parse all\r\n\t\t\t// the bindings again but can just copy\r\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\r\n\r\n\t\t\t// also, take the clip from the prototype action\r\n\t\t\tif ( clipObject === null )\r\n\t\t\t\tclipObject = prototypeAction._clip;\r\n\r\n\t\t}\r\n\r\n\t\t// clip must be known when specified via string\r\n\t\tif ( clipObject === null ) return null;\r\n\r\n\t\t// allocate all resources required to run it\r\n\t\tvar newAction = new THREE.\r\n\t\t\t\tAnimationMixer._Action( this, clipObject, optionalRoot );\r\n\r\n\t\tthis._bindAction( newAction, prototypeAction );\r\n\r\n\t\t// and make the action known to the memory manager\r\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\r\n\r\n\t\treturn newAction;\r\n\r\n\t},\r\n\r\n\t// get an existing action\r\n\texistingAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar root = optionalRoot || this._root,\r\n\t\t\trootUuid = root.uuid,\r\n\r\n\t\t\tclipObject = typeof clip === 'string' ?\r\n\t\t\t\t\tTHREE.AnimationClip.findByName( root, clip ) : clip,\r\n\r\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\r\n\r\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// deactivates all previously scheduled actions\r\n\tstopAllAction: function() {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tthis._nActiveActions = 0;\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tactions[ i ].reset();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].useCount = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// advance the time and update apply the animation\r\n\tupdate: function( deltaTime ) {\r\n\r\n\t\tdeltaTime *= this.timeScale;\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tnActions = this._nActiveActions,\r\n\r\n\t\t\ttime = this.time += deltaTime,\r\n\t\t\ttimeDirection = Math.sign( deltaTime ),\r\n\r\n\t\t\taccuIndex = this._accuIndex ^= 1;\r\n\r\n\t\t// run active actions\r\n\r\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\r\n\r\n\t\t\tvar action = actions[ i ];\r\n\r\n\t\t\tif ( action.enabled ) {\r\n\r\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tnBindings = this._nActiveBindings;\r\n\r\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].apply( accuIndex );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// return this mixer's root target object\r\n\tgetRoot: function() {\r\n\r\n\t\treturn this._root;\r\n\r\n\t},\r\n\r\n\t// free all resources specific to a particular clip\r\n\tuncacheClip: function( clip ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tclipUuid = clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip !== undefined ) {\r\n\r\n\t\t\t// note: just calling _removeInactiveAction would mess up the\r\n\t\t\t// iteration state and also require updating the state we can\r\n\t\t\t// just throw away\r\n\r\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\r\n\r\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar action = actionsToRemove[ i ];\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\r\n\t\t\t\tvar cacheIndex = action._cacheIndex,\r\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\r\n\r\n\t\t\t\taction._cacheIndex = null;\r\n\t\t\t\taction._byClipCacheIndex = null;\r\n\r\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\t\t\tactions.pop();\r\n\r\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// free all resources specific to a particular root target object\r\n\tuncacheRoot: function( root ) {\r\n\r\n\t\tvar rootUuid = root.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip;\r\n\r\n\t\tfor ( var clipUuid in actionsByClip ) {\r\n\r\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\r\n\t\t\t\taction = actionByRoot[ rootUuid ];\r\n\r\n\t\t\tif ( action !== undefined ) {\r\n\r\n\t\t\t\tthis._deactivateAction( action );\r\n\t\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingByName !== undefined ) {\r\n\r\n\t\t\tfor ( var trackName in bindingByName ) {\r\n\r\n\t\t\t\tvar binding = bindingByName[ trackName ];\r\n\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// remove a targeted clip from the cache\r\n\tuncacheAction: function( clip, optionalRoot ) {\r\n\r\n\t\tvar action = this.existingAction( clip, optionalRoot );\r\n\r\n\t\tif ( action !== null ) {\r\n\r\n\t\t\tthis._deactivateAction( action );\r\n\t\t\tthis._removeInactiveAction( action );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\nTHREE.AnimationMixer._Action = THREE.AnimationAction._new;\r\n\r\n// Implementation details:\r\n\r\nObject.assign( THREE.AnimationMixer.prototype, {\r\n\r\n\t_bindAction: function( action, prototypeAction ) {\r\n\r\n\t\tvar root = action._localRoot || this._root,\r\n\t\t\ttracks = action._clip.tracks,\r\n\t\t\tnTracks = tracks.length,\r\n\t\t\tbindings = action._propertyBindings,\r\n\t\t\tinterpolants = action._interpolants,\r\n\t\t\trootUuid = root.uuid,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\r\n\r\n\t\tif ( bindingsByName === undefined ) {\r\n\r\n\t\t\tbindingsByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\r\n\r\n\t\t\tvar track = tracks[ i ],\r\n\t\t\t\ttrackName = track.name,\r\n\t\t\t\tbinding = bindingsByName[ trackName ];\r\n\r\n\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbinding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding !== undefined ) {\r\n\r\n\t\t\t\t\t// existing binding, make sure the cache knows\r\n\r\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\r\n\r\n\t\t\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar path = prototypeAction && prototypeAction.\r\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\r\n\r\n\t\t\t\tbinding = new THREE.PropertyMixer(\r\n\t\t\t\t\t\tTHREE.PropertyBinding.create( root, trackName, path ),\r\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\r\n\r\n\t\t\t\t++ binding.referenceCount;\r\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\r\n\r\n\t\t\t\tbindings[ i ] = binding;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_activateAction: function( action ) {\r\n\r\n\t\tif ( ! this._isActiveAction( action ) ) {\r\n\r\n\t\t\tif ( action._cacheIndex === null ) {\r\n\r\n\t\t\t\t// this action has been forgotten by the cache, but the user\r\n\t\t\t\t// appears to be still using it -> rebind\r\n\r\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\r\n\t\t\t\t\tclipUuid = action._clip.uuid,\r\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\r\n\r\n\t\t\t\tthis._bindAction( action,\r\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\r\n\r\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t// increment reference counts / sort out state\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\r\n\r\n\t\t\t\t\tthis._lendBinding( binding );\r\n\t\t\t\t\tbinding.saveOriginalState();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._lendAction( action );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_deactivateAction: function( action ) {\r\n\r\n\t\tif ( this._isActiveAction( action ) ) {\r\n\r\n\t\t\tvar bindings = action._propertyBindings;\r\n\r\n\t\t\t// decrement reference counts / sort out state\r\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\t\tif ( -- binding.useCount === 0 ) {\r\n\r\n\t\t\t\t\tbinding.restoreOriginalState();\r\n\t\t\t\t\tthis._takeBackBinding( binding );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._takeBackAction( action );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// Memory manager\r\n\r\n\t_initMemoryManager: function() {\r\n\r\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\r\n\t\tthis._nActiveActions = 0;\r\n\r\n\t\tthis._actionsByClip = {};\r\n\t\t// inside:\r\n\t\t// {\r\n\t\t// \t\tknownActions: Array< _Action >\t- used as prototypes\r\n\t\t// \t\tactionByRoot: _Action\t\t\t- lookup\r\n\t\t// }\r\n\r\n\r\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\r\n\t\tthis._nActiveBindings = 0;\r\n\r\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\r\n\r\n\r\n\t\tthis._controlInterpolants = []; // same game as above\r\n\t\tthis._nActiveControlInterpolants = 0;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tthis.stats = {\r\n\r\n\t\t\tactions: {\r\n\t\t\t\tget total() { return scope._actions.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveActions; }\r\n\t\t\t},\r\n\t\t\tbindings: {\r\n\t\t\t\tget total() { return scope._bindings.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveBindings; }\r\n\t\t\t},\r\n\t\t\tcontrolInterpolants: {\r\n\t\t\t\tget total() { return scope._controlInterpolants.length; },\r\n\t\t\t\tget inUse() { return scope._nActiveControlInterpolants; }\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\t// Memory management for _Action objects\r\n\r\n\t_isActiveAction: function( action ) {\r\n\r\n\t\tvar index = action._cacheIndex;\r\n\t\treturn index !== null && index < this._nActiveActions;\r\n\r\n\t},\r\n\r\n\t_addInactiveAction: function( action, clipUuid, rootUuid ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\r\n\r\n\t\tif ( actionsForClip === undefined ) {\r\n\r\n\t\t\tactionsForClip = {\r\n\r\n\t\t\t\tknownActions: [ action ],\r\n\t\t\t\tactionByRoot: {}\r\n\r\n\t\t\t};\r\n\r\n\t\t\taction._byClipCacheIndex = 0;\r\n\r\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar knownActions = actionsForClip.knownActions;\r\n\r\n\t\t\taction._byClipCacheIndex = knownActions.length;\r\n\t\t\tknownActions.push( action );\r\n\r\n\t\t}\r\n\r\n\t\taction._cacheIndex = actions.length;\r\n\t\tactions.push( action );\r\n\r\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\r\n\r\n\t},\r\n\r\n\t_removeInactiveAction: function( action ) {\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\r\n\t\t\tcacheIndex = action._cacheIndex;\r\n\r\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\r\n\t\tactions[ cacheIndex ] = lastInactiveAction;\r\n\t\tactions.pop();\r\n\r\n\t\taction._cacheIndex = null;\r\n\r\n\r\n\t\tvar clipUuid = action._clip.uuid,\r\n\t\t\tactionsByClip = this._actionsByClip,\r\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\r\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\r\n\r\n\t\t\tlastKnownAction =\r\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\r\n\r\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\r\n\r\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\r\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\r\n\t\tknownActionsForClip.pop();\r\n\r\n\t\taction._byClipCacheIndex = null;\r\n\r\n\r\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\r\n\t\t\trootUuid = ( actions._localRoot || this._root ).uuid;\r\n\r\n\t\tdelete actionByRoot[ rootUuid ];\r\n\r\n\t\tif ( knownActionsForClip.length === 0 ) {\r\n\r\n\t\t\tdelete actionsByClip[ clipUuid ];\r\n\r\n\t\t}\r\n\r\n\t\tthis._removeInactiveBindingsForAction( action );\r\n\r\n\t},\r\n\r\n\t_removeInactiveBindingsForAction: function( action ) {\r\n\r\n\t\tvar bindings = action._propertyBindings;\r\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar binding = bindings[ i ];\r\n\r\n\t\t\tif ( -- binding.referenceCount === 0 ) {\r\n\r\n\t\t\t\tthis._removeInactiveBinding( binding );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_lendAction: function( action ) {\r\n\r\n\t\t// [ active actions |  inactive actions  ]\r\n\t\t// [  active actions >| inactive actions ]\r\n\t\t//                 s        a\r\n\t\t//                  <-swap->\r\n\t\t//                 a        s\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveActions ++,\r\n\r\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\r\n\r\n\t\taction._cacheIndex = lastActiveIndex;\r\n\t\tactions[ lastActiveIndex ] = action;\r\n\r\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = firstInactiveAction;\r\n\r\n\t},\r\n\r\n\t_takeBackAction: function( action ) {\r\n\r\n\t\t// [  active actions  | inactive actions ]\r\n\t\t// [ active actions |< inactive actions  ]\r\n\t\t//        a        s\r\n\t\t//         <-swap->\r\n\t\t//        s        a\r\n\r\n\t\tvar actions = this._actions,\r\n\t\t\tprevIndex = action._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\r\n\r\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\r\n\r\n\t\taction._cacheIndex = firstInactiveIndex;\r\n\t\tactions[ firstInactiveIndex ] = action;\r\n\r\n\t\tlastActiveAction._cacheIndex = prevIndex;\r\n\t\tactions[ prevIndex ] = lastActiveAction;\r\n\r\n\t},\r\n\r\n\t// Memory management for PropertyMixer objects\r\n\r\n\t_addInactiveBinding: function( binding, rootUuid, trackName ) {\r\n\r\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tif ( bindingByName === undefined ) {\r\n\r\n\t\t\tbindingByName = {};\r\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\r\n\r\n\t\t}\r\n\r\n\t\tbindingByName[ trackName ] = binding;\r\n\r\n\t\tbinding._cacheIndex = bindings.length;\r\n\t\tbindings.push( binding );\r\n\r\n\t},\r\n\r\n\t_removeInactiveBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tpropBinding = binding.binding,\r\n\t\t\trootUuid = propBinding.rootNode.uuid,\r\n\t\t\ttrackName = propBinding.path,\r\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\r\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\r\n\r\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\r\n\t\t\tcacheIndex = binding._cacheIndex;\r\n\r\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\r\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\r\n\t\tbindings.pop();\r\n\r\n\t\tdelete bindingByName[ trackName ];\r\n\r\n\t\tremove_empty_map: {\r\n\r\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map;\r\n\r\n\t\t\tdelete bindingsByRoot[ rootUuid ];\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_lendBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\r\n\r\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = lastActiveIndex;\r\n\t\tbindings[ lastActiveIndex ] = binding;\r\n\r\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\r\n\r\n\t},\r\n\r\n\t_takeBackBinding: function( binding ) {\r\n\r\n\t\tvar bindings = this._bindings,\r\n\t\t\tprevIndex = binding._cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\r\n\r\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\r\n\r\n\t\tbinding._cacheIndex = firstInactiveIndex;\r\n\t\tbindings[ firstInactiveIndex ] = binding;\r\n\r\n\t\tlastActiveBinding._cacheIndex = prevIndex;\r\n\t\tbindings[ prevIndex ] = lastActiveBinding;\r\n\r\n\t},\r\n\r\n\r\n\t// Memory management of Interpolants for weight and time scale\r\n\r\n\t_lendControlInterpolant: function() {\r\n\r\n\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\r\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\r\n\r\n\t\tif ( interpolant === undefined ) {\r\n\r\n\t\t\tinterpolant = new THREE.LinearInterpolant(\r\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\r\n\t\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\r\n\r\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\r\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\r\n\r\n\t\t}\r\n\r\n\t\treturn interpolant;\r\n\r\n\t},\r\n\r\n\t_takeBackControlInterpolant: function( interpolant ) {\r\n\r\n\t\tvar interpolants = this._controlInterpolants,\r\n\t\t\tprevIndex = interpolant.__cacheIndex,\r\n\r\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\r\n\r\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\r\n\r\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\r\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\r\n\r\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\r\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\r\n\r\n\t},\r\n\r\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 )\r\n\r\n} );\r\n\r\n// File:src/animation/AnimationObjectGroup.js\r\n\r\n/**\r\n *\r\n * A group of objects that receives a shared animation state.\r\n *\r\n * Usage:\r\n *\r\n * \t-\tAdd objects you would otherwise pass as 'root' to the\r\n * \t\tconstructor or the .clipAction method of AnimationMixer.\r\n *\r\n * \t-\tInstead pass this object as 'root'.\r\n *\r\n * \t-\tYou can also add and remove objects later when the mixer\r\n * \t\tis running.\r\n *\r\n * Note:\r\n *\r\n *  \tObjects of this class appear as one object to the mixer,\r\n *  \tso cache control of the individual objects must be done\r\n *  \ton the group.\r\n *\r\n * Limitation:\r\n *\r\n * \t- \tThe animated properties must be compatible among the\r\n * \t\tall objects in the group.\r\n *\r\n *  -\tA single property can either be controlled through a\r\n *  \ttarget group or directly, but not both.\r\n *\r\n * @author tschw\r\n */\r\n\r\nTHREE.AnimationObjectGroup = function( var_args ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\t// cached objects followed by the active ones\r\n\tthis._objects = Array.prototype.slice.call( arguments );\r\n\r\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\r\n\t// note: read by PropertyBinding.Composite\r\n\r\n\tvar indices = {};\r\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\r\n\r\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\tindices[ arguments[ i ].uuid ] = i;\r\n\r\n\t}\r\n\r\n\tthis._paths = [];\t\t\t\t\t// inside: string\r\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\r\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\r\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.stats = {\r\n\r\n\t\tobjects: {\r\n\t\t\tget total() { return scope._objects.length; },\r\n\t\t\tget inUse() { return this.total - scope.nCachedObjects_;  }\r\n\t\t},\r\n\r\n\t\tget bindingsPerObject() { return scope._bindings.length; }\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.AnimationObjectGroup.prototype = {\r\n\r\n\tconstructor: THREE.AnimationObjectGroup,\r\n\r\n\tadd: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tpaths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index === undefined ) {\r\n\r\n\t\t\t\t// unknown object -> add it to the ACTIVE region\r\n\r\n\t\t\t\tindex = nObjects ++;\r\n\t\t\t\tindicesByUUID[ uuid ] = index;\r\n\t\t\t\tobjects.push( object );\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tbindings[ j ].push(\r\n\t\t\t\t\t\t\tnew THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( index < nCachedObjects ) {\r\n\r\n\t\t\t\tvar knownObject = objects[ index ];\r\n\r\n\t\t\t\t// move existing object to the ACTIVE region\r\n\r\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\r\n\t\t\t\tobjects[ firstActiveIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\r\n\t\t\t\t\tif ( binding === undefined ) {\r\n\r\n\t\t\t\t\t\t// since we do not bother to create new bindings\r\n\t\t\t\t\t\t// for objects that are cached, the binding may\r\n\t\t\t\t\t\t// or may not exist\r\n\r\n\t\t\t\t\t\tbinding = new THREE.PropertyBinding(\r\n\t\t\t\t\t\t\t\tobject, paths[ j ], parsedPaths[ j ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( objects[ index ] !== knownObject) {\r\n\r\n\t\t\t\tconsole.error( \"Different objects with the same UUID \" +\r\n\t\t\t\t\t\t\"detected. Clean the caches or recreate your \" +\r\n\t\t\t\t\t\t\"infrastructure when reloading scenes...\" );\r\n\r\n\t\t\t} // else the object is already where we want it to be\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\tremove: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\r\n\r\n\t\t\t\t// move existing object into the CACHED region\r\n\r\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\r\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\r\n\r\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\r\n\t\t\t\tobjects[ index ] = firstActiveObject;\r\n\r\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\r\n\t\t\t\tobjects[ lastCachedIndex ] = object;\r\n\r\n\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\r\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\r\n\r\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\r\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\t// remove & forget\r\n\tuncache: function( var_args ) {\r\n\r\n\t\tvar objects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tindicesByUUID = this._indicesByUUID,\r\n\t\t\tbindings = this._bindings,\r\n\t\t\tnBindings = bindings.length;\r\n\r\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = arguments[ i ],\r\n\t\t\t\tuuid = object.uuid,\r\n\t\t\t\tindex = indicesByUUID[ uuid ];\r\n\r\n\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\tdelete indicesByUUID[ uuid ];\r\n\r\n\t\t\t\tif ( index < nCachedObjects ) {\r\n\r\n\t\t\t\t\t// object is cached, shrink the CACHED region\r\n\r\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\r\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\r\n\t\t\t\t\t\tlastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\t// last cached object takes this object's place\r\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\r\n\r\n\t\t\t\t\t// last object goes to the activated slot and pop\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\r\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\r\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\r\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\r\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// object is active, just swap with the last and pop\r\n\r\n\t\t\t\t\tvar lastIndex = -- nObjects,\r\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\r\n\r\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\r\n\t\t\t\t\tobjects[ index ] = lastObject;\r\n\t\t\t\t\tobjects.pop();\r\n\r\n\t\t\t\t\t// accounting is done, now do the same for all bindings\r\n\r\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\r\n\r\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\r\n\r\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\r\n\t\t\t\t\t\tbindingsForPath.pop();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} // cached or active\r\n\r\n\t\t\t} // if object is known\r\n\r\n\t\t} // for arguments\r\n\r\n\t\tthis.nCachedObjects_ = nCachedObjects;\r\n\r\n\t},\r\n\r\n\t// Internal interface used by befriended PropertyBinding.Composite:\r\n\r\n\tsubscribe_: function( path, parsedPath ) {\r\n\t\t// returns an array of bindings for the given path that is changed\r\n\t\t// according to the contained objects in the group\r\n\r\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ],\r\n\t\t\tbindings = this._bindings;\r\n\r\n\t\tif ( index !== undefined ) return bindings[ index ];\r\n\r\n\t\tvar paths = this._paths,\r\n\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\tobjects = this._objects,\r\n\t\t\tnObjects = objects.length,\r\n\t\t\tnCachedObjects = this.nCachedObjects_,\r\n\t\t\tbindingsForPath = new Array( nObjects );\r\n\r\n\t\tindex = bindings.length;\r\n\r\n\t\tindicesByPath[ path ] = index;\r\n\r\n\t\tpaths.push( path );\r\n\t\tparsedPaths.push( parsedPath );\r\n\t\tbindings.push( bindingsForPath );\r\n\r\n\t\tfor ( var i = nCachedObjects,\r\n\t\t\t\tn = objects.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar object = objects[ i ];\r\n\r\n\t\t\tbindingsForPath[ i ] =\r\n\t\t\t\t\tnew THREE.PropertyBinding( object, path, parsedPath );\r\n\r\n\t\t}\r\n\r\n\t\treturn bindingsForPath;\r\n\r\n\t},\r\n\r\n\tunsubscribe_: function( path ) {\r\n\t\t// tells the group to forget about a property path and no longer\r\n\t\t// update the array previously obtained with 'subscribe_'\r\n\r\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\r\n\t\t\tindex = indicesByPath[ path ];\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar paths = this._paths,\r\n\t\t\t\tparsedPaths = this._parsedPaths,\r\n\t\t\t\tbindings = this._bindings,\r\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\r\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\r\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\r\n\r\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\r\n\r\n\t\t\tbindings[ index ] = lastBindings;\r\n\t\t\tbindings.pop();\r\n\r\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\r\n\t\t\tparsedPaths.pop();\r\n\r\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\r\n\t\t\tpaths.pop();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/animation/AnimationUtils.js\r\n\r\n/**\r\n * @author tschw\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n */\r\n\r\nTHREE.AnimationUtils = {\r\n\r\n\t// same as Array.prototype.slice, but also works on typed arrays\r\n\tarraySlice: function( array, from, to ) {\r\n\r\n\t\tif ( THREE.AnimationUtils.isTypedArray( array ) ) {\r\n\r\n\t\t\treturn new array.constructor( array.subarray( from, to ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn array.slice( from, to );\r\n\r\n\t},\r\n\r\n\t// converts an array to a specific type\r\n\tconvertArray: function( array, type, forceClone ) {\r\n\r\n\t\tif ( ! array || // let 'undefined' and 'null' pass\r\n\t\t\t\t! forceClone && array.constructor === type ) return array;\r\n\r\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\r\n\r\n\t\t\treturn new type( array ); // create typed array\r\n\r\n\t\t}\r\n\r\n\t\treturn Array.prototype.slice.call( array ); // create Array\r\n\r\n\t},\r\n\r\n\tisTypedArray: function( object ) {\r\n\r\n\t\treturn ArrayBuffer.isView( object ) &&\r\n\t\t\t\t! ( object instanceof DataView );\r\n\r\n\t},\r\n\r\n\t// returns an array by which times and values can be sorted\r\n\tgetKeyframeOrder: function( times ) {\r\n\r\n\t\tfunction compareTime( i, j ) {\r\n\r\n\t\t\treturn times[ i ] - times[ j ];\r\n\r\n\t\t}\r\n\r\n\t\tvar n = times.length;\r\n\t\tvar result = new Array( n );\r\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\r\n\r\n\t\tresult.sort( compareTime );\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\r\n\tsortedArray: function( values, stride, order ) {\r\n\r\n\t\tvar nValues = values.length;\r\n\t\tvar result = new values.constructor( nValues );\r\n\r\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\r\n\r\n\t\t\tvar srcOffset = order[ i ] * stride;\r\n\r\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\t// function for parsing AOS keyframe formats\r\n\tflattenJSON: function( jsonKeys, times, values, valuePropertyName ) {\r\n\r\n\t\tvar i = 1, key = jsonKeys[ 0 ];\r\n\r\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\r\n\r\n\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( key === undefined ) return; // no data\r\n\r\n\t\tvar value = key[ valuePropertyName ];\r\n\t\tif ( value === undefined ) return; // no data\r\n\r\n\t\tif ( Array.isArray( value ) ) {\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t} else if ( value.toArray !== undefined ) {\r\n\t\t\t// ...assume THREE.Math-ish\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalue.toArray( values, values.length );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t} else {\r\n\t\t\t// otherwise push as-is\r\n\r\n\t\t\tdo {\r\n\r\n\t\t\t\tvalue = key[ valuePropertyName ];\r\n\r\n\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\ttimes.push( key.time );\r\n\t\t\t\t\tvalues.push( value );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tkey = jsonKeys[ i ++ ];\r\n\r\n\t\t\t} while ( key !== undefined );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/KeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A timed sequence of keyframes for a specific property.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.KeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tif( name === undefined ) throw new Error( \"track name is undefined\" );\r\n\r\n\tif( times === undefined || times.length === 0 ) {\r\n\r\n\t\tthrow new Error( \"no keyframes in track named \" + name );\r\n\r\n\t}\r\n\r\n\tthis.name = name;\r\n\r\n\tthis.times = THREE.AnimationUtils.convertArray( times, this.TimeBufferType );\r\n\tthis.values = THREE.AnimationUtils.convertArray( values, this.ValueBufferType );\r\n\r\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\r\n\r\n\tthis.validate();\r\n\tthis.optimize();\r\n\r\n};\r\n\r\nTHREE.KeyframeTrack.prototype = {\r\n\r\n\tconstructor: THREE.KeyframeTrack,\r\n\r\n\tTimeBufferType: Float32Array,\r\n\tValueBufferType: Float32Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\r\n\tInterpolantFactoryMethodDiscrete: function( result ) {\r\n\r\n\t\treturn new THREE.DiscreteInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n\t\treturn new THREE.LinearInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodSmooth: function( result ) {\r\n\r\n\t\treturn new THREE.CubicInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tsetInterpolation: function( interpolation ) {\r\n\r\n\t\tvar factoryMethod;\r\n\r\n\t\tswitch ( interpolation ) {\r\n\r\n\t\t\tcase THREE.InterpolateDiscrete:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.InterpolateLinear:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.InterpolateSmooth:\r\n\r\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tif ( factoryMethod === undefined ) {\r\n\r\n\t\t\tvar message = \"unsupported interpolation for \" +\r\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\r\n\r\n\t\t\tif ( this.createInterpolant === undefined ) {\r\n\r\n\t\t\t\t// fall back to default, unless the default itself is messed up\r\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\r\n\r\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconsole.warn( message );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.createInterpolant = factoryMethod;\r\n\r\n\t},\r\n\r\n\tgetInterpolation: function() {\r\n\r\n\t\tswitch ( this.createInterpolant ) {\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\r\n\r\n\t\t\t\treturn THREE.InterpolateDiscrete;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodLinear:\r\n\r\n\t\t\t\treturn THREE.InterpolateLinear;\r\n\r\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\r\n\r\n\t\t\t\treturn THREE.InterpolateSmooth;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetValueSize: function() {\r\n\r\n\t\treturn this.values.length / this.times.length;\r\n\r\n\t},\r\n\r\n\t// move all keyframes either forwards or backwards in time\r\n\tshift: function( timeOffset ) {\r\n\r\n\t\tif( timeOffset !== 0.0 ) {\r\n\r\n\t\t\tvar times = this.times;\r\n\r\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] += timeOffset;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\r\n\tscale: function( timeScale ) {\r\n\r\n\t\tif( timeScale !== 1.0 ) {\r\n\r\n\t\t\tvar times = this.times;\r\n\r\n\t\t\tfor( var i = 0, n = times.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\ttimes[ i ] *= timeScale;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\r\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\r\n\ttrim: function( startTime, endTime ) {\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tnKeys = times.length,\r\n\t\t\tfrom = 0,\r\n\t\t\tto = nKeys - 1;\r\n\r\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\r\n\t\twhile ( to !== -1 && times[ to ] > endTime ) -- to;\r\n\r\n\t\t++ to; // inclusive -> exclusive bound\r\n\r\n\t\tif( from !== 0 || to !== nKeys ) {\r\n\r\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\r\n\t\t\tif ( from >= to ) to = Math.max( to , 1 ), from = to - 1;\r\n\r\n\t\t\tvar stride = this.getValueSize();\r\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, from, to );\r\n\t\t\tthis.values = THREE.AnimationUtils.\r\n\t\t\t\t\tarraySlice( this.values, from * stride, to * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\r\n\tvalidate: function() {\r\n\r\n\t\tvar valid = true;\r\n\r\n\t\tvar valueSize = this.getValueSize();\r\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\r\n\r\n\t\t\tconsole.error( \"invalid value size in track\", this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tvalues = this.values,\r\n\r\n\t\t\tnKeys = times.length;\r\n\r\n\t\tif( nKeys === 0 ) {\r\n\r\n\t\t\tconsole.error( \"track is empty\", this );\r\n\t\t\tvalid = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar prevTime = null;\r\n\r\n\t\tfor( var i = 0; i !== nKeys; i ++ ) {\r\n\r\n\t\t\tvar currTime = times[ i ];\r\n\r\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\r\n\r\n\t\t\t\tconsole.error( \"time is not a valid number\", this, i, currTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif( prevTime !== null && prevTime > currTime ) {\r\n\r\n\t\t\t\tconsole.error( \"out of order keys\", this, i, currTime, prevTime );\r\n\t\t\t\tvalid = false;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprevTime = currTime;\r\n\r\n\t\t}\r\n\r\n\t\tif ( values !== undefined ) {\r\n\r\n\t\t\tif ( THREE.AnimationUtils.isTypedArray( values ) ) {\r\n\r\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tvar value = values[ i ];\r\n\r\n\t\t\t\t\tif ( isNaN( value ) ) {\r\n\r\n\t\t\t\t\t\tconsole.error( \"value is not a valid number\", this, i, value );\r\n\t\t\t\t\t\tvalid = false;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn valid;\r\n\r\n\t},\r\n\r\n\t// removes equivalent sequential keys as common in morph target sequences\r\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\r\n\toptimize: function() {\r\n\r\n\t\tvar times = this.times,\r\n\t\t\tvalues = this.values,\r\n\t\t\tstride = this.getValueSize(),\r\n\r\n\t\t\twriteIndex = 1;\r\n\r\n\t\tfor( var i = 1, n = times.length - 1; i <= n; ++ i ) {\r\n\r\n\t\t\tvar keep = false;\r\n\r\n\t\t\tvar time = times[ i ];\r\n\t\t\tvar timeNext = times[ i + 1 ];\r\n\r\n\t\t\t// remove adjacent keyframes scheduled at the same time\r\n\r\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\r\n\r\n\t\t\t\t// remove unnecessary keyframes same as their neighbors\r\n\t\t\t\tvar offset = i * stride,\r\n\t\t\t\t\toffsetP = offset - stride,\r\n\t\t\t\t\toffsetN = offset + stride;\r\n\r\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\tvar value = values[ offset + j ];\r\n\r\n\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\r\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\r\n\r\n\t\t\t\t\t\tkeep = true;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// in-place compaction\r\n\r\n\t\t\tif ( keep ) {\r\n\r\n\t\t\t\tif ( i !== writeIndex ) {\r\n\r\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\r\n\r\n\t\t\t\t\tvar readOffset = i * stride,\r\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\r\n\r\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\r\n\r\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t++ writeIndex;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( writeIndex !== times.length ) {\r\n\r\n\t\t\tthis.times = THREE.AnimationUtils.arraySlice( times, 0, writeIndex );\r\n\t\t\tthis.values = THREE.AnimationUtils.arraySlice( values, 0, writeIndex * stride );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// Static methods:\r\n\r\nObject.assign( THREE.KeyframeTrack, {\r\n\r\n\t// Serialization (in static context, because of constructor invocation\r\n\t// and automatic invocation of .toJSON):\r\n\r\n\tparse: function( json ) {\r\n\r\n\t\tif( json.type === undefined ) {\r\n\r\n\t\t\tthrow new Error( \"track type undefined, can not parse\" );\r\n\r\n\t\t}\r\n\r\n\t\tvar trackType = THREE.KeyframeTrack._getTrackTypeForValueTypeName( json.type );\r\n\r\n\t\tif ( json.times === undefined ) {\r\n\r\n\t\t\tvar times = [], values = [];\r\n\r\n\t\t\tTHREE.AnimationUtils.flattenJSON( json.keys, times, values, 'value' );\r\n\r\n\t\t\tjson.times = times;\r\n\t\t\tjson.values = values;\r\n\r\n\t\t}\r\n\r\n\t\t// derived classes can define a static parse method\r\n\t\tif ( trackType.parse !== undefined ) {\r\n\r\n\t\t\treturn trackType.parse( json );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we asssume a constructor compatible with the base\r\n\t\t\treturn new trackType(\r\n\t\t\t\t\tjson.name, json.times, json.values, json.interpolation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function( track ) {\r\n\r\n\t\tvar trackType = track.constructor;\r\n\r\n\t\tvar json;\r\n\r\n\t\t// derived classes can define a static toJSON method\r\n\t\tif ( trackType.toJSON !== undefined ) {\r\n\r\n\t\t\tjson = trackType.toJSON( track );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// by default, we assume the data can be serialized as-is\r\n\t\t\tjson = {\r\n\r\n\t\t\t\t'name': track.name,\r\n\t\t\t\t'times': THREE.AnimationUtils.convertArray( track.times, Array ),\r\n\t\t\t\t'values': THREE.AnimationUtils.convertArray( track.values, Array )\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar interpolation = track.getInterpolation();\r\n\r\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\r\n\r\n\t\t\t\tjson.interpolation = interpolation;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tjson.type = track.ValueTypeName; // mandatory\r\n\r\n\t\treturn json;\r\n\r\n\t},\r\n\r\n\t_getTrackTypeForValueTypeName: function( typeName ) {\r\n\r\n\t\tswitch( typeName.toLowerCase() ) {\r\n\r\n\t\t\tcase \"scalar\":\r\n\t\t\tcase \"double\":\r\n\t\t\tcase \"float\":\r\n\t\t\tcase \"number\":\r\n\t\t\tcase \"integer\":\r\n\r\n\t\t\t\treturn THREE.NumberKeyframeTrack;\r\n\r\n\t\t\tcase \"vector\":\r\n\t\t\tcase \"vector2\":\r\n\t\t\tcase \"vector3\":\r\n\t\t\tcase \"vector4\":\r\n\r\n\t\t\t\treturn THREE.VectorKeyframeTrack;\r\n\r\n\t\t\tcase \"color\":\r\n\r\n\t\t\t\treturn THREE.ColorKeyframeTrack;\r\n\r\n\t\t\tcase \"quaternion\":\r\n\r\n\t\t\t\treturn THREE.QuaternionKeyframeTrack;\r\n\r\n\t\t\tcase \"bool\":\r\n\t\t\tcase \"boolean\":\r\n\r\n\t\t\t\treturn THREE.BooleanKeyframeTrack;\r\n\r\n\t\t\tcase \"string\":\r\n\r\n\t\t\t\treturn THREE.StringKeyframeTrack;\r\n\r\n\t\t}\r\n\r\n\t\tthrow new Error( \"Unsupported typeName: \" + typeName );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/animation/PropertyBinding.js\r\n\r\n/**\r\n *\r\n * A reference to a real property in the scene graph.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.PropertyBinding = function ( rootNode, path, parsedPath ) {\r\n\r\n\tthis.path = path;\r\n\tthis.parsedPath = parsedPath ||\r\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\r\n\tthis.node = THREE.PropertyBinding.findNode(\r\n\t\t\trootNode, this.parsedPath.nodeName ) || rootNode;\r\n\r\n\tthis.rootNode = rootNode;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding,\r\n\r\n\tgetValue: function getValue_unbound( targetArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.getValue( targetArray, offset );\r\n\r\n\t\t// Note: This class uses a State pattern on a per-method basis:\r\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\r\n\t\t// prototype version of these methods with one that represents\r\n\t\t// the bound state. When the property is not found, the methods\r\n\t\t// become no-ops.\r\n\r\n\t},\r\n\r\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\r\n\r\n\t\tthis.bind();\r\n\t\tthis.setValue( sourceArray, offset );\r\n\r\n\t},\r\n\r\n\t// create getter / setter pair for a property in the scene graph\r\n\tbind: function() {\r\n\r\n\t\tvar targetObject = this.node,\r\n\t\t\tparsedPath = this.parsedPath,\r\n\r\n\t\t\tobjectName = parsedPath.objectName,\r\n\t\t\tpropertyName = parsedPath.propertyName,\r\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\r\n\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\ttargetObject = THREE.PropertyBinding.findNode(\r\n\t\t\t\t\tthis.rootNode, parsedPath.nodeName ) || this.rootNode;\r\n\r\n\t\t\tthis.node = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// set fail state so we can just 'return' on error\r\n\t\tthis.getValue = this._getValue_unavailable;\r\n\t\tthis.setValue = this._setValue_unavailable;\r\n\r\n \t\t// ensure there is a value node\r\n\t\tif ( ! targetObject ) {\r\n\r\n\t\t\tconsole.error( \"  trying to update node for track: \" + this.path + \" but it wasn't found.\" );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif( objectName ) {\r\n\r\n\t\t\tvar objectIndex = parsedPath.objectIndex;\r\n\r\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\r\n\t\t\tswitch ( objectName ) {\r\n\r\n\t\t\t\tcase 'materials':\r\n\r\n\t\t\t\t\tif( ! targetObject.material ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material as node does not have a material', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif( ! targetObject.material.materials ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to material.materials as node.material does not have a materials array', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject.material.materials;\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'bones':\r\n\r\n\t\t\t\t\tif( ! targetObject.skeleton ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to bones as node does not have a skeleton', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\r\n\t\t\t\t\t// and convert the integer string to a true integer.\r\n\r\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\r\n\r\n\t\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\r\n\r\n\t\t\t\t\t\tif ( targetObject[i].name === objectIndex ) {\r\n\r\n\t\t\t\t\t\t\tobjectIndex = i;\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\r\n\r\n\t\t\t\t\t\tconsole.error( '  can not bind to objectName of node, undefined', this );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( objectIndex !== undefined ) {\r\n\r\n\t\t\t\tif( targetObject[ objectIndex ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.error( \"  trying to bind to objectIndex of objectName, but is undefined:\", this, targetObject );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// resolve property\r\n\t\tvar nodeProperty = targetObject[ propertyName ];\r\n\r\n\t\tif ( ! nodeProperty ) {\r\n\r\n\t\t\tvar nodeName = parsedPath.nodeName;\r\n\r\n\t\t\tconsole.error( \"  trying to update property for track: \" + nodeName +\r\n\t\t\t\t\t'.' + propertyName + \" but it wasn't found.\", targetObject );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// determine versioning scheme\r\n\t\tvar versioning = this.Versioning.None;\r\n\r\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\r\n\r\n\t\t\tversioning = this.Versioning.NeedsUpdate;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\r\n\r\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\r\n\t\t\tthis.targetObject = targetObject;\r\n\r\n\t\t}\r\n\r\n\t\t// determine how the property gets bound\r\n\t\tvar bindingType = this.BindingType.Direct;\r\n\r\n\t\tif ( propertyIndex !== undefined ) {\r\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\r\n\r\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\r\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\r\n\r\n\t\t\t\t// support resolving morphTarget names into indices.\r\n\t\t\t\tif ( ! targetObject.geometry ) {\r\n\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\r\n\r\n\t\t\t\t\tconsole.error( '  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets', this );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( targetObject.geometry.morphTargets[i].name === propertyIndex ) {\r\n\r\n\t\t\t\t\t\tpropertyIndex = i;\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbindingType = this.BindingType.ArrayElement;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\t\t\tthis.propertyIndex = propertyIndex;\r\n\r\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\r\n\t\t\t// must use copy for Object3D.Euler/Quaternion\r\n\r\n\t\t\tbindingType = this.BindingType.HasFromToArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else if ( nodeProperty.length !== undefined ) {\r\n\r\n\t\t\tbindingType = this.BindingType.EntireArray;\r\n\r\n\t\t\tthis.resolvedProperty = nodeProperty;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.propertyName = propertyName;\r\n\r\n\t\t}\r\n\r\n\t\t// select getter / setter\r\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\r\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tthis.node = null;\r\n\r\n\t\t// back to the prototype version of getValue / setValue\r\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\r\n\t\tthis.getValue = this._getValue_unbound;\r\n\t\tthis.setValue = this._setValue_unbound;\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.PropertyBinding.prototype, { // prototype, continued\r\n\r\n\t// these are used to \"bind\" a nonexistent property\r\n\t_getValue_unavailable: function() {},\r\n\t_setValue_unavailable: function() {},\r\n\r\n\t// initial state of these methods that calls 'bind'\r\n\t_getValue_unbound: THREE.PropertyBinding.prototype.getValue,\r\n\t_setValue_unbound: THREE.PropertyBinding.prototype.setValue,\r\n\r\n\tBindingType: {\r\n\t\tDirect: 0,\r\n\t\tEntireArray: 1,\r\n\t\tArrayElement: 2,\r\n\t\tHasFromToArray: 3\r\n\t},\r\n\r\n\tVersioning: {\r\n\t\tNone: 0,\r\n\t\tNeedsUpdate: 1,\r\n\t\tMatrixWorldNeedsUpdate: 2\r\n\t},\r\n\r\n\tGetterByBindingType: [\r\n\r\n\t\tfunction getValue_direct( buffer, offset ) {\r\n\r\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_array( buffer, offset ) {\r\n\r\n\t\t\tvar source = this.resolvedProperty;\r\n\r\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\r\n\r\n\t\t},\r\n\r\n\t\tfunction getValue_toArray( buffer, offset ) {\r\n\r\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\r\n\r\n\t\t}\r\n\r\n\t],\r\n\r\n\tSetterByBindingTypeAndVersioning: [\r\n\r\n\t\t[\r\n\t\t\t// Direct\r\n\r\n\t\t\tfunction setValue_direct( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.node[ this.propertyName ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// EntireArray\r\n\r\n\t\t\tfunction setValue_array( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tvar dest = this.resolvedProperty;\r\n\r\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// ArrayElement\r\n\r\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t], [\r\n\r\n\t\t\t// HasToFromArray\r\n\r\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\tthis.targetObject.needsUpdate = true;\r\n\r\n\t\t\t},\r\n\r\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\r\n\r\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\r\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t]\r\n\r\n\t]\r\n\r\n} );\r\n\r\nTHREE.PropertyBinding.Composite =\r\n\t\tfunction( targetGroup, path, optionalParsedPath ) {\r\n\r\n\tvar parsedPath = optionalParsedPath ||\r\n\t\t\tTHREE.PropertyBinding.parseTrackName( path );\r\n\r\n\tthis._targetGroup = targetGroup;\r\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.Composite.prototype = {\r\n\r\n\tconstructor: THREE.PropertyBinding.Composite,\r\n\r\n\tgetValue: function( array, offset ) {\r\n\r\n\t\tthis.bind(); // bind all binding\r\n\r\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\r\n\t\t\tbinding = this._bindings[ firstValidIndex ];\r\n\r\n\t\t// and only call .getValue on the first\r\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\r\n\r\n\t},\r\n\r\n\tsetValue: function( array, offset ) {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].setValue( array, offset );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tbind: function() {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].bind();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tunbind: function() {\r\n\r\n\t\tvar bindings = this._bindings;\r\n\r\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\r\n\t\t\t\tn = bindings.length; i !== n; ++ i ) {\r\n\r\n\t\t\tbindings[ i ].unbind();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.create = function( root, path, parsedPath ) {\r\n\r\n\tif ( ! ( root instanceof THREE.AnimationObjectGroup ) ) {\r\n\r\n\t\treturn new THREE.PropertyBinding( root, path, parsedPath );\r\n\r\n\t} else {\r\n\r\n\t\treturn new THREE.PropertyBinding.Composite( root, path, parsedPath );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.parseTrackName = function( trackName ) {\r\n\r\n\t// matches strings in the form of:\r\n\t//    nodeName.property\r\n\t//    nodeName.property[accessor]\r\n\t//    nodeName.material.property[accessor]\r\n\t//    uuid.property[accessor]\r\n\t//    uuid.objectName[objectIndex].propertyName[propertyIndex]\r\n\t//    parentName/nodeName.property\r\n\t//    parentName/parentName/nodeName.property[index]\r\n\t//\t  .bone[Armature.DEF_cog].position\r\n\t// created and tested via https://regex101.com/#javascript\r\n\r\n\tvar re = /^(([\\w]+\\/)*)([\\w-\\d]+)?(\\.([\\w]+)(\\[([\\w\\d\\[\\]\\_.:\\- ]+)\\])?)?(\\.([\\w.]+)(\\[([\\w\\d\\[\\]\\_. ]+)\\])?)$/;\r\n\tvar matches = re.exec(trackName);\r\n\r\n\tif( ! matches ) {\r\n\t\tthrow new Error( \"cannot parse trackName at all: \" + trackName );\r\n\t}\r\n\r\n    if (matches.index === re.lastIndex) {\r\n        re.lastIndex++;\r\n    }\r\n\r\n\tvar results = {\r\n\t\t// directoryName: matches[1], // (tschw) currently unused\r\n\t\tnodeName: matches[3], \t// allowed to be null, specified root node.\r\n\t\tobjectName: matches[5],\r\n\t\tobjectIndex: matches[7],\r\n\t\tpropertyName: matches[9],\r\n\t\tpropertyIndex: matches[11]\t// allowed to be null, specifies that the whole property is set.\r\n\t};\r\n\r\n\tif( results.propertyName === null || results.propertyName.length === 0 ) {\r\n\t\tthrow new Error( \"can not parse propertyName from trackName: \" + trackName );\r\n\t}\r\n\r\n\treturn results;\r\n\r\n};\r\n\r\nTHREE.PropertyBinding.findNode = function( root, nodeName ) {\r\n\r\n\tif( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid ) {\r\n\r\n\t\treturn root;\r\n\r\n\t}\r\n\r\n\t// search into skeleton bones.\r\n\tif( root.skeleton ) {\r\n\r\n\t\tvar searchSkeleton = function( skeleton ) {\r\n\r\n\t\t\tfor( var i = 0; i < skeleton.bones.length; i ++ ) {\r\n\r\n\t\t\t\tvar bone = skeleton.bones[i];\r\n\r\n\t\t\t\tif( bone.name === nodeName ) {\r\n\r\n\t\t\t\t\treturn bone;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t\tvar bone = searchSkeleton( root.skeleton );\r\n\r\n\t\tif( bone ) {\r\n\r\n\t\t\treturn bone;\r\n\r\n\t\t}\r\n\t}\r\n\r\n\t// search into node subtree.\r\n\tif( root.children ) {\r\n\r\n\t\tvar searchNodeSubtree = function( children ) {\r\n\r\n\t\t\tfor( var i = 0; i < children.length; i ++ ) {\r\n\r\n\t\t\t\tvar childNode = children[i];\r\n\r\n\t\t\t\tif( childNode.name === nodeName || childNode.uuid === nodeName ) {\r\n\r\n\t\t\t\t\treturn childNode;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar result = searchNodeSubtree( childNode.children );\r\n\r\n\t\t\t\tif( result ) return result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t};\r\n\r\n\t\tvar subTreeNode = searchNodeSubtree( root.children );\r\n\r\n\t\tif( subTreeNode ) {\r\n\r\n\t\t\treturn subTreeNode;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n};\r\n\r\n// File:src/animation/PropertyMixer.js\r\n\r\n/**\r\n *\r\n * Buffered scene graph property that allows weighted accumulation.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.PropertyMixer = function ( binding, typeName, valueSize ) {\r\n\r\n\tthis.binding = binding;\r\n\tthis.valueSize = valueSize;\r\n\r\n\tvar bufferType = Float64Array,\r\n\t\tmixFunction;\r\n\r\n\tswitch ( typeName ) {\r\n\r\n\t\tcase 'quaternion':\t\t\tmixFunction = this._slerp;\t\tbreak;\r\n\r\n\t\tcase 'string':\r\n\t\tcase 'bool':\r\n\r\n\t\t\tbufferType = Array,\t\tmixFunction = this._select;\t\tbreak;\r\n\r\n\t\tdefault:\t\t\t\t\tmixFunction = this._lerp;\r\n\r\n\t}\r\n\r\n\tthis.buffer = new bufferType( valueSize * 4 );\r\n\t// layout: [ incoming | accu0 | accu1 | orig ]\r\n\t//\r\n\t// interpolators can use .buffer as their .result\r\n\t// the data then goes to 'incoming'\r\n\t//\r\n\t// 'accu0' and 'accu1' are used frame-interleaved for\r\n\t// the cumulative result and are compared to detect\r\n\t// changes\r\n\t//\r\n\t// 'orig' stores the original state of the property\r\n\r\n\tthis._mixBufferRegion = mixFunction;\r\n\r\n\tthis.cumulativeWeight = 0;\r\n\r\n\tthis.useCount = 0;\r\n\tthis.referenceCount = 0;\r\n\r\n};\r\n\r\nTHREE.PropertyMixer.prototype = {\r\n\r\n\tconstructor: THREE.PropertyMixer,\r\n\r\n\t// accumulate data in the 'incoming' region into 'accu<i>'\r\n\taccumulate: function( accuIndex, weight ) {\r\n\r\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\r\n\t\t// the weight and shouldn't have made the call in the first place\r\n\r\n\t\tvar buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tcurrentWeight = this.cumulativeWeight;\r\n\r\n\t\tif ( currentWeight === 0 ) {\r\n\r\n\t\t\t// accuN := incoming * weight\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentWeight = weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// accuN := accuN + incoming * weight\r\n\r\n\t\t\tcurrentWeight += weight;\r\n\t\t\tvar mix = weight / currentWeight;\r\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = currentWeight;\r\n\r\n\t},\r\n\r\n\t// apply the state of 'accu<i>' to the binding when accus differ\r\n\tapply: function( accuIndex ) {\r\n\r\n\t\tvar stride = this.valueSize,\r\n\t\t\tbuffer = this.buffer,\r\n\t\t\toffset = accuIndex * stride + stride,\r\n\r\n\t\t\tweight = this.cumulativeWeight,\r\n\r\n\t\t\tbinding = this.binding;\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t\tif ( weight < 1 ) {\r\n\r\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\r\n\r\n\t\t\tvar originalValueOffset = stride * 3;\r\n\r\n\t\t\tthis._mixBufferRegion(\r\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\r\n\r\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\r\n\r\n\t\t\t\t// value has changed -> update scene graph\r\n\r\n\t\t\t\tbinding.setValue( buffer, offset );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// remember the state of the bound property and copy it to both accus\r\n\tsaveOriginalState: function() {\r\n\r\n\t\tvar binding = this.binding;\r\n\r\n\t\tvar buffer = this.buffer,\r\n\t\t\tstride = this.valueSize,\r\n\r\n\t\t\toriginalValueOffset = stride * 3;\r\n\r\n\t\tbinding.getValue( buffer, originalValueOffset );\r\n\r\n\t\t// accu[0..1] := orig -- initially detect changes against the original\r\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\r\n\r\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\r\n\r\n\t\t}\r\n\r\n\t\tthis.cumulativeWeight = 0;\r\n\r\n\t},\r\n\r\n\t// apply the state previously taken via 'saveOriginalState' to the binding\r\n\trestoreOriginalState: function() {\r\n\r\n\t\tvar originalValueOffset = this.valueSize * 3;\r\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\r\n\r\n\t},\r\n\r\n\r\n\t// mix functions\r\n\r\n\t_select: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tif ( t >= 0.5 ) {\r\n\r\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t_slerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tTHREE.Quaternion.slerpFlat( buffer, dstOffset,\r\n\t\t\t\tbuffer, dstOffset, buffer, srcOffset, t );\r\n\r\n\t},\r\n\r\n\t_lerp: function( buffer, dstOffset, srcOffset, t, stride ) {\r\n\r\n\t\tvar s = 1 - t;\r\n\r\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\r\n\r\n\t\t\tvar j = dstOffset + i;\r\n\r\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/animation/tracks/BooleanKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of Boolean keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.BooleanKeyframeTrack = function ( name, times, values ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values );\r\n\r\n};\r\n\r\nTHREE.BooleanKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.BooleanKeyframeTrack,\r\n\r\n\tValueTypeName: 'bool',\r\n\tValueBufferType: Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateDiscrete,\r\n\r\n\tInterpolantFactoryMethodLinear: undefined,\r\n\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n\t// Note: Actually this track could have a optimized / compressed\r\n\t// representation of a single value and a custom interpolant that\r\n\t// computes \"firstValue ^ isOdd( index )\".\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/ColorKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of keyframe values that represent color.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.ColorKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.ColorKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.ColorKeyframeTrack,\r\n\r\n\tValueTypeName: 'color'\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n\r\n\t// Note: Very basic implementation and nothing special yet.\r\n\t// However, this is the place for color space parameterization.\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/NumberKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of numeric keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.NumberKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.NumberKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.NumberKeyframeTrack,\r\n\r\n\tValueTypeName: 'number',\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/QuaternionKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of quaternion keyframe values.\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.QuaternionKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.QuaternionKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.QuaternionKeyframeTrack,\r\n\r\n\tValueTypeName: 'quaternion',\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\tDefaultInterpolation: THREE.InterpolateLinear,\r\n\r\n\tInterpolantFactoryMethodLinear: function( result ) {\r\n\r\n\t\treturn new THREE.QuaternionLinearInterpolant(\r\n\t\t\t\tthis.times, this.values, this.getValueSize(), result );\r\n\r\n\t},\r\n\r\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/StringKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track that interpolates Strings\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.StringKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.StringKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.StringKeyframeTrack,\r\n\r\n\tValueTypeName: 'string',\r\n\tValueBufferType: Array,\r\n\r\n\tDefaultInterpolation: THREE.InterpolateDiscrete,\r\n\r\n\tInterpolantFactoryMethodLinear: undefined,\r\n\r\n\tInterpolantFactoryMethodSmooth: undefined\r\n\r\n} );\r\n\r\n// File:src/animation/tracks/VectorKeyframeTrack.js\r\n\r\n/**\r\n *\r\n * A Track of vectored keyframe values.\r\n *\r\n *\r\n * @author Ben Houston / http://clara.io/\r\n * @author David Sarno / http://lighthaus.us/\r\n * @author tschw\r\n */\r\n\r\nTHREE.VectorKeyframeTrack = function ( name, times, values, interpolation ) {\r\n\r\n\tTHREE.KeyframeTrack.call( this, name, times, values, interpolation );\r\n\r\n};\r\n\r\nTHREE.VectorKeyframeTrack.prototype =\r\n\t\tObject.assign( Object.create( THREE.KeyframeTrack.prototype ), {\r\n\r\n\tconstructor: THREE.VectorKeyframeTrack,\r\n\r\n\tValueTypeName: 'vector'\r\n\r\n\t// ValueBufferType is inherited\r\n\r\n\t// DefaultInterpolation is inherited\r\n\r\n} );\r\n\r\n// File:src/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind( this );\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( listener.getInput() );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.playbackRate = 1;\r\n\tthis.isPlaying = false;\r\n\tthis.hasPlaybackControl = true;\r\n\tthis.sourceType = 'empty';\r\n\r\n\tthis.filters = [];\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Audio,\r\n\r\n\tgetOutput: function () {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t},\r\n\r\n\tsetNodeSource: function ( audioNode ) {\r\n\r\n\t\tthis.hasPlaybackControl = false;\r\n\t\tthis.sourceType = 'audioNode';\r\n\t\tthis.source = audioNode;\r\n\t\tthis.connect();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetBuffer: function ( audioBuffer ) {\r\n\r\n\t\tthis.source.buffer = audioBuffer;\r\n\t\tthis.sourceType = 'buffer';\r\n\r\n\t\tif ( this.autoplay ) this.play();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tplay: function () {\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar source = this.context.createBufferSource();\r\n\r\n\t\tsource.buffer = this.source.buffer;\r\n\t\tsource.loop = this.source.loop;\r\n\t\tsource.onended = this.source.onended;\r\n\t\tsource.start( 0, this.startTime );\r\n\t\tsource.playbackRate.value = this.playbackRate;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.source = source;\r\n\r\n\t\treturn this.connect();\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = this.context.currentTime;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.source.stop();\r\n\t\tthis.startTime = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconnect: function () {\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.connect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.connect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdisconnect: function () {\r\n\r\n\t\tif ( this.filters.length > 0 ) {\r\n\r\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\r\n\r\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.source.disconnect( this.getOutput() );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetFilters: function () {\r\n\r\n\t\treturn this.filters;\r\n\r\n\t},\r\n\r\n\tsetFilters: function ( value ) {\r\n\r\n\t\tif ( ! value ) value = [];\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.disconnect();\r\n\t\t\tthis.filters = value;\r\n\t\t\tthis.connect();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.filters = value;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetFilter: function () {\r\n\r\n\t\treturn this.getFilters()[ 0 ];\r\n\r\n\t},\r\n\r\n\tsetFilter: function ( filter ) {\r\n\r\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\r\n\r\n\t},\r\n\r\n\tsetPlaybackRate: function ( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.playbackRate = value;\r\n\r\n\t\tif ( this.isPlaying === true ) {\r\n\r\n\t\t\tthis.source.playbackRate.value = this.playbackRate;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetPlaybackRate: function () {\r\n\r\n\t\treturn this.playbackRate;\r\n\r\n\t},\r\n\r\n\tonEnded: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tgetLoop: function () {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn this.source.loop;\r\n\r\n\t},\r\n\r\n\tsetLoop: function ( value ) {\r\n\r\n\t\tif ( this.hasPlaybackControl === false ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.source.loop = value;\r\n\r\n\t},\r\n\r\n\tgetVolume: function () {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t},\r\n\r\n\r\n\tsetVolume: function ( value ) {\r\n\r\n\t\tthis.gain.gain.value = value;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/audio/AudioAnalyser.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioAnalyser = function ( audio, fftSize ) {\r\n\r\n\tthis.analyser = audio.context.createAnalyser();\r\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\r\n\r\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\r\n\r\n\taudio.getOutput().connect( this.analyser );\r\n\r\n};\r\n\r\nObject.assign( THREE.AudioAnalyser.prototype, {\r\n\r\n\tgetFrequencyData: function () {\r\n\r\n\t\tthis.analyser.getByteFrequencyData( this.data );\r\n\r\n\t\treturn this.data;\r\n\r\n\t},\r\n\r\n\tgetAverageFrequency: function () {\r\n\r\n\t\tvar value = 0, data = this.getFrequencyData();\r\n\r\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\r\n\r\n\t\t\tvalue += data[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn value / data.length;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/audio/AudioContext.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nObject.defineProperty( THREE, 'AudioContext', {\r\n\r\n\tget: ( function () {\r\n\r\n\t\tvar context;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( context === undefined ) {\r\n\r\n\t\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn context;\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n} );\r\n\r\n// File:src/audio/PositionalAudio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PositionalAudio = function ( listener ) {\r\n\r\n\tTHREE.Audio.call( this, listener );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n};\r\n\r\nTHREE.PositionalAudio.prototype = Object.assign( Object.create( THREE.Audio.prototype ), {\r\n\r\n\tconstructor: THREE.PositionalAudio,\r\n\r\n\tgetOutput: function () {\r\n\r\n\t\treturn this.panner;\r\n\r\n\t},\r\n\r\n\tgetRefDistance: function () {\r\n\r\n\t\treturn this.panner.refDistance;\r\n\r\n\t},\r\n\r\n\tsetRefDistance: function ( value ) {\r\n\r\n\t\tthis.panner.refDistance = value;\r\n\r\n\t},\r\n\r\n\tgetRolloffFactor: function () {\r\n\r\n\t\treturn this.panner.rolloffFactor;\r\n\r\n\t},\r\n\r\n\tsetRolloffFactor: function ( value ) {\r\n\r\n\t\tthis.panner.rolloffFactor = value;\r\n\r\n\t},\r\n\r\n\tgetDistanceModel: function () {\r\n\r\n\t\treturn this.panner.distanceModel;\r\n\r\n\t},\r\n\r\n\tsetDistanceModel: function ( value ) {\r\n\r\n\t\tthis.panner.distanceModel = value;\r\n\r\n\t},\r\n\r\n\tgetMaxDistance: function () {\r\n\r\n\t\treturn this.panner.maxDistance;\r\n\r\n\t},\r\n\r\n\tsetMaxDistance: function ( value ) {\r\n\r\n\t\tthis.panner.maxDistance = value;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: ( function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n\r\n} );\r\n\r\n// File:src/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = THREE.AudioContext;\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.filter = null;\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.AudioListener,\r\n\r\n\tgetInput: function () {\r\n\r\n\t\treturn this.gain;\r\n\r\n\t},\r\n\r\n\tremoveFilter: function ( ) {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\t\t\tthis.gain.connect( this.context.destination );\r\n\t\t\tthis.filter = null;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetFilter: function () {\r\n\r\n\t\treturn this.filter;\r\n\r\n\t},\r\n\r\n\tsetFilter: function ( value ) {\r\n\r\n\t\tif ( this.filter !== null ) {\r\n\r\n\t\t\tthis.gain.disconnect( this.filter );\r\n\t\t\tthis.filter.disconnect( this.context.destination );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.gain.disconnect( this.context.destination );\r\n\r\n\t\t}\r\n\r\n\t\tthis.filter = value;\r\n\t\tthis.gain.connect( this.filter );\r\n\t\tthis.filter.connect( this.context.destination );\r\n\r\n\t},\r\n\r\n\tgetMasterVolume: function () {\r\n\r\n\t\treturn this.gain.gain.value;\r\n\r\n\t},\r\n\r\n\tsetMasterVolume: function ( value ) {\r\n\r\n\t\tthis.gain.gain.value = value;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: ( function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\tvar orientation = new THREE.Vector3();\r\n\r\n\t\treturn function updateMatrixWorld( force ) {\r\n\r\n\t\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\t\tvar listener = this.context.listener;\r\n\t\t\tvar up = this.up;\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n} );\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function () {\r\n\r\n\treturn new this.constructor().copy( this );\r\n\r\n};\r\n\r\nTHREE.Camera.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\r\n\tthis.projectionMatrix.copy( source.projectionMatrix );\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tvar options = { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter };\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\r\n\r\n\t\trenderTarget.texture.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t\trenderer.setRenderTarget( null );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\r\n\r\n\tconstructor: THREE.OrthographicCamera,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\r\n\t\tthis.left = source.left;\r\n\t\tthis.right = source.right;\r\n\t\tthis.top = source.top;\r\n\t\tthis.bottom = source.bottom;\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdateProjectionMatrix: function () {\r\n\r\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\t\tvar cx = ( this.right + this.left ) / 2;\r\n\t\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\t\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.zoom = this.zoom;\r\n\t\tdata.object.left = this.left;\r\n\t\tdata.object.right = this.right;\r\n\t\tdata.object.top = this.top;\r\n\t\tdata.object.bottom = this.bottom;\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author tschw\r\n */\r\n\r\nTHREE.PerspectiveCamera = function( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.zoom = 1;\r\n\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\tthis.focus = 10;\r\n\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.view = null;\r\n\r\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\r\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.assign( Object.create( THREE.Camera.prototype ), {\r\n\r\n\tconstructor: THREE.PerspectiveCamera,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Camera.prototype.copy.call( this, source );\r\n\r\n\t\tthis.fov = source.fov;\r\n\t\tthis.zoom = source.zoom;\r\n\r\n\t\tthis.near = source.near;\r\n\t\tthis.far = source.far;\r\n\t\tthis.focus = source.focus;\r\n\r\n\t\tthis.aspect = source.aspect;\r\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\r\n\r\n\t\tthis.filmGauge = source.filmGauge;\r\n\t\tthis.filmOffset = source.filmOffset;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\r\n\t *\r\n\t * The default film gauge is 35, so that the focal length can be specified for\r\n\t * a 35mm (full frame) camera.\r\n\t *\r\n\t * Values for focal length and film gauge must have the same unit.\r\n\t */\r\n\tsetFocalLength: function ( focalLength ) {\r\n\r\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\r\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\r\n\r\n\t\tthis.fov = THREE.Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Calculates the focal length from the current .fov and .filmGauge.\r\n\t */\r\n\tgetFocalLength: function () {\r\n\r\n\t\tvar vExtentSlope = Math.tan( THREE.Math.DEG2RAD * 0.5 * this.fov );\r\n\r\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\r\n\r\n\t},\r\n\r\n\tgetEffectiveFOV: function () {\r\n\r\n\t\treturn THREE.Math.RAD2DEG * 2 * Math.atan(\r\n\t\t\t\tMath.tan( THREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\r\n\r\n\t},\r\n\r\n\tgetFilmWidth: function () {\r\n\r\n\t\t// film not completely covered in portrait format (aspect < 1)\r\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\r\n\r\n\t},\r\n\r\n\tgetFilmHeight: function () {\r\n\r\n\t\t// film not completely covered in landscape format (aspect > 1)\r\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\r\n\r\n\t},\r\n\r\n\t/**\r\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\r\n\t * multi-monitor/multi-machine setups.\r\n\t *\r\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n\t * the monitors are in grid like this\r\n\t *\r\n\t *   +---+---+---+\r\n\t *   | A | B | C |\r\n\t *   +---+---+---+\r\n\t *   | D | E | F |\r\n\t *   +---+---+---+\r\n\t *\r\n\t * then for each monitor you would call it like this\r\n\t *\r\n\t *   var w = 1920;\r\n\t *   var h = 1080;\r\n\t *   var fullWidth = w * 3;\r\n\t *   var fullHeight = h * 2;\r\n\t *\r\n\t *   --A--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n\t *   --B--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n\t *   --C--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n\t *   --D--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n\t *   --E--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n\t *   --F--\r\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n\t *\r\n\t *   Note there is no reason monitors have to be the same size or in a grid.\r\n\t */\r\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\t\tthis.aspect = fullWidth / fullHeight;\r\n\r\n\t\tthis.view = {\r\n\t\t\tfullWidth: fullWidth,\r\n\t\t\tfullHeight: fullHeight,\r\n\t\t\toffsetX: x,\r\n\t\t\toffsetY: y,\r\n\t\t\twidth: width,\r\n\t\t\theight: height\r\n\t\t};\r\n\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t},\r\n\r\n\tclearViewOffset: function() {\r\n\r\n\t\tthis.view = null;\r\n\t\tthis.updateProjectionMatrix();\r\n\r\n\t},\r\n\r\n\tupdateProjectionMatrix: function () {\r\n\r\n\t\tvar near = this.near,\r\n\t\t\ttop = near * Math.tan(\r\n\t\t\t\t\tTHREE.Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\r\n\t\t\theight = 2 * top,\r\n\t\t\twidth = this.aspect * height,\r\n\t\t\tleft = - 0.5 * width,\r\n\t\t\tview = this.view;\r\n\r\n\t\tif ( view !== null ) {\r\n\r\n\t\t\tvar fullWidth = view.fullWidth,\r\n\t\t\t\tfullHeight = view.fullHeight;\r\n\r\n\t\t\tleft += view.offsetX * width / fullWidth;\r\n\t\t\ttop -= view.offsetY * height / fullHeight;\r\n\t\t\twidth *= view.width / fullWidth;\r\n\t\t\theight *= view.height / fullHeight;\r\n\r\n\t\t}\r\n\r\n\t\tvar skew = this.filmOffset;\r\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\t\tleft, left + width, top - height, top, near, this.far );\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.fov = this.fov;\r\n\t\tdata.object.zoom = this.zoom;\r\n\r\n\t\tdata.object.near = this.near;\r\n\t\tdata.object.far = this.far;\r\n\t\tdata.object.focus = this.focus;\r\n\r\n\t\tdata.object.aspect = this.aspect;\r\n\r\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\r\n\r\n\t\tdata.object.filmGauge = this.filmGauge;\r\n\t\tdata.object.filmOffset = this.filmOffset;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/cameras/StereoCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.StereoCamera = function () {\r\n\r\n\tthis.type = 'StereoCamera';\r\n\r\n\tthis.aspect = 1;\r\n\r\n\tthis.cameraL = new THREE.PerspectiveCamera();\r\n\tthis.cameraL.layers.enable( 1 );\r\n\tthis.cameraL.matrixAutoUpdate = false;\r\n\r\n\tthis.cameraR = new THREE.PerspectiveCamera();\r\n\tthis.cameraR.layers.enable( 2 );\r\n\tthis.cameraR.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nObject.assign( THREE.StereoCamera.prototype, {\r\n\r\n\tupdate: ( function () {\r\n\r\n\t\tvar focus, fov, aspect, near, far;\r\n\r\n\t\tvar eyeRight = new THREE.Matrix4();\r\n\t\tvar eyeLeft = new THREE.Matrix4();\r\n\r\n\t\treturn function update ( camera ) {\r\n\r\n\t\t\tvar needsUpdate = focus !== camera.focus || fov !== camera.fov ||\r\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\r\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far;\r\n\r\n\t\t\tif ( needsUpdate ) {\r\n\r\n\t\t\t\tfocus = camera.focus;\r\n\t\t\t\tfov = camera.fov;\r\n\t\t\t\taspect = camera.aspect * this.aspect;\r\n\t\t\t\tnear = camera.near;\r\n\t\t\t\tfar = camera.far;\r\n\r\n\t\t\t\t// Off-axis stereoscopic effect based on\r\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\r\n\r\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\r\n\t\t\t\tvar eyeSep = 0.064 / 2;\r\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\r\n\t\t\t\tvar ymax = near * Math.tan( THREE.Math.DEG2RAD * fov * 0.5 );\r\n\t\t\t\tvar xmin, xmax;\r\n\r\n\t\t\t\t// translate xOffset\r\n\r\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\r\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\r\n\r\n\t\t\t\t// for left eye\r\n\r\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t\t// for right eye\r\n\r\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\r\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\r\n\r\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\r\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\r\n\r\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\r\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n} );\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color, intensity ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.intensity = intensity !== undefined ? intensity : 1;\r\n\r\n\tthis.receiveShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Light,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\t\tthis.color.copy( source.color );\r\n\t\tthis.intensity = source.intensity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.color = this.color.getHex();\r\n\t\tdata.object.intensity = this.intensity;\r\n\r\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\r\n\r\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\r\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\r\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\r\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/LightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LightShadow = function ( camera ) {\r\n\r\n\tthis.camera = camera;\r\n\r\n\tthis.bias = 0;\r\n\tthis.radius = 1;\r\n\r\n\tthis.mapSize = new THREE.Vector2( 512, 512 );\r\n\r\n\tthis.map = null;\r\n\tthis.matrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nObject.assign( THREE.LightShadow.prototype, {\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.camera = source.camera.clone();\r\n\r\n\t\tthis.bias = source.bias;\r\n\t\tthis.radius = source.radius;\r\n\r\n\t\tthis.mapSize.copy( source.mapSize );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.AmbientLight\r\n\r\n} );\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.shadow = new THREE.DirectionalLightShadow();\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.DirectionalLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.target = source.target.clone();\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/DirectionalLightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DirectionalLightShadow = function ( light ) {\r\n\r\n\tTHREE.LightShadow.call( this, new THREE.OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.DirectionalLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\r\n\r\n\tconstructor: THREE.DirectionalLightShadow\r\n\r\n} );\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor, intensity );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.castShadow = undefined;\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.HemisphereLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.groundColor.copy( source.groundColor );\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tObject.defineProperty( this, 'power', {\r\n\t\tget: function () {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\treturn this.intensity * 4 * Math.PI;\r\n\r\n\t\t},\r\n\t\tset: function ( power ) {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.LightShadow( new THREE.PerspectiveCamera( 90, 1, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.PointLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, penumbra, decay ) {\r\n\r\n\tTHREE.Light.call( this, color, intensity );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.updateMatrix();\r\n\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tObject.defineProperty( this, 'power', {\r\n\t\tget: function () {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\treturn this.intensity * Math.PI;\r\n\t\t},\r\n\t\tset: function ( power ) {\r\n\t\t\t// intensity = power per solid angle.\r\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\r\n\t\t\tthis.intensity = power / Math.PI;\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.shadow = new THREE.SpotLightShadow();\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.assign( Object.create( THREE.Light.prototype ), {\r\n\r\n\tconstructor: THREE.SpotLight,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Light.prototype.copy.call( this, source );\r\n\r\n\t\tthis.distance = source.distance;\r\n\t\tthis.angle = source.angle;\r\n\t\tthis.penumbra = source.penumbra;\r\n\t\tthis.decay = source.decay;\r\n\r\n\t\tthis.target = source.target.clone();\r\n\r\n\t\tthis.shadow = source.shadow.clone();\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/lights/SpotLightShadow.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SpotLightShadow = function () {\r\n\r\n\tTHREE.LightShadow.call( this, new THREE.PerspectiveCamera( 50, 1, 0.5, 500 ) );\r\n\r\n};\r\n\r\nTHREE.SpotLightShadow.prototype = Object.assign( Object.create( THREE.LightShadow.prototype ), {\r\n\r\n\tconstructor: THREE.SpotLightShadow,\r\n\r\n\tupdate: function ( light ) {\r\n\r\n\t\tvar fov = THREE.Math.RAD2DEG * 2 * light.angle;\r\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\r\n\t\tvar far = light.distance || 500;\r\n\r\n\t\tvar camera = this.camera;\r\n\r\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\r\n\r\n\t\t\tcamera.fov = fov;\r\n\t\t\tcamera.aspect = aspect;\r\n\t\t\tcamera.far = far;\r\n\t\t\tcamera.updateProjectionMatrix();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/loaders/AudioLoader.js\r\n\r\n/**\r\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\r\n */\r\n\r\nTHREE.AudioLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.AudioLoader.prototype = {\r\n\r\n\tconstructor: THREE.AudioLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar context = THREE.AudioContext;\r\n\r\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\r\n\r\n\t\t\t\tonLoad( audioBuffer );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tenabled: false,\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\tif ( this.enabled === false ) return;\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {};\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function () {\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: ( function () {\r\n\r\n\t\tvar color, textureLoader, materialLoader;\r\n\r\n\t\treturn function ( m, texturePath, crossOrigin ) {\r\n\r\n\t\t\tif ( color === undefined ) color = new THREE.Color();\r\n\t\t\tif ( textureLoader === undefined ) textureLoader = new THREE.TextureLoader();\r\n\t\t\tif ( materialLoader === undefined ) materialLoader = new THREE.MaterialLoader();\r\n\r\n\t\t\t// convert from old material format\r\n\r\n\t\t\tvar textures = {};\r\n\r\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\t\tvar fullPath = texturePath + path;\r\n\t\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\t\tvar texture;\r\n\r\n\t\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\r\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( repeat !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\r\n\r\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( offset !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.offset.fromArray( offset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrap !== undefined ) {\r\n\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = THREE.RepeatWrapping;\r\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = THREE.MirroredRepeatWrapping;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( anisotropy !== undefined ) {\r\n\r\n\t\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar uuid = THREE.Math.generateUUID();\r\n\r\n\t\t\t\ttextures[ uuid ] = texture;\r\n\r\n\t\t\t\treturn uuid;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar json = {\r\n\t\t\t\tuuid: THREE.Math.generateUUID(),\r\n\t\t\t\ttype: 'MeshLambertMaterial'\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var name in m ) {\r\n\r\n\t\t\t\tvar value = m[ name ];\r\n\r\n\t\t\t\tswitch ( name ) {\r\n\t\t\t\t\tcase 'DbgColor':\r\n\t\t\t\t\tcase 'DbgIndex':\r\n\t\t\t\t\tcase 'opticalDensity':\r\n\t\t\t\t\tcase 'illumination':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'DbgName':\r\n\t\t\t\t\t\tjson.name = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'blending':\r\n\t\t\t\t\t\tjson.blending = THREE[ value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorAmbient':\r\n\t\t\t\t\tcase 'mapAmbient':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorDiffuse':\r\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorSpecular':\r\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'colorEmissive':\r\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'specularCoef':\r\n\t\t\t\t\t\tjson.shininess = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'shading':\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\r\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuse':\r\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapDiffuseRepeat':\r\n\t\t\t\t\tcase 'mapDiffuseOffset':\r\n\t\t\t\t\tcase 'mapDiffuseWrap':\r\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLight':\r\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapLightRepeat':\r\n\t\t\t\t\tcase 'mapLightOffset':\r\n\t\t\t\t\tcase 'mapLightWrap':\r\n\t\t\t\t\tcase 'mapLightAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAO':\r\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAORepeat':\r\n\t\t\t\t\tcase 'mapAOOffset':\r\n\t\t\t\t\tcase 'mapAOWrap':\r\n\t\t\t\t\tcase 'mapAOAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBump':\r\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpScale':\r\n\t\t\t\t\t\tjson.bumpScale = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapBumpRepeat':\r\n\t\t\t\t\tcase 'mapBumpOffset':\r\n\t\t\t\t\tcase 'mapBumpWrap':\r\n\t\t\t\t\tcase 'mapBumpAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormal':\r\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalFactor':\r\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapNormalRepeat':\r\n\t\t\t\t\tcase 'mapNormalOffset':\r\n\t\t\t\t\tcase 'mapNormalWrap':\r\n\t\t\t\t\tcase 'mapNormalAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecular':\r\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapSpecularRepeat':\r\n\t\t\t\t\tcase 'mapSpecularOffset':\r\n\t\t\t\t\tcase 'mapSpecularWrap':\r\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlpha':\r\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'mapAlphaRepeat':\r\n\t\t\t\t\tcase 'mapAlphaOffset':\r\n\t\t\t\t\tcase 'mapAlphaWrap':\r\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'flipSided':\r\n\t\t\t\t\t\tjson.side = THREE.BackSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'doubleSided':\r\n\t\t\t\t\t\tjson.side = THREE.DoubleSide;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'transparency':\r\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\r\n\t\t\t\t\t\tjson.opacity = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'depthTest':\r\n\t\t\t\t\tcase 'depthWrite':\r\n\t\t\t\t\tcase 'colorWrite':\r\n\t\t\t\t\tcase 'opacity':\r\n\t\t\t\t\tcase 'reflectivity':\r\n\t\t\t\t\tcase 'transparent':\r\n\t\t\t\t\tcase 'visible':\r\n\t\t\t\t\tcase 'wireframe':\r\n\t\t\t\t\t\tjson[ name ] = value;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vertexColors':\r\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = THREE.VertexColors;\r\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = THREE.FaceColors;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\r\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\r\n\r\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\r\n\r\n\t\t\tmaterialLoader.setTextures( textures );\r\n\r\n\t\t\treturn materialLoader.parse( json );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tvar handlers = this.handlers;\r\n\r\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = handlers[ i ];\r\n\t\t\tvar loader  = handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.overrideMimeType( 'text/plain' );\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tvar response = event.target.response;\r\n\r\n\t\t\tTHREE.Cache.add( url, response );\r\n\r\n\t\t\tif ( this.status === 200 ) {\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} else if ( this.status === 0 ) {\r\n\r\n\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\r\n\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\r\n\r\n\t\t\t\tconsole.warn( 'THREE.XHRLoader: HTTP Status 0 received.' );\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( response );\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn request;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetWithCredentials: function ( value ) {\r\n\r\n\t\tthis.withCredentials = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/FontLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.FontLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.FontLoader.prototype = {\r\n\r\n\tconstructor: THREE.FontLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json;\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tjson = JSON.parse( text );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\r\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar font = scope.parse( json );\r\n\r\n\t\t\tif ( onLoad ) onLoad( font );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\treturn new THREE.Font( json );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.path !== undefined ) url = this.path + url;\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\tif ( onLoad ) {\r\n\r\n\t\t\t\tsetTimeout( function () {\r\n\r\n\t\t\t\t\tonLoad( cached );\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t}, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cached;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\timage.src = url;\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( manager ) {\r\n\r\n\tif ( typeof manager === 'boolean' ) {\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\r\n\t\tmanager = undefined;\r\n\r\n\t}\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = {\r\n\r\n\tconstructor: THREE.JSONLoader,\r\n\r\n\t// Deprecated\r\n\r\n\tget statusDomElement () {\r\n\r\n\t\tif ( this._statusDomElement === undefined ) {\r\n\r\n\t\t\tthis._statusDomElement = document.createElement( 'div' );\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.JSONLoader: .statusDomElement has been removed.' );\r\n\t\treturn this._statusDomElement;\r\n\r\n\t},\r\n\r\n\tload: function( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : THREE.Loader.prototype.extractUrlBase( url );\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tvar json = JSON.parse( text );\r\n\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\tvar type = metadata.type;\r\n\r\n\t\t\t\tif ( type !== undefined ) {\r\n\r\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar object = scope.parse( json, texturePath );\r\n\t\t\tonLoad( object.geometry, object.materials );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, texturePath ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry(),\r\n\t\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\t\tparseModel( scale );\r\n\r\n\t\tparseSkin();\r\n\t\tparseMorphing( scale );\r\n\t\tparseAnimations();\r\n\r\n\t\tgeometry.computeFaceNormals();\r\n\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\tfunction parseModel( scale ) {\r\n\r\n\t\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar i, j, fi,\r\n\r\n\t\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\t\ttype,\r\n\t\t\tisQuad,\r\n\t\t\thasMaterial,\r\n\t\t\thasFaceVertexUv,\r\n\t\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\t\tuvLayer, uv, u, v,\r\n\r\n\t\t\tfaces = json.faces,\r\n\t\t\tvertices = json.vertices,\r\n\t\t\tnormals = json.normals,\r\n\t\t\tcolors = json.colors,\r\n\r\n\t\t\tnUvLayers = 0;\r\n\r\n\t\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t\t// disregard empty arrays\r\n\r\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = vertices.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t\t}\r\n\r\n\t\t\toffset = 0;\r\n\t\t\tzLength = faces.length;\r\n\r\n\t\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseSkin() {\r\n\r\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar x =                               json.skinWeights[ i ];\r\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\t\tvar a =                               json.skinIndices[ i ];\r\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.bones = json.bones;\r\n\r\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseMorphing( scale ) {\r\n\r\n\t\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\r\n\r\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\r\n\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\r\n\r\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction parseAnimations() {\r\n\r\n\t\t\tvar outputAnimations = [];\r\n\r\n\t\t\t// parse old style Bone/Hierarchy animations\r\n\t\t\tvar animations = [];\r\n\r\n\t\t\tif ( json.animation !== undefined ) {\r\n\r\n\t\t\t\tanimations.push( json.animation );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( json.animations !== undefined ) {\r\n\r\n\t\t\t\tif ( json.animations.length ) {\r\n\r\n\t\t\t\t\tanimations = animations.concat( json.animations );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tanimations.push( json.animations );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\r\n\r\n\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\r\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// parse implicit morph animations\r\n\t\t\tif ( geometry.morphTargets ) {\r\n\r\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\r\n\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\r\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\t\treturn { geometry: geometry };\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\r\n\r\n\t\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar isLoading = false, itemsLoaded = 0, itemsTotal = 0;\r\n\r\n\tthis.onStart = undefined;\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\titemsTotal ++;\r\n\r\n\t\tif ( isLoading === false ) {\r\n\r\n\t\t\tif ( scope.onStart !== undefined ) {\r\n\r\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tisLoading = true;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\titemsLoaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\r\n\r\n\t\t}\r\n\r\n\t\tif ( itemsLoaded === itemsTotal ) {\r\n\r\n\t\t\tisLoading = false;\r\n\r\n\t\t\tif ( scope.onLoad !== undefined ) {\r\n\r\n\t\t\t\tscope.onLoad();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.itemError = function ( url ) {\r\n\r\n\t\tif ( scope.onError !== undefined ) {\r\n\r\n\t\t\tscope.onError( url );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar index = json.data.index;\r\n\r\n\t\tvar TYPED_ARRAYS = {\r\n\t\t\t'Int8Array': Int8Array,\r\n\t\t\t'Uint8Array': Uint8Array,\r\n\t\t\t'Uint8ClampedArray': Uint8ClampedArray,\r\n\t\t\t'Int16Array': Int16Array,\r\n\t\t\t'Uint16Array': Uint16Array,\r\n\t\t\t'Int32Array': Int32Array,\r\n\t\t\t'Uint32Array': Uint32Array,\r\n\t\t\t'Float32Array': Float32Array,\r\n\t\t\t'Float64Array': Float64Array\r\n\t\t};\r\n\r\n\t\tif ( index !== undefined ) {\r\n\r\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\r\n\t\t\tgeometry.setIndex( new THREE.BufferAttribute( typedArray, 1 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\r\n\r\n\t\tif ( groups !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar group = groups[ i ];\r\n\r\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.textures = {};\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTextures: function ( value ) {\r\n\r\n\t\tthis.textures = value;\r\n\r\n\t},\r\n\r\n\tgetTexture: function ( name ) {\r\n\r\n\t\tvar textures = this.textures;\r\n\r\n\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\r\n\r\n\t\t}\r\n\r\n\t\treturn textures[ name ];\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\r\n\t\tif ( json.name !== undefined ) material.name = json.name;\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\r\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\r\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\r\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\r\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\r\n\r\n\t\t// for PointsMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\t// maps\r\n\r\n\t\tif ( json.map !== undefined ) material.map = this.getTexture( json.map );\r\n\r\n\t\tif ( json.alphaMap !== undefined ) {\r\n\r\n\t\t\tmaterial.alphaMap = this.getTexture( json.alphaMap );\r\n\t\t\tmaterial.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = this.getTexture( json.bumpMap );\r\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\r\n\r\n\t\tif ( json.normalMap !== undefined ) material.normalMap = this.getTexture( json.normalMap );\r\n\t\tif ( json.normalScale !== undefined ) {\r\n\r\n\t\t\tvar normalScale = json.normalScale;\r\n\r\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\r\n\r\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\r\n\r\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.normalScale = new THREE.Vector2().fromArray( normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = this.getTexture( json.displacementMap );\r\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\r\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\r\n\r\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = this.getTexture( json.roughnessMap );\r\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = this.getTexture( json.metalnessMap );\r\n\r\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = this.getTexture( json.emissiveMap );\r\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\r\n\r\n\t\tif ( json.specularMap !== undefined ) material.specularMap = this.getTexture( json.specularMap );\r\n\r\n\t\tif ( json.envMap !== undefined ) {\r\n\r\n\t\t\tmaterial.envMap = this.getTexture( json.envMap );\r\n\t\t\tmaterial.combine = THREE.MultiplyOperation;\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.reflectivity ) material.reflectivity = json.reflectivity;\r\n\r\n\t\tif ( json.lightMap !== undefined ) material.lightMap = this.getTexture( json.lightMap );\r\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\r\n\r\n\t\tif ( json.aoMap !== undefined ) material.aoMap = this.getTexture( json.aoMap );\r\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\r\n\r\n\t\t// MultiMaterial\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.animations ) {\r\n\r\n\t\t\tobject.animations = this.parseAnimations( json.animations );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'BoxBufferGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\t\t\t\t\tcase 'CircleBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\t\t\t\t\tcase 'CylinderBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'ConeGeometry':\r\n\t\t\t\t\tcase 'ConeBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE [ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\t\t\t\t\tcase 'SphereBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'DodecahedronGeometry':\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\t\t\t\t\tcase 'OctahedronGeometry':\r\n\t\t\t\t\tcase 'TetrahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'RingGeometry':\r\n\t\t\t\t\tcase 'RingBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.innerRadius,\r\n\t\t\t\t\t\t\tdata.outerRadius,\r\n\t\t\t\t\t\t\tdata.thetaSegments,\r\n\t\t\t\t\t\t\tdata.phiSegments,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\t\t\t\t\tcase 'TorusBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'LatheGeometry':\r\n\t\t\t\t\tcase 'LatheBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.points,\r\n\t\t\t\t\t\t\tdata.segments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data, this.texturePath ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\r\n\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\t\t\tloader.setTextures( textures );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar material = loader.parse( json[ i ] );\r\n\t\t\t\tmaterials[ material.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseAnimations: function ( json ) {\r\n\r\n\t\tvar animations = [];\r\n\r\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\r\n\r\n\t\t\tvar clip = THREE.AnimationClip.parse( json[ i ] );\r\n\r\n\t\t\tanimations.push( clip );\r\n\r\n\t\t}\r\n\r\n\t\treturn animations;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tfunction loadImage( url ) {\r\n\r\n\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tfunction parseConstant( value ) {\r\n\r\n\t\t\tif ( typeof( value ) === 'number' ) return value;\r\n\r\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\r\n\r\n\t\t\treturn THREE[ value ];\r\n\r\n\t\t}\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping );\r\n\t\t\t\tif ( data.offset !== undefined ) texture.offset = new THREE.Vector2( data.offset[ 0 ], data.offset[ 1 ] );\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter );\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter );\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( Array.isArray( data.wrap ) ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ] );\r\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tfunction getGeometry( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction getMaterial( name ) {\r\n\r\n\t\t\t\tif ( name === undefined ) return undefined;\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\r\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\r\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\r\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\r\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\r\n\t\t\t\t\tvar material = getMaterial( data.material );\r\n\r\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\r\n\r\n\t\t\t\t\t\tobject = new THREE.SkinnedMesh( geometry, material );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tobject = new THREE.Mesh( geometry, material );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'LOD':\r\n\r\n\t\t\t\t\tobject = new THREE.LOD();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\t\t\t\tcase 'Points':\r\n\r\n\t\t\t\t\tobject = new THREE.Points( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\r\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.type === 'LOD' ) {\r\n\r\n\t\t\t\tvar levels = data.levels;\r\n\r\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\t\t\tvar level = levels[ l ];\r\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\r\n\r\n\t\t\t\t\tif ( child !== undefined ) {\r\n\r\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t};\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.Texture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CubeTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.CubeTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CubeTextureLoader,\r\n\r\n\tload: function ( urls, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar texture = new THREE.CubeTexture();\r\n\r\n\t\tvar loader = new THREE.ImageLoader( this.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.setPath( this.path );\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( urls[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded ++;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture();\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( ! texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tfunction loadTexture( i ) {\r\n\r\n\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\timages[ i ] = {\r\n\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t};\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\r\n\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\tif ( Array.isArray( url ) ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t}, onProgress, onError );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tsetPath: function ( value ) {\r\n\r\n\t\tthis.path = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.fog = true;\r\n\tthis.lights = true;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\tthis.side = THREE.FrontSide;\r\n\tthis.shading = THREE.SmoothShading; // THREE.FlatShading, THREE.SmoothShading\r\n\tthis.vertexColors = THREE.NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthFunc = THREE.LessEqualDepth;\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.clippingPlanes = null;\r\n\tthis.clipShadows = false;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.precision = null; // override the renderer's default precision for this material\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\tthis.premultipliedAlpha = false;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate() {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\tif ( currentValue === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t} else if ( key === 'overdraw' ) {\r\n\r\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\r\n\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar isRoot = meta === undefined;\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tmeta = {\r\n\t\t\t\ttextures: {},\r\n\t\t\t\timages: {}\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tvar data = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Material',\r\n\t\t\t\tgenerator: 'Material.toJSON'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t// standard Material serialization\r\n\t\tdata.uuid = this.uuid;\r\n\t\tdata.type = this.type;\r\n\r\n\t\tif ( this.name !== '' ) data.name = this.name;\r\n\r\n\t\tif ( this.color instanceof THREE.Color ) data.color = this.color.getHex();\r\n\r\n\t\tif ( this.roughness !== 0.5 ) data.roughness = this.roughness;\r\n\t\tif ( this.metalness !== 0.5 ) data.metalness = this.metalness;\r\n\r\n\t\tif ( this.emissive instanceof THREE.Color ) data.emissive = this.emissive.getHex();\r\n\t\tif ( this.specular instanceof THREE.Color ) data.specular = this.specular.getHex();\r\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\r\n\r\n\t\tif ( this.map instanceof THREE.Texture ) data.map = this.map.toJSON( meta ).uuid;\r\n\t\tif ( this.alphaMap instanceof THREE.Texture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\r\n\t\tif ( this.lightMap instanceof THREE.Texture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\r\n\t\tif ( this.bumpMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\r\n\t\t\tdata.bumpScale = this.bumpScale;\r\n\r\n\t\t}\r\n\t\tif ( this.normalMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\r\n\t\t\tdata.normalScale = this.normalScale.toArray();\r\n\r\n\t\t}\r\n\t\tif ( this.displacementMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\r\n\t\t\tdata.displacementScale = this.displacementScale;\r\n\t\t\tdata.displacementBias = this.displacementBias;\r\n\r\n\t\t}\r\n\t\tif ( this.roughnessMap instanceof THREE.Texture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\r\n\t\tif ( this.metalnessMap instanceof THREE.Texture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.emissiveMap instanceof THREE.Texture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\r\n\t\tif ( this.specularMap instanceof THREE.Texture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\r\n\r\n\t\tif ( this.envMap instanceof THREE.Texture ) {\r\n\r\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\r\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.size !== undefined ) data.size = this.size;\r\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\t\tif ( this.blending !== THREE.NormalBlending ) data.blending = this.blending;\r\n\t\tif ( this.shading !== THREE.SmoothShading ) data.shading = this.shading;\r\n\t\tif ( this.side !== THREE.FrontSide ) data.side = this.side;\r\n\t\tif ( this.vertexColors !== THREE.NoColors ) data.vertexColors = this.vertexColors;\r\n\r\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\r\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\r\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\r\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\r\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\r\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\t\t// TODO: Copied from Object3D.toJSON\r\n\r\n\t\tfunction extractFromCache ( cache ) {\r\n\r\n\t\t\tvar values = [];\r\n\r\n\t\t\tfor ( var key in cache ) {\r\n\r\n\t\t\t\tvar data = cache[ key ];\r\n\t\t\t\tdelete data.metadata;\r\n\t\t\t\tvalues.push( data );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn values;\r\n\r\n\t\t}\r\n\r\n\t\tif ( isRoot ) {\r\n\r\n\t\t\tvar textures = extractFromCache( meta.textures );\r\n\t\t\tvar images = extractFromCache( meta.images );\r\n\r\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\r\n\t\t\tif ( images.length > 0 ) data.images = images;\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.name = source.name;\r\n\r\n\t\tthis.fog = source.fog;\r\n\t\tthis.lights = source.lights;\r\n\r\n\t\tthis.blending = source.blending;\r\n\t\tthis.side = source.side;\r\n\t\tthis.vertexColors = source.vertexColors;\r\n\r\n\t\tthis.opacity = source.opacity;\r\n\t\tthis.transparent = source.transparent;\r\n\r\n\t\tthis.blendSrc = source.blendSrc;\r\n\t\tthis.blendDst = source.blendDst;\r\n\t\tthis.blendEquation = source.blendEquation;\r\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\r\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\r\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\r\n\r\n\t\tthis.depthFunc = source.depthFunc;\r\n\t\tthis.depthTest = source.depthTest;\r\n\t\tthis.depthWrite = source.depthWrite;\r\n\r\n\t\tthis.colorWrite = source.colorWrite;\r\n\r\n\t\tthis.precision = source.precision;\r\n\r\n\t\tthis.polygonOffset = source.polygonOffset;\r\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\r\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\r\n\r\n\t\tthis.alphaTest = source.alphaTest;\r\n\r\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\r\n\r\n\t\tthis.overdraw = source.overdraw;\r\n\r\n\t\tthis.visible = source.visible;\r\n\t\tthis.clipShadows = source.clipShadows;\r\n\r\n\t\tvar srcPlanes = source.clippingPlanes,\r\n\t\t\tdstPlanes = null;\r\n\r\n\t\tif ( srcPlanes !== null ) {\r\n\r\n\t\t\tvar n = srcPlanes.length;\r\n\t\t\tdstPlanes = new Array( n );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tthis.clippingPlanes = dstPlanes;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Material.prototype, THREE.EventDispatcher.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\"\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\tthis.linecap = source.linecap;\r\n\tthis.linejoin = source.linejoin;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.linewidth = source.linewidth;\r\n\r\n\tthis.scale = source.scale;\r\n\tthis.dashSize = source.dashSize;\r\n\tthis.gapSize = source.gapSize;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / https://clara.io\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.depthPacking = THREE.BasicDepthPacking;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false;\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.depthPacking = source.depthPacking;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false;\r\n\tthis.lights = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.specular.copy( source.specular );\r\n\tthis.shininess = source.shininess;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.specularMap = source.specularMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.combine = source.combine;\r\n\tthis.reflectivity = source.reflectivity;\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshStandardMaterial.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  roughness: <float>,\r\n *  metalness: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *  lightMapIntensity: <float>\r\n *\r\n *  aoMap: new THREE.Texture( <Image> ),\r\n *  aoMapIntensity: <float>\r\n *\r\n *  emissive: <hex>,\r\n *  emissiveIntensity: <float>\r\n *  emissiveMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  displacementMap: new THREE.Texture( <Image> ),\r\n *  displacementScale: <float>,\r\n *  displacementBias: <float>,\r\n *\r\n *  roughnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  metalnessMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\r\n *  envMapIntensity: <float>\r\n *\r\n *  refractionRatio: <float>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshStandardMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.defines = { 'STANDARD': '' };\r\n\r\n\tthis.type = 'MeshStandardMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.roughness = 0.5;\r\n\tthis.metalness = 0.5;\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\tthis.lightMapIntensity = 1.0;\r\n\r\n\tthis.aoMap = null;\r\n\tthis.aoMapIntensity = 1.0;\r\n\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.emissiveIntensity = 1.0;\r\n\tthis.emissiveMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.displacementMap = null;\r\n\tthis.displacementScale = 1;\r\n\tthis.displacementBias = 0;\r\n\r\n\tthis.roughnessMap = null;\r\n\r\n\tthis.metalnessMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.envMapIntensity = 1.0;\r\n\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshStandardMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshStandardMaterial.prototype.constructor = THREE.MeshStandardMaterial;\r\n\r\nTHREE.MeshStandardMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.defines = { 'STANDARD': '' };\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.roughness = source.roughness;\r\n\tthis.metalness = source.metalness;\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.lightMap = source.lightMap;\r\n\tthis.lightMapIntensity = source.lightMapIntensity;\r\n\r\n\tthis.aoMap = source.aoMap;\r\n\tthis.aoMapIntensity = source.aoMapIntensity;\r\n\r\n\tthis.emissive.copy( source.emissive );\r\n\tthis.emissiveMap = source.emissiveMap;\r\n\tthis.emissiveIntensity = source.emissiveIntensity;\r\n\r\n\tthis.bumpMap = source.bumpMap;\r\n\tthis.bumpScale = source.bumpScale;\r\n\r\n\tthis.normalMap = source.normalMap;\r\n\tthis.normalScale.copy( source.normalScale );\r\n\r\n\tthis.displacementMap = source.displacementMap;\r\n\tthis.displacementScale = source.displacementScale;\r\n\tthis.displacementBias = source.displacementBias;\r\n\r\n\tthis.roughnessMap = source.roughnessMap;\r\n\r\n\tthis.metalnessMap = source.metalnessMap;\r\n\r\n\tthis.alphaMap = source.alphaMap;\r\n\r\n\tthis.envMap = source.envMap;\r\n\tthis.envMapIntensity = source.envMapIntensity;\r\n\r\n\tthis.refractionRatio = source.refractionRatio;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\tthis.wireframeLinecap = source.wireframeLinecap;\r\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\r\n\r\n\tthis.skinning = source.skinning;\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhysicalMaterial.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n *\r\n * parameters = {\r\n *  reflectivity: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhysicalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.MeshStandardMaterial.call( this );\r\n\r\n\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\tthis.type = 'MeshPhysicalMaterial';\r\n\r\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhysicalMaterial.prototype = Object.create( THREE.MeshStandardMaterial.prototype );\r\nTHREE.MeshPhysicalMaterial.prototype.constructor = THREE.MeshPhysicalMaterial;\r\n\r\nTHREE.MeshPhysicalMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.MeshStandardMaterial.prototype.copy.call( this, source );\r\n\r\n\tthis.defines = { 'PHYSICAL': '' };\r\n\r\n\tthis.reflectivity = source.reflectivity;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/MultiMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MultiMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MultiMaterial';\r\n\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n\tthis.visible = true;\r\n\r\n};\r\n\r\nTHREE.MultiMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MultiMaterial,\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tvar materials = this.materials;\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar material = materials[ i ].toJSON( meta );\r\n\t\t\tdelete material.metadata;\r\n\r\n\t\t\toutput.materials.push( material );\r\n\r\n\t\t}\r\n\r\n\t\toutput.visible = this.visible;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new this.constructor();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/PointsMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointsMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointsMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointsMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointsMaterial.prototype.constructor = THREE.PointsMaterial;\r\n\r\nTHREE.PointsMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\r\n\tthis.map = source.map;\r\n\r\n\tthis.size = source.size;\r\n\tthis.sizeAttenuation = source.sizeAttenuation;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"1f\", value: 1.0 }, \"parameter2\": { type: \"1i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\tthis.lights = false; // set to use scene lights\r\n\tthis.clipping = false; // set to use user-defined clipping planes\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\tthis.extensions = {\r\n\t\tderivatives: false, // set to use derivatives\r\n\t\tfragDepth: false, // set to use fragment depth values\r\n\t\tdrawBuffers: false, // set to use draw buffers\r\n\t\tshaderTextureLOD: false // set to use shader texture LOD\r\n\t};\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tif ( parameters !== undefined ) {\r\n\r\n\t\tif ( parameters.attributes !== undefined ) {\r\n\r\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\r\n\r\n\t\t}\r\n\r\n\t\tthis.setValues( parameters );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.fragmentShader = source.fragmentShader;\r\n\tthis.vertexShader = source.vertexShader;\r\n\r\n\tthis.uniforms = THREE.UniformsUtils.clone( source.uniforms );\r\n\r\n\tthis.defines = source.defines;\r\n\r\n\tthis.wireframe = source.wireframe;\r\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\r\n\r\n\tthis.lights = source.lights;\r\n\tthis.clipping = source.clipping;\r\n\r\n\tthis.skinning = source.skinning;\r\n\r\n\tthis.morphTargets = source.morphTargets;\r\n\tthis.morphNormals = source.morphNormals;\r\n\r\n\tthis.extensions = source.extensions;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype.toJSON = function ( meta ) {\r\n\r\n\tvar data = THREE.Material.prototype.toJSON.call( this, meta );\r\n\r\n\tdata.uniforms = this.uniforms;\r\n\tdata.vertexShader = this.vertexShader;\r\n\tdata.fragmentShader = this.fragmentShader;\r\n\r\n\treturn data;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2()\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\tthis.lights = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.copy = function ( source ) {\r\n\r\n\tTHREE.Material.prototype.copy.call( this, source );\r\n\r\n\tthis.color.copy( source.color );\r\n\tthis.map = source.map;\r\n\r\n\tthis.rotation = source.rotation;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/materials/ShadowMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ShadowMaterial = function () {\r\n\r\n\tTHREE.ShaderMaterial.call( this, {\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\t{\r\n\t\t\t\topacity: { value: 1.0 }\r\n\t\t\t}\r\n\t\t] ),\r\n\t\tvertexShader: THREE.ShaderChunk[ 'shadow_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'shadow_frag' ]\r\n\t} );\r\n\r\n\tthis.lights = true;\r\n\tthis.transparent = true;\r\n\r\n\tObject.defineProperties( this, {\r\n\t\topacity: {\r\n\t\t\tenumerable: true,\r\n\t\t\tget: function () {\r\n\t\t\t\treturn this.uniforms.opacity.value;\r\n\t\t\t},\r\n\t\t\tset: function ( value ) {\r\n\t\t\t\tthis.uniforms.opacity.value = value;\r\n\t\t\t}\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\nTHREE.ShadowMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.ShadowMaterial.prototype.constructor = THREE.ShadowMaterial;\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\r\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\r\n\t//\r\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\r\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\r\n\tthis.encoding = encoding !== undefined ? encoding :  THREE.LinearEncoding;\r\n\r\n\tthis.version = 0;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tset needsUpdate( value ) {\r\n\r\n\t\tif ( value === true ) this.version ++;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.image = source.image;\r\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\r\n\r\n\t\tthis.mapping = source.mapping;\r\n\r\n\t\tthis.wrapS = source.wrapS;\r\n\t\tthis.wrapT = source.wrapT;\r\n\r\n\t\tthis.magFilter = source.magFilter;\r\n\t\tthis.minFilter = source.minFilter;\r\n\r\n\t\tthis.anisotropy = source.anisotropy;\r\n\r\n\t\tthis.format = source.format;\r\n\t\tthis.type = source.type;\r\n\r\n\t\tthis.offset.copy( source.offset );\r\n\t\tthis.repeat.copy( source.repeat );\r\n\r\n\t\tthis.generateMipmaps = source.generateMipmaps;\r\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\r\n\t\tthis.flipY = source.flipY;\r\n\t\tthis.unpackAlignment = source.unpackAlignment;\r\n\t\tthis.encoding = source.encoding;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tif ( meta.textures[ this.uuid ] !== undefined ) {\r\n\r\n\t\t\treturn meta.textures[ this.uuid ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getDataURL( image ) {\r\n\r\n\t\t\tvar canvas;\r\n\r\n\t\t\tif ( image.toDataURL !== undefined ) {\r\n\r\n\t\t\t\tcanvas = image;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tcanvas = document.createElement( 'canvas' );\r\n\t\t\t\tcanvas.width = image.width;\r\n\t\t\t\tcanvas.height = image.height;\r\n\r\n\t\t\t\tcanvas.getContext( '2d' ).drawImage( image, 0, 0, image.width, image.height );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.4,\r\n\t\t\t\ttype: 'Texture',\r\n\t\t\t\tgenerator: 'Texture.toJSON'\r\n\t\t\t},\r\n\r\n\t\t\tuuid: this.uuid,\r\n\t\t\tname: this.name,\r\n\r\n\t\t\tmapping: this.mapping,\r\n\r\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\r\n\t\t\toffset: [ this.offset.x, this.offset.y ],\r\n\t\t\twrap: [ this.wrapS, this.wrapT ],\r\n\r\n\t\t\tminFilter: this.minFilter,\r\n\t\t\tmagFilter: this.magFilter,\r\n\t\t\tanisotropy: this.anisotropy\r\n\t\t};\r\n\r\n\t\tif ( this.image !== undefined ) {\r\n\r\n\t\t\t// TODO: Move to THREE.Image\r\n\r\n\t\t\tvar image = this.image;\r\n\r\n\t\t\tif ( image.uuid === undefined ) {\r\n\r\n\t\t\t\timage.uuid = THREE.Math.generateUUID(); // UGH\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( meta.images[ image.uuid ] === undefined ) {\r\n\r\n\t\t\t\tmeta.images[ image.uuid ] = {\r\n\t\t\t\t\tuuid: image.uuid,\r\n\t\t\t\t\turl: getDataURL( image )\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\toutput.image = image.uuid;\r\n\r\n\t\t}\r\n\r\n\t\tmeta.textures[ this.uuid ] = output;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t},\r\n\r\n\ttransformUv: function ( uv ) {\r\n\r\n\t\tif ( this.mapping !== THREE.UVMapping )  return;\r\n\r\n\t\tuv.multiply( this.repeat );\r\n\t\tuv.add( this.offset );\r\n\r\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapS ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\r\n\r\n\t\t\tswitch ( this.wrapT ) {\r\n\r\n\t\t\t\tcase THREE.RepeatWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.ClampToEdgeWrapping:\r\n\r\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MirroredRepeatWrapping:\r\n\r\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\r\n\r\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.flipY ) {\r\n\r\n\t\t\tuv.y = 1 - uv.y;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Texture.prototype, THREE.EventDispatcher.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/DepthTexture.js\r\n\r\n/**\r\n * @author Matt DesLauriers / @mattdesl\r\n */\r\n\r\nTHREE.DepthTexture = function ( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n  THREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, THREE.DepthFormat, type, anisotropy );\r\n\r\n  this.image = { width: width, height: height };\r\n\r\n  this.type = type !== undefined ? type : THREE.UnsignedShortType;\r\n\r\n  this.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n  this.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\r\n  this.flipY = false;\r\n  this.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DepthTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DepthTexture.prototype.constructor = THREE.DepthTexture;\r\n\r\n// File:src/textures/CanvasTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CanvasTexture = function ( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.CanvasTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CanvasTexture.prototype.constructor = THREE.CanvasTexture;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\r\n\r\n\timages = images !== undefined ? images : [];\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\tthis.flipY = false;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nObject.defineProperty( THREE.CubeTexture.prototype, 'images', {\r\n\r\n\tget: function () {\r\n\r\n\t\treturn this.image;\r\n\r\n\t},\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tthis.image = value;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.NearestFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.NearestFilter;\r\n\r\n\tthis.flipY = false;\r\n\tthis.generateMipmaps  = false;\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tfunction update() {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Group\r\n\r\n} );\r\n\r\n// File:src/objects/Points.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Points = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Points';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointsMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Points.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Points,\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tvar object = this;\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\t\t\tvar threshold = raycaster.params.Points.threshold;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\r\n\t\t\tvar position = new THREE.Vector3();\r\n\r\n\t\t\tfunction testPoint( point, index ) {\r\n\r\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\r\n\r\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\r\n\r\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\r\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\t\tindex: index,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tif ( mode === 1 ) {\r\n\r\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\r\n\t\treturn new THREE.LineSegments( geometry, material );\r\n\r\n\t}\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.Line.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Line,\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tvar precision = raycaster.linePrecision;\r\n\t\t\tvar precisionSq = precision * precision;\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\tvar vStart = new THREE.Vector3();\r\n\t\t\tvar vEnd = new THREE.Vector3();\r\n\t\t\tvar interSegment = new THREE.Vector3();\r\n\t\t\tvar interRay = new THREE.Vector3();\r\n\t\t\tvar step = this instanceof THREE.LineSegments ? 2 : 1;\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\tvar a = indices[ i ];\r\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/LineSegments.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LineSegments = function ( geometry, material ) {\r\n\r\n\tTHREE.Line.call( this, geometry, material );\r\n\r\n\tthis.type = 'LineSegments';\r\n\r\n};\r\n\r\nTHREE.LineSegments.prototype = Object.assign( Object.create( THREE.Line.prototype ), {\r\n\r\n\tconstructor: THREE.LineSegments\r\n\r\n} );\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.BufferGeometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.drawMode = THREE.TrianglesDrawMode;\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Mesh,\r\n\r\n\tsetDrawMode: function ( value ) {\r\n\r\n\t\tthis.drawMode = value;\r\n\r\n\t},\r\n\r\n\tupdateMorphTargets: function () {\r\n\r\n\t\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\t\tthis.morphTargetBase = - 1;\r\n\t\t\tthis.morphTargetInfluences = [];\r\n\t\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetMorphTargetIndexByName: function ( name ) {\r\n\r\n\t\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tconsole.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\t\treturn 0;\r\n\r\n\t},\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar inverseMatrix = new THREE.Matrix4();\r\n\t\tvar ray = new THREE.Ray();\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\tvar vA = new THREE.Vector3();\r\n\t\tvar vB = new THREE.Vector3();\r\n\t\tvar vC = new THREE.Vector3();\r\n\r\n\t\tvar tempA = new THREE.Vector3();\r\n\t\tvar tempB = new THREE.Vector3();\r\n\t\tvar tempC = new THREE.Vector3();\r\n\r\n\t\tvar uvA = new THREE.Vector2();\r\n\t\tvar uvB = new THREE.Vector2();\r\n\t\tvar uvC = new THREE.Vector2();\r\n\r\n\t\tvar barycoord = new THREE.Vector3();\r\n\r\n\t\tvar intersectionPoint = new THREE.Vector3();\r\n\t\tvar intersectionPointWorld = new THREE.Vector3();\r\n\r\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\r\n\r\n\t\t\tTHREE.Triangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\r\n\r\n\t\t\tuv1.multiplyScalar( barycoord.x );\r\n\t\t\tuv2.multiplyScalar( barycoord.y );\r\n\t\t\tuv3.multiplyScalar( barycoord.z );\r\n\r\n\t\t\tuv1.add( uv2 ).add( uv3 );\r\n\r\n\t\t\treturn uv1.clone();\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkIntersection( object, raycaster, ray, pA, pB, pC, point ) {\r\n\r\n\t\t\tvar intersect;\r\n\t\t\tvar material = object.material;\r\n\r\n\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== THREE.DoubleSide, point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( intersect === null ) return null;\r\n\r\n\t\t\tintersectionPointWorld.copy( point );\r\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\r\n\r\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tdistance: distance,\r\n\t\t\t\tpoint: intersectionPointWorld.clone(),\r\n\t\t\t\tobject: object\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, positions, uvs, a, b, c ) {\r\n\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\tvar intersection = checkIntersection( object, raycaster, ray, vA, vB, vC, intersectionPoint );\r\n\r\n\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint,  vA, vB, vC,  uvA, uvB, uvC );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tintersection.face = new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) );\r\n\t\t\t\tintersection.faceIndex = a;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn intersection;\r\n\r\n\t\t}\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tvar geometry = this.geometry;\r\n\t\t\tvar material = this.material;\r\n\t\t\tvar matrixWorld = this.matrixWorld;\r\n\r\n\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tinverseMatrix.getInverse( matrixWorld );\r\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\t\t// Check boundingBox before continuing\r\n\r\n\t\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar uvs, intersection;\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\tvar a, b, c;\r\n\t\t\t\tvar index = geometry.index;\r\n\t\t\t\tvar attributes = geometry.attributes;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tif ( attributes.uv !== undefined ) {\r\n\r\n\t\t\t\t\tuvs = attributes.uv.array;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t\tvar indices = index.array;\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\t\t\ta = indices[ i ];\r\n\t\t\t\t\t\tb = indices[ i + 1 ];\r\n\t\t\t\t\t\tc = indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = positions.length; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\t\ta = i / 3;\r\n\t\t\t\t\t\tb = a + 1;\r\n\t\t\t\t\t\tc = a + 2;\r\n\r\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, positions, uvs, a, b, c );\r\n\r\n\t\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\r\n\t\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\tvar fvA, fvB, fvC;\r\n\t\t\t\tvar isFaceMaterial = material instanceof THREE.MultiMaterial;\r\n\t\t\t\tvar materials = isFaceMaterial === true ? material.materials : null;\r\n\r\n\t\t\t\tvar vertices = geometry.vertices;\r\n\t\t\t\tvar faces = geometry.faces;\r\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\r\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\r\n\r\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tvar face = faces[ f ];\r\n\t\t\t\t\tvar faceMaterial = isFaceMaterial === true ? materials[ face.materialIndex ] : material;\r\n\r\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\r\n\r\n\t\t\t\t\tfvA = vertices[ face.a ];\r\n\t\t\t\t\tfvB = vertices[ face.b ];\r\n\t\t\t\t\tfvC = vertices[ face.c ];\r\n\r\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\r\n\r\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\r\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\r\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvA.add( fvA );\r\n\t\t\t\t\t\tvB.add( fvB );\r\n\t\t\t\t\t\tvC.add( fvC );\r\n\r\n\t\t\t\t\t\tfvA = vA;\r\n\t\t\t\t\t\tfvB = vB;\r\n\t\t\t\t\t\tfvC = vC;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tintersection = checkIntersection( this, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\r\n\r\n\t\t\t\t\tif ( intersection ) {\r\n\r\n\t\t\t\t\t\tif ( uvs ) {\r\n\r\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\r\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\r\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\r\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\r\n\r\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tintersection.face = face;\r\n\t\t\t\t\t\tintersection.faceIndex = f;\r\n\t\t\t\t\t\tintersects.push( intersection );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Bone,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\t\tthis.skin = source.skin;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n\r\n\r\n\t\tvar size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\r\n\t\tsize = THREE.Math.nextPowerOfTwo( Math.ceil( size ) );\r\n\t\tsize = Math.max( size, 4 );\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nObject.assign( THREE.Skeleton.prototype, {\r\n\r\n\tcalculateInverses: function () {\r\n\r\n\t\tthis.boneInverses = [];\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.boneInverses.push( inverse );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tpose: function () {\r\n\r\n\t\tvar bone;\r\n\r\n\t\t// recover the bind-time world matrices\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\tbone = this.bones[ b ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// compute the local matrices, positions, rotations and scales\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\tbone = this.bones[ b ];\r\n\r\n\t\t\tif ( bone ) {\r\n\r\n\t\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function () {\r\n\r\n\t\tvar offsetMatrix = new THREE.Matrix4();\r\n\r\n\t\treturn function update() {\r\n\r\n\t\t\t// flatten bone matrices to array\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\t\toffsetMatrix.toArray( this.boneMatrices, b * 16 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Skeleton( this.bones, this.boneInverses, this.useVertexTexture );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.fromArray( gbone.pos );\r\n\t\t\tbone.quaternion.fromArray( gbone.rotq );\r\n\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 && gbone.parent !== null &&\r\n\t\t\t\t\tbones[ gbone.parent ] !== undefined ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ), this.matrixWorld );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.assign( Object.create( THREE.Mesh.prototype ), {\r\n\r\n\tconstructor: THREE.SkinnedMesh,\r\n\r\n\tbind: function( skeleton, bindMatrix ) {\r\n\r\n\t\tthis.skeleton = skeleton;\r\n\r\n\t\tif ( bindMatrix === undefined ) {\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.skeleton.calculateInverses();\r\n\r\n\t\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t\t}\r\n\r\n\t\tthis.bindMatrix.copy( bindMatrix );\r\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n\t},\r\n\r\n\tpose: function () {\r\n\r\n\t\tthis.skeleton.pose();\r\n\r\n\t},\r\n\r\n\tnormalizeSkinWeights: function () {\r\n\r\n\t\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.geometry.skinWeights.length; i ++ ) {\r\n\r\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( this.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar vec = new THREE.Vector4();\r\n\r\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\r\n\r\n\t\t\tfor ( var i = 0; i < skinWeight.count; i ++ ) {\r\n\r\n\t\t\t\tvec.x = skinWeight.getX( i );\r\n\t\t\t\tvec.y = skinWeight.getY( i );\r\n\t\t\t\tvec.z = skinWeight.getZ( i );\r\n\t\t\t\tvec.w = skinWeight.getW( i );\r\n\r\n\t\t\t\tvar scale = 1.0 / vec.lengthManhattan();\r\n\r\n\t\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\t\tvec.multiplyScalar( scale );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function( force ) {\r\n\r\n\t\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\t\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tconsole.warn( 'THREE.SkinnedMesh unrecognized bindMode: ' + this.bindMode );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tclone: function() {\r\n\r\n\t\treturn new this.constructor( this.geometry, this.material, this.useVertexTexture ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'LOD';\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tlevels: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: []\r\n\t\t}\r\n\t} );\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.LOD,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source, false );\r\n\r\n\t\tvar levels = source.levels;\r\n\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddLevel: function ( object, distance ) {\r\n\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\r\n\t\tdistance = Math.abs( distance );\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ l ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\r\n\r\n\t\tthis.add( object );\r\n\r\n\t},\r\n\r\n\tgetObjectForDistance: function ( distance ) {\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( distance < levels[ i ].distance ) {\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn levels[ i - 1 ].object;\r\n\r\n\t},\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tupdate: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function update( camera ) {\r\n\r\n\t\t\tvar levels = this.levels;\r\n\r\n\t\t\tif ( levels.length > 1 ) {\r\n\r\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\t\tlevels[ 0 ].object.visible = true;\r\n\r\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\r\n\r\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\r\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tlevels[ i ].object.visible = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttoJSON: function ( meta ) {\r\n\r\n\t\tvar data = THREE.Object3D.prototype.toJSON.call( this, meta );\r\n\r\n\t\tdata.object.levels = [];\r\n\r\n\t\tvar levels = this.levels;\r\n\r\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar level = levels[ i ];\r\n\r\n\t\t\tdata.object.levels.push( {\r\n\t\t\t\tobject: level.object.uuid,\r\n\t\t\t\tdistance: level.distance\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = function ( material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Sprite';\r\n\r\n\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n};\r\n\r\nTHREE.Sprite.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.Sprite,\r\n\r\n\traycast: ( function () {\r\n\r\n\t\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\t\treturn function raycast( raycaster, intersects ) {\r\n\r\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distanceSq = raycaster.ray.distanceSqToPoint( matrixPosition );\r\n\t\t\tvar guessSizeSq = this.scale.x * this.scale.y / 4;\r\n\r\n\t\t\tif ( distanceSq > guessSizeSq ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.push( {\r\n\r\n\t\t\t\tdistance: Math.sqrt( distanceSq ),\r\n\t\t\t\tpoint: this.position,\r\n\t\t\t\tface: null,\r\n\t\t\t\tobject: this\r\n\r\n\t\t\t} );\r\n\r\n\t\t};\r\n\r\n\t}() ),\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor( this.material ).copy( this );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.assign( Object.create( THREE.Object3D.prototype ), {\r\n\r\n\tconstructor: THREE.LensFlare,\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tTHREE.Object3D.prototype.copy.call( this, source );\r\n\r\n\t\tthis.positionScreen.copy( source.positionScreen );\r\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\r\n\r\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\t\tif ( size === undefined ) size = - 1;\r\n\t\tif ( distance === undefined ) distance = 0;\r\n\t\tif ( opacity === undefined ) opacity = 1;\r\n\t\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\t\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\t\tthis.lensFlares.push( {\r\n\t\t\ttexture: texture,\t// THREE.Texture\r\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\r\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\r\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\r\n\t\t\tscale: 1, \t\t// scale\r\n\t\t\trotation: 0, \t\t// rotation\r\n\t\t\topacity: opacity,\t// opacity\r\n\t\t\tcolor: color,\t\t// color\r\n\t\t\tblending: blending\t// blending\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Update lens flares update positions on all flares based on the screen position\r\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n\t */\r\n\r\n\tupdateLensFlares: function () {\r\n\r\n\t\tvar f, fl = this.lensFlares.length;\r\n\t\tvar flare;\r\n\t\tvar vecX = - this.positionScreen.x * 2;\r\n\t\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\t\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.copy = function ( source, recursive ) {\r\n\r\n\tTHREE.Object3D.prototype.copy.call( this, source, recursive );\r\n\r\n\tif ( source.fog !== null ) this.fog = source.fog.clone();\r\n\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\r\n\r\n\tthis.autoUpdate = source.autoUpdate;\r\n\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment' ] = \"#ifdef USE_ALPHAMAP\\n\tuniform sampler2D alphaMap;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment' ] = \"#ifdef ALPHATEST\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_fragment' ] = \"#ifdef USE_AOMAP\\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/aomap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'aomap_pars_fragment' ] = \"#ifdef USE_AOMAP\\n\tuniform sampler2D aoMap;\\n\tuniform float aoMapIntensity;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/begin_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'begin_vertex' ] = \"\\nvec3 transformed = vec3( position );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/beginnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'beginnormal_vertex' ] = \"\\nvec3 objectNormal = vec3( normal );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bsdfs.glsl\r\n\r\nTHREE.ShaderChunk[ 'bsdfs' ] = \"bool testLightInRange( const in float lightDistance, const in float cutoffDistance ) {\\n\treturn any( bvec2( cutoffDistance == 0.0, lightDistance < cutoffDistance ) );\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\t\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\t\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\t\t\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\t\t\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\t\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\t\t}\\n\t\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\tfloat a2 = pow2( alpha );\\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat alpha = pow2( roughness );\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\tfloat D = D_GGX( alpha, dotNH );\\n\treturn F * ( G * D );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\tvec4 r = roughness * c0 + c1;\\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\tvec3 F = F_Schlick( specularColor, dotLH );\\n\tfloat G = G_BlinnPhong_Implicit( );\\n\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment' ] = \"#ifdef USE_BUMPMAP\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\tvec2 dHdxy_fwd() {\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\t\treturn vec2( dBx, dBy );\\n\t}\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\tfor ( int i = 0; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\t\tvec4 plane = clippingPlanes[ i ];\\n\t\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_pars_fragment' ] = \"#if NUM_CLIPPING_PLANES > 0\\n\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\t\tvarying vec3 vViewPosition;\\n\t#endif\\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_pars_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvarying vec3 vViewPosition;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/clipping_planes_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'clipping_planes_vertex' ] = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment' ] = \"#ifdef USE_COLOR\\n\tdiffuseColor.rgb *= vColor;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex' ] = \"#ifdef USE_COLOR\\n\tvarying vec3 vColor;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex' ] = \"#ifdef USE_COLOR\\n\tvColor.xyz = color.xyz;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common' ] = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\tvec3 color;\\n\tvec3 direction;\\n\tbool visible;\\n};\\nstruct ReflectedLight {\\n\tvec3 directDiffuse;\\n\tvec3 directSpecular;\\n\tvec3 indirectDiffuse;\\n\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\tvec3 position;\\n\tvec3 normal;\\n\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/cube_uv_reflection_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_uv_reflection_fragment' ] = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\tvec3 absDirection = abs(direction);\\n\tint face = -1;\\n\tif( absDirection.x > absDirection.z ) {\\n\t\tif(absDirection.x > absDirection.y )\\n\t\t\tface = direction.x > 0.0 ? 0 : 3;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\telse {\\n\t\tif(absDirection.z > absDirection.y )\\n\t\t\tface = direction.z > 0.0 ? 2 : 5;\\n\t\telse\\n\t\t\tface = direction.y > 0.0 ? 1 : 4;\\n\t}\\n\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\tfloat dxRoughness = dFdx(roughness);\\n\tfloat dyRoughness = dFdy(roughness);\\n\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\tfloat mipLevel = 0.5 * log2(d);\\n\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\tbool bRes = mipLevel == 0.0;\\n\tscale =  bRes && (scale < a) ? a : scale;\\n\tvec3 r;\\n\tvec2 offset;\\n\tint face = getFaceFromDirection(direction);\\n\tfloat rcpPowScale = 1.0 / powScale;\\n\tif( face == 0) {\\n\t\tr = vec3(direction.x, -direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 1) {\\n\t\tr = vec3(direction.y, direction.x, direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 2) {\\n\t\tr = vec3(direction.z, direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;\\n\t}\\n\telse if( face == 3) {\\n\t\tr = vec3(direction.x, direction.z, direction.y);\\n\t\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse if( face == 4) {\\n\t\tr = vec3(direction.y, direction.x, -direction.z);\\n\t\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\telse {\\n\t\tr = vec3(direction.z, -direction.x, direction.y);\\n\t\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\t\toffset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;\\n\t}\\n\tr = normalize(r);\\n\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\tvec2 base = offset + vec2( texelOffset );\\n\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\tfloat r1 = floor(roughnessVal);\\n\tfloat r2 = r1 + 1.0;\\n\tfloat t = fract(roughnessVal);\\n\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\tfloat s = mipInfo.y;\\n\tfloat level0 = mipInfo.x;\\n\tfloat level1 = level0 + 1.0;\\n\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\tvec4 result = mix(color10, color20, t);\\n\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex' ] = \"#ifdef FLIP_SIDED\\n\tobjectNormal = -objectNormal;\\n#endif\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\ttransformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/displacementmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'displacementmap_pars_vertex' ] = \"#ifdef USE_DISPLACEMENTMAP\\n\tuniform sampler2D displacementMap;\\n\tuniform float displacementScale;\\n\tuniform float displacementBias;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/emissivemap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'emissivemap_pars_fragment' ] = \"#ifdef USE_EMISSIVEMAP\\n\tuniform sampler2D emissiveMap;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/encodings_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'encodings_pars_fragment' ] = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n  return value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n  float maxComponent = max( max( value.r, value.g ), value.b );\\n  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n  return vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n  float maxRGB = max( value.x, max( value.g, value.b ) );\\n  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n  M            = ceil( M * 255.0 ) / 255.0;\\n  return vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n    float maxRGB = max( value.x, max( value.g, value.b ) );\\n    float D      = max( maxRange / maxRGB, 1.0 );\\n    D            = min( floor( D ) / 255.0, 1.0 );\\n    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n  vec4 vResult;\\n  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n  vResult.w = fract(Le);\\n  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n  return vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n  float Le = value.z * 255.0 + value.w;\\n  vec3 Xp_Y_XYZp;\\n  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n  return vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/encodings_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'encodings_fragment' ] = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#else\\n\t\tvec3 reflectVec = vReflect;\\n\t#endif\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\tenvColor = envMapTexelToLinear( envColor );\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment' ] = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\tuniform float reflectivity;\\n\tuniform float envMapIntenstiy;\\n#endif\\n#ifdef USE_ENVMAP\\n\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\t\tvarying vec3 vWorldPosition;\\n\t#endif\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\t\tuniform float refractionRatio;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvarying vec3 vWorldPosition;\\n\t#else\\n\t\tvarying vec3 vReflect;\\n\t\tuniform float refractionRatio;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex' ] = \"#ifdef USE_ENVMAP\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\t\tvWorldPosition = worldPosition.xyz;\\n\t#else\\n\t\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\t\t#else\\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\t\t#endif\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment' ] = \"#ifdef USE_FOG\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\t#else\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\t#endif\\n\t#ifdef FOG_EXP2\\n\t\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );\\n\t#else\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\t#endif\\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment' ] = \"#ifdef USE_FOG\\n\tuniform vec3 fogColor;\\n\t#ifdef FOG_EXP2\\n\t\tuniform float fogDensity;\\n\t#else\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment' ] = \"#ifdef USE_LIGHTMAP\\n\tuniform sampler2D lightMap;\\n\tuniform float lightMapIntensity;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex' ] = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\t\tdotNL = dot( geometry.normal, directLight.direction );\\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\t\t#endif\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_pars.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_pars' ] = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\tvec3 irradiance = ambientLightColor;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\tstruct DirectionalLight {\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tdirectLight.color = directionalLight.color;\\n\t\tdirectLight.direction = directionalLight.direction;\\n\t\tdirectLight.visible = true;\\n\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\tstruct PointLight {\\n\t\tvec3 position;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\t\tvec3 lVector = pointLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tif ( testLightInRange( lightDistance, pointLight.distance ) ) {\\n\t\t\tdirectLight.color = pointLight.color;\\n\t\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\tstruct SpotLight {\\n\t\tvec3 position;\\n\t\tvec3 direction;\\n\t\tvec3 color;\\n\t\tfloat distance;\\n\t\tfloat decay;\\n\t\tfloat coneCos;\\n\t\tfloat penumbraCos;\\n\t\tint shadow;\\n\t\tfloat shadowBias;\\n\t\tfloat shadowRadius;\\n\t\tvec2 shadowMapSize;\\n\t};\\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\t\tvec3 lVector = spotLight.position - geometry.position;\\n\t\tdirectLight.direction = normalize( lVector );\\n\t\tfloat lightDistance = length( lVector );\\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\t\tif ( all( bvec2( angleCos > spotLight.coneCos, testLightInRange( lightDistance, spotLight.distance ) ) ) ) {\\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\t\t\tdirectLight.color = spotLight.color;\\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\t\t\tdirectLight.visible = true;\\n\t\t} else {\\n\t\t\tdirectLight.color = vec3( 0.0 );\\n\t\t\tdirectLight.visible = false;\\n\t\t}\\n\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\tstruct HemisphereLight {\\n\t\tvec3 direction;\\n\t\tvec3 skyColor;\\n\t\tvec3 groundColor;\\n\t};\\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tirradiance *= PI;\\n\t\t#endif\\n\t\treturn irradiance;\\n\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryVec = flipNormal * vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\t\t#else\\n\t\t\tvec4 envMapColor = vec4( 0.0 );\\n\t\t#endif\\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\\n\t}\\n\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\t}\\n\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\t\t\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\t\t#else\\n\t\t\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\t\t#endif\\n\t\t#ifdef DOUBLE_SIDED\\n\t\t\tfloat flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\t\t#else\\n\t\t\tfloat flipNormal = 1.0;\\n\t\t#endif\\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\t\t#ifdef ENVMAP_TYPE_CUBE\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\t\t\tvec3 queryReflectVec = flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\t\t\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\t\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\t\tvec2 sampleUV;\\n\t\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\t\t#ifdef TEXTURE_LOD_EXT\\n\t\t\t\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#else\\n\t\t\t\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\t\t\t#endif\\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\t\t#endif\\n\t\treturn envMapColor.rgb * envMapIntensity;\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment' ] = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment' ] = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\tvec3\tdiffuseColor;\\n\tvec3\tspecularColor;\\n\tfloat\tspecularShininess;\\n\tfloat\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\t(0)\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_physical_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_physical_fragment' ] = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\tmaterial.specularColor = mix( vec3( 0.16 * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_physical_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_physical_pars_fragment' ] = \"struct PhysicalMaterial {\\n\tvec3\tdiffuseColor;\\n\tfloat\tspecularRoughness;\\n\tvec3\tspecularColor;\\n\t#ifndef STANDARD\\n\t#endif\\n};\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\tvec3 irradiance = dotNL * directLight.color;\\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\tirradiance *= PI;\\n\t#endif\\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\treflectedLight.indirectSpecular += radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n}\\n#define RE_Direct\t\t\t\tRE_Direct_Physical\\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_template.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_template' ] = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\t\t#ifdef USE_SHADOWMAP\\n\t\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t\t#endif\\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\t#ifdef USE_LIGHTMAP\\n\t\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\t\t\tlightMapIrradiance *= PI;\\n\t\t#endif\\n\t\tirradiance += lightMapIrradiance;\\n\t#endif\\n\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\t\t}\\n\t#endif\\n\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\t \tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\t#endif\\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\tRE_IndirectSpecular( radiance, geometry, material, reflectedLight );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment' ] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tuniform float logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvarying float vFragDepth;\\n\t#endif\\n\tuniform float logDepthBufFC;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex' ] = \"#ifdef USE_LOGDEPTHBUF\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\t#else\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 texelColor = texture2D( map, vUv );\\n\ttexelColor = mapTexelToLinear( texelColor );\\n\tdiffuseColor *= texelColor;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment' ] = \"#ifdef USE_MAP\\n\tvec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment' ] = \"#ifdef USE_MAP\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'metalnessmap_fragment' ] = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\tmetalnessFactor *= texelMetalness.r;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/metalnessmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'metalnessmap_pars_fragment' ] = \"#ifdef USE_METALNESSMAP\\n\tuniform sampler2D metalnessMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex' ] = \"#ifdef USE_MORPHNORMALS\\n\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\t#ifndef USE_MORPHNORMALS\\n\tuniform float morphTargetInfluences[ 8 ];\\n\t#else\\n\tuniform float morphTargetInfluences[ 4 ];\\n\t#endif\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex' ] = \"#ifdef USE_MORPHTARGETS\\n\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\t#ifndef USE_MORPHNORMALS\\n\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normal_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_fragment' ] = \"#ifdef FLAT_SHADED\\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\tvec3 normal = normalize( vNormal );\\n\t#ifdef DOUBLE_SIDED\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment' ] = \"#ifdef USE_NORMALMAP\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/packing.glsl\r\n\r\nTHREE.ShaderChunk[ 'packing' ] = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n  return normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n  return 1.0 - 2.0 * rgb.xyz;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthoDepth( const in float viewZ, const in float near, const in float far ) {\\n  return ( viewZ + near ) / ( near - far );\\n}\\nfloat OrthoDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n  return linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n  return ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'premultiplied_alpha_fragment' ] = \"#ifdef PREMULTIPLIED_ALPHA\\n\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/project_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'project_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n#else\\n\tvec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\n#endif\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'roughnessmap_fragment' ] = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\troughnessFactor *= texelRoughness.r;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/roughnessmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'roughnessmap_pars_fragment' ] = \"#ifdef USE_ROUGHNESSMAP\\n\tuniform sampler2D roughnessMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\t}\\n\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\t\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\t\tvec2 texelSize = vec2( 1.0 ) / size;\\n\t\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\t\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\t\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\t\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\t\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\t\tvec2 f = fract( uv * size + 0.5 );\\n\t\tfloat a = mix( lb, lt, f.y );\\n\t\tfloat b = mix( rb, rt, f.y );\\n\t\tfloat c = mix( a, b, f.x );\\n\t\treturn c;\\n\t}\\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tshadowCoord.xyz /= shadowCoord.w;\\n\t\tshadowCoord.z += shadowBias;\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\t\tbool frustumTest = all( frustumTestVec );\\n\t\tif ( frustumTest ) {\\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\\n\t\t\treturn (\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\t\t\t\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\t\t#endif\\n\t\t}\\n\t\treturn 1.0;\\n\t}\\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\t\tvec3 absV = abs( v );\\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\t\tabsV *= scaleToCube;\\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\t\tvec2 planar = v.xy;\\n\t\tfloat almostATexel = 1.5 * texelSizeY;\\n\t\tfloat almostOne = 1.0 - almostATexel;\\n\t\tif ( absV.z >= almostOne ) {\\n\t\t\tif ( v.z > 0.0 )\\n\t\t\t\tplanar.x = 4.0 - v.x;\\n\t\t} else if ( absV.x >= almostOne ) {\\n\t\t\tfloat signX = sign( v.x );\\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\\n\t\t} else if ( absV.y >= almostOne ) {\\n\t\t\tfloat signY = sign( v.y );\\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\t\t\tplanar.y = v.z * signY - 2.0;\\n\t\t}\\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\t}\\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\t\tvec3 lightToPosition = shadowCoord.xyz;\\n\t\tvec3 bd3D = normalize( lightToPosition );\\n\t\tfloat dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;\\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\t\t\treturn (\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\t\t\t) * ( 1.0 / 9.0 );\\n\t\t#else\\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\t\t#endif\\n\t}\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex' ] = \"#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\t}\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmask_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmask_pars_fragment' ] = \"float getShadowMask() {\\n\tfloat shadow = 1.0;\\n\t#ifdef USE_SHADOWMAP\\n\t#if NUM_DIR_LIGHTS > 0\\n\tDirectionalLight directionalLight;\\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\t\tdirectionalLight = directionalLights[ i ];\\n\t\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_SPOT_LIGHTS > 0\\n\tSpotLight spotLight;\\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\t\tspotLight = spotLights[ i ];\\n\t\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#if NUM_POINT_LIGHTS > 0\\n\tPointLight pointLight;\\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\t\tpointLight = pointLights[ i ];\\n\t\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;\\n\t}\\n\t#endif\\n\t#endif\\n\treturn shadow;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex' ] = \"#ifdef USE_SKINNING\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\t#ifdef BONE_TEXTURE\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\t\t\ty = dy * ( y + 0.5 );\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\t\t\treturn bone;\\n\t\t}\\n\t#else\\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\t\t}\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex' ] = \"#ifdef USE_SKINNING\\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex' ] = \"#ifdef USE_SKINNING\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment' ] = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n#else\\n\tspecularStrength = 1.0;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment' ] = \"#ifdef USE_SPECULARMAP\\n\tuniform sampler2D specularMap;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/tonemapping_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'tonemapping_fragment' ] = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/tonemapping_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'tonemapping_pars_fragment' ] = \"#define saturate(a) clamp( a, 0.0, 1.0 )\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n  return toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n  color *= toneMappingExposure;\\n  color = max( vec3( 0.0 ), color - 0.004 );\\n  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_fragment' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_pars_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tattribute vec2 uv2;\\n\tvarying vec2 vUv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv2_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv2_vertex' ] = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\tvUv2 = uv2;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_fragment' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_pars_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/uv_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'uv_vertex' ] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex' ] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\t#ifdef USE_SKINNING\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\t#else\\n\t\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n\t#endif\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\": { type: \"1f\", value: 1.0 },\r\n\r\n\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"specularMap\": { type: \"t\", value: null },\r\n\t\t\"alphaMap\": { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\": { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\": { type: \"1f\", value: - 1 },\r\n\t\t\"reflectivity\": { type: \"1f\", value: 1.0 },\r\n\t\t\"refractionRatio\": { type: \"1f\", value: 0.98 }\r\n\r\n\t},\r\n\r\n\taomap: {\r\n\r\n\t\t\"aoMap\": { type: \"t\", value: null },\r\n\t\t\"aoMapIntensity\": { type: \"1f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tlightmap: {\r\n\r\n\t\t\"lightMap\": { type: \"t\", value: null },\r\n\t\t\"lightMapIntensity\": { type: \"1f\", value: 1 }\r\n\r\n\t},\r\n\r\n\temissivemap: {\r\n\r\n\t\t\"emissiveMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tbumpmap: {\r\n\r\n\t\t\"bumpMap\": { type: \"t\", value: null },\r\n\t\t\"bumpScale\": { type: \"1f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\": { type: \"t\", value: null },\r\n\t\t\"normalScale\": { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\r\n\t},\r\n\r\n\tdisplacementmap: {\r\n\r\n\t\t\"displacementMap\": { type: \"t\", value: null },\r\n\t\t\"displacementScale\": { type: \"1f\", value: 1 },\r\n\t\t\"displacementBias\": { type: \"1f\", value: 0 }\r\n\r\n\t},\r\n\r\n\troughnessmap: {\r\n\r\n\t\t\"roughnessMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tmetalnessmap: {\r\n\r\n\t\t\"metalnessMap\": { type: \"t\", value: null }\r\n\r\n\t},\r\n\r\n\tfog: {\r\n\r\n\t\t\"fogDensity\": { type: \"1f\", value: 0.00025 },\r\n\t\t\"fogNear\": { type: \"1f\", value: 1 },\r\n\t\t\"fogFar\": { type: \"1f\", value: 2000 },\r\n\t\t\"fogColor\": { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\": { type: \"3fv\", value: [] },\r\n\r\n\t\t\"directionalLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"color\": { type: \"c\" },\r\n\r\n\t\t\t\"shadow\": { type: \"1i\" },\r\n\t\t\t\"shadowBias\": { type: \"1f\" },\r\n\t\t\t\"shadowRadius\": { type: \"1f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"directionalShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"directionalShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"spotLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"distance\": { type: \"1f\" },\r\n\t\t\t\"coneCos\": { type: \"1f\" },\r\n\t\t\t\"penumbraCos\": { type: \"1f\" },\r\n\t\t\t\"decay\": { type: \"1f\" },\r\n\r\n\t\t\t\"shadow\": { type: \"1i\" },\r\n\t\t\t\"shadowBias\": { type: \"1f\" },\r\n\t\t\t\"shadowRadius\": { type: \"1f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"spotShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"spotShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"pointLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"color\": { type: \"c\" },\r\n\t\t\t\"position\": { type: \"v3\" },\r\n\t\t\t\"decay\": { type: \"1f\" },\r\n\t\t\t\"distance\": { type: \"1f\" },\r\n\r\n\t\t\t\"shadow\": { type: \"1i\" },\r\n\t\t\t\"shadowBias\": { type: \"1f\" },\r\n\t\t\t\"shadowRadius\": { type: \"1f\" },\r\n\t\t\t\"shadowMapSize\": { type: \"v2\" }\r\n\t\t} },\r\n\r\n\t\t\"pointShadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"pointShadowMatrix\": { type: \"m4v\", value: [] },\r\n\r\n\t\t\"hemisphereLights\": { type: \"sa\", value: [], properties: {\r\n\t\t\t\"direction\": { type: \"v3\" },\r\n\t\t\t\"skyColor\": { type: \"c\" },\r\n\t\t\t\"groundColor\": { type: \"c\" }\r\n\t\t} }\r\n\r\n\t},\r\n\r\n\tpoints: {\r\n\r\n\t\t\"diffuse\": { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\": { type: \"1f\", value: 1.0 },\r\n\t\t\"size\": { type: \"1f\", value: 1.0 },\r\n\t\t\"scale\": { type: \"1f\", value: 1.0 },\r\n\t\t\"map\": { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\": { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib/cube_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_frag' ] = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/cube_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'cube_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depth_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'depth_frag' ] = \"#if DEPTH_PACKING == 3200\\n\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( 1.0 );\\n\t#if DEPTH_PACKING == 3200\\n\t\tdiffuseColor.a = opacity;\\n\t#endif\\n\t#include <map_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <logdepthbuf_fragment>\\n\t#if DEPTH_PACKING == 3200\\n\t\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\t#elif DEPTH_PACKING == 3201\\n\t\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\t#endif\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/depth_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'depth_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'distanceRGBA_frag' ] = \"uniform vec3 lightPos;\\nvarying vec4 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/distanceRGBA_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'distanceRGBA_vert' ] = \"varying vec4 vWorldPosition;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <skinbase_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvWorldPosition = worldPosition;\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/equirect_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'equirect_frag' ] = \"uniform sampler2D tEquirect;\\nuniform float tFlip;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 direction = normalize( vWorldPosition );\\n\tvec2 sampleUV;\\n\tsampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\\n\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/equirect_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'equirect_vert' ] = \"varying vec3 vWorldPosition;\\n#include <common>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvWorldPosition = transformDirection( position, modelMatrix );\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/linedashed_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'linedashed_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\t\tdiscard;\\n\t}\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <color_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/linedashed_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'linedashed_vert' ] = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\tvLineDistance = scale * lineDistance;\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\tgl_Position = projectionMatrix * mvPosition;\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshbasic_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshbasic_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\tReflectedLight reflectedLight;\\n\treflectedLight.directDiffuse = vec3( 0.0 );\\n\treflectedLight.directSpecular = vec3( 0.0 );\\n\treflectedLight.indirectDiffuse = diffuseColor.rgb;\\n\treflectedLight.indirectSpecular = vec3( 0.0 );\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshbasic_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshbasic_vert' ] = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <skinbase_vertex>\\n\t#ifdef USE_ENVMAP\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#endif\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <envmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshlambert_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshlambert_frag' ] = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <emissivemap_fragment>\\n\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\t#include <lightmap_fragment>\\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\t#ifdef DOUBLE_SIDED\\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\t#else\\n\t\treflectedLight.directDiffuse = vLightFront;\\n\t#endif\\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshlambert_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshlambert_vert' ] = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <lights_lambert_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphong_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphong_frag' ] = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_phong_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\t#include <envmap_fragment>\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphong_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphong_vert' ] = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <envmap_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphysical_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphysical_frag' ] = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\nuniform float envMapIntensity;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\tvec3 totalEmissiveRadiance = emissive;\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_fragment>\\n\t#include <color_fragment>\\n\t#include <alphamap_fragment>\\n\t#include <alphatest_fragment>\\n\t#include <specularmap_fragment>\\n\t#include <roughnessmap_fragment>\\n\t#include <metalnessmap_fragment>\\n\t#include <normal_fragment>\\n\t#include <emissivemap_fragment>\\n\t#include <lights_physical_fragment>\\n\t#include <lights_template>\\n\t#include <aomap_fragment>\\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/meshphysical_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'meshphysical_vert' ] = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <uv_vertex>\\n\t#include <uv2_vertex>\\n\t#include <color_vertex>\\n\t#include <beginnormal_vertex>\\n\t#include <morphnormal_vertex>\\n\t#include <skinbase_vertex>\\n\t#include <skinnormal_vertex>\\n\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\tvNormal = normalize( transformedNormal );\\n#endif\\n\t#include <begin_vertex>\\n\t#include <displacementmap_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <skinning_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\tvViewPosition = - mvPosition.xyz;\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/normal_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_frag' ] = \"uniform float opacity;\\nvarying vec3 vNormal;\\n#include <common>\\n#include <packing>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tgl_FragColor = vec4( packNormalToRGB( vNormal ), opacity );\\n\t#include <logdepthbuf_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/normal_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'normal_vert' ] = \"varying vec3 vNormal;\\n#include <common>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\tvNormal = normalize( normalMatrix * normal );\\n\t#include <begin_vertex>\\n\t#include <morphtarget_vertex>\\n\t#include <project_vertex>\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/points_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'points_frag' ] = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\t#include <clipping_planes_fragment>\\n\tvec3 outgoingLight = vec3( 0.0 );\\n\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\t#include <logdepthbuf_fragment>\\n\t#include <map_particle_fragment>\\n\t#include <color_fragment>\\n\t#include <alphatest_fragment>\\n\toutgoingLight = diffuseColor.rgb;\\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\t#include <premultiplied_alpha_fragment>\\n\t#include <tonemapping_fragment>\\n\t#include <encodings_fragment>\\n\t#include <fog_fragment>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/points_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'points_vert' ] = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\t#include <color_vertex>\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#ifdef USE_SIZEATTENUATION\\n\t\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\t#else\\n\t\tgl_PointSize = size;\\n\t#endif\\n\t#include <logdepthbuf_vertex>\\n\t#include <clipping_planes_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/shadow_frag.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadow_frag' ] = \"uniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\tgl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib/shadow_vert.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadow_vert' ] = \"#include <shadowmap_pars_vertex>\\nvoid main() {\\n\t#include <begin_vertex>\\n\t#include <project_vertex>\\n\t#include <worldpos_vertex>\\n\t#include <shadowmap_vertex>\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshbasic_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshbasic_frag' ]\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\t\t\tTHREE.UniformsLib[ 'lights' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshlambert_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshlambert_frag' ]\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\r\n\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'normalmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\t\t\tTHREE.UniformsLib[ 'lights' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"1f\", value: 30 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphong_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphong_frag' ]\r\n\r\n\t},\r\n\r\n\t'standard': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'aomap' ],\r\n\t\t\tTHREE.UniformsLib[ 'lightmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'emissivemap' ],\r\n\t\t\tTHREE.UniformsLib[ 'bumpmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'normalmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'roughnessmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'metalnessmap' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\t\t\tTHREE.UniformsLib[ 'lights' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"roughness\": { type: \"1f\", value: 0.5 },\r\n\t\t\t\t\"metalness\": { type: \"1f\", value: 0 },\r\n\t\t\t\t\"envMapIntensity\" : { type: \"1f\", value: 1 } // temporary\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\r\n\r\n\t},\r\n\r\n\t'points': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'points' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'points_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'points_frag' ]\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'fog' ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"1f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"1f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"1f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'linedashed_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'linedashed_frag' ]\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ 'common' ],\r\n\t\t\tTHREE.UniformsLib[ 'displacementmap' ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'depth_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'depth_frag' ]\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"1f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'normal_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'normal_frag' ]\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"tCube\": { type: \"t\", value: null },\r\n\t\t\t\"tFlip\": { type: \"1f\", value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'cube_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'cube_frag' ]\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: {\r\n\t\t\t\"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\"tFlip\": { type: \"1f\", value: - 1 }\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'equirect_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'equirect_frag' ]\r\n\r\n\t},\r\n\r\n\t'distanceRGBA': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"lightPos\": { type: \"v3\", value: new THREE.Vector3() }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: THREE.ShaderChunk[ 'distanceRGBA_vert' ],\r\n\t\tfragmentShader: THREE.ShaderChunk[ 'distanceRGBA_frag' ]\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ShaderLib[ 'physical' ] = {\r\n\r\n\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\tTHREE.ShaderLib[ 'standard' ].uniforms,\r\n\r\n\t\t{\r\n\t\t\t// future\r\n\t\t}\r\n\r\n\t] ),\r\n\r\n\tvertexShader: THREE.ShaderChunk[ 'meshphysical_vert' ],\r\n\tfragmentShader: THREE.ShaderChunk[ 'meshphysical_frag' ]\r\n\r\n};\r\n\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n * @author tschw\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar opaqueObjectsLastIndex = - 1;\r\n\tvar transparentObjects = [];\r\n\tvar transparentObjectsLastIndex = - 1;\r\n\r\n\tvar morphInfluences = new Float32Array( 8 );\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// user-defined clipping\r\n\r\n\tthis.clippingPlanes = [];\r\n\tthis.localClippingEnabled = false;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// physical lights\r\n\r\n\tthis.physicallyCorrectLights = false;\r\n\r\n\t// tone mapping\r\n\r\n\tthis.toneMapping = THREE.LinearToneMapping;\r\n\tthis.toneMappingExposure = 1.0;\r\n\tthis.toneMappingWhitePoint = 1.0;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentRenderTarget = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_currentScissor = new THREE.Vector4(),\r\n\t_currentScissorTest = null,\r\n\r\n\t_currentViewport = new THREE.Vector4(),\r\n\r\n\t//\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t//\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0,\r\n\r\n\t_width = _canvas.width,\r\n\t_height = _canvas.height,\r\n\r\n\t_pixelRatio = 1,\r\n\r\n\t_scissor = new THREE.Vector4( 0, 0, _width, _height ),\r\n\t_scissorTest = false,\r\n\r\n\t_viewport = new THREE.Vector4( 0, 0, _width, _height ),\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t// clipping\r\n\r\n\t_clipping = new THREE.WebGLClipping(),\r\n\t_clippingEnabled = false,\r\n\t_localClippingEnabled = false,\r\n\r\n\t_sphere = new THREE.Sphere(),\r\n\r\n\t// camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_lights = {\r\n\r\n\t\thash: '',\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: [],\r\n\t\tdirectionalShadowMap: [],\r\n\t\tdirectionalShadowMatrix: [],\r\n\t\tspot: [],\r\n\t\tspotShadowMap: [],\r\n\t\tspotShadowMatrix: [],\r\n\t\tpoint: [],\r\n\t\tpointShadowMap: [],\r\n\t\tpointShadowMatrix: [],\r\n\t\themi: [],\r\n\r\n\t\tshadows: []\r\n\r\n\t},\r\n\r\n\t// info\r\n\r\n\t_infoMemory = {\r\n\r\n\t\tgeometries: 0,\r\n\t\ttextures: 0\r\n\r\n\t},\r\n\r\n\t_infoRender = {\r\n\r\n\t\tcalls: 0,\r\n\t\tvertices: 0,\r\n\t\tfaces: 0,\r\n\t\tpoints: 0\r\n\r\n\t};\r\n\r\n\tthis.info = {\r\n\r\n\t\trender: _infoRender,\r\n\t\tmemory: _infoMemory,\r\n\t\tprograms: null\r\n\r\n\t};\r\n\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\r\n\r\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar _isWebGL2 = (typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof WebGL2RenderingContext);\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'WEBGL_depth_texture' );\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\textensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\tif ( extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\tTHREE.BufferGeometry.MaxIndex = 4294967296;\r\n\r\n\t}\r\n\r\n\tvar capabilities = new THREE.WebGLCapabilities( _gl, extensions, parameters );\r\n\r\n\tvar state = new THREE.WebGLState( _gl, extensions, paramThreeToGL );\r\n\tvar properties = new THREE.WebGLProperties();\r\n\tvar objects = new THREE.WebGLObjects( _gl, properties, this.info );\r\n\tvar programCache = new THREE.WebGLPrograms( this, capabilities );\r\n\tvar lightCache = new THREE.WebGLLights();\r\n\r\n\tthis.info.programs = programCache.programs;\r\n\r\n\tvar bufferRenderer = new THREE.WebGLBufferRenderer( _gl, extensions, _infoRender );\r\n\tvar indexedBufferRenderer = new THREE.WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\r\n\r\n\t//\r\n\r\n\tfunction getTargetPixelRatio() {\r\n\r\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\r\n\r\n\t}\r\n\r\n\tfunction glClearColor( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\tstate.clearColor( r, g, b, a );\r\n\r\n\t}\r\n\r\n\tfunction setDefaultGLState() {\r\n\r\n\t\tstate.init();\r\n\r\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\r\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t}\r\n\r\n\tfunction resetGLState() {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\tstate.reset();\r\n\r\n\t}\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.capabilities = capabilities;\r\n\tthis.extensions = extensions;\r\n\tthis.properties = properties;\r\n\tthis.state = state;\r\n\r\n\t// shadow map\r\n\r\n\tvar shadowMap = new THREE.WebGLShadowMap( this, _lights, objects );\r\n\r\n\tthis.shadowMap = shadowMap;\r\n\r\n\r\n\t// Plugins\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.getContextAttributes = function () {\r\n\r\n\t\treturn _gl.getContextAttributes();\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function getMaxAnisotropy() {\r\n\r\n\t\t\tif ( value !== undefined ) return value;\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tif ( extension !== null ) {\r\n\r\n\t\t\t\tvalue = _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvalue = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn capabilities.precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn _pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tif ( value === undefined ) return;\r\n\r\n\t\t_pixelRatio = value;\r\n\r\n\t\tthis.setSize( _viewport.z, _viewport.w, false );\r\n\r\n\t};\r\n\r\n\tthis.getSize = function () {\r\n\r\n\t\treturn {\r\n\t\t\twidth: _width,\r\n\t\t\theight: _height\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_width = width;\r\n\t\t_height = height;\r\n\r\n\t\t_canvas.width = width * _pixelRatio;\r\n\t\t_canvas.height = height * _pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\tstate.viewport( _viewport.set( x, y, width, height ) );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\tstate.scissor( _scissor.set( x, y, width, height ) );\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( boolean ) {\r\n\r\n\t\tstate.setScissorTest( _scissorTest = boolean );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\tthis.clear( true, false, false );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\tthis.clear( false, true, false );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\tthis.clear( false, false, true );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\tthis.dispose = function() {\r\n\r\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tfunction onContextLost( event ) {\r\n\r\n\t\tevent.preventDefault();\r\n\r\n\t\tresetGLState();\r\n\t\tsetDefaultGLState();\r\n\r\n\t\tproperties.clear();\r\n\r\n\t}\r\n\r\n\tfunction onTextureDispose( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\r\n\t}\r\n\r\n\tfunction onRenderTargetDispose( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_infoMemory.textures --;\r\n\r\n\t}\r\n\r\n\tfunction onMaterialDispose( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t}\r\n\r\n\t// Buffer deallocation\r\n\r\n\tfunction deallocateTexture( texture ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\t// remove all webgl properties\r\n\t\tproperties.delete( texture );\r\n\r\n\t}\r\n\r\n\tfunction deallocateRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\tif ( ! renderTarget ) return;\r\n\r\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\r\n\r\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\trenderTarget.depthTexture.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\r\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( renderTarget.texture );\r\n\t\tproperties.delete( renderTarget );\r\n\r\n\t}\r\n\r\n\tfunction deallocateMaterial( material ) {\r\n\r\n\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\tproperties.delete( material );\r\n\r\n\t}\r\n\r\n\r\n\tfunction releaseMaterialProgramReference( material ) {\r\n\r\n\t\tvar programInfo = properties.get( material ).program;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\tif ( programInfo !== undefined ) {\r\n\r\n\t\t\tprogramCache.releaseProgram( programInfo );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar buffers = properties.get( object );\r\n\r\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\r\n\r\n\t\t\tif ( material.type !== 'MeshPhongMaterial' && material.type !== 'MeshStandardMaterial' && material.type !== 'MeshPhysicalMaterial' && material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\r\n\r\n\t\t\t\t\tvar array = object.normalArray;\r\n\r\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\r\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\r\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\r\n\r\n\t\t\t\t\tarray[ i + 0 ] = nx;\r\n\t\t\t\t\tarray[ i + 1 ] = ny;\r\n\t\t\t\t\tarray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 3 ] = nx;\r\n\t\t\t\t\tarray[ i + 4 ] = ny;\r\n\t\t\t\t\tarray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tarray[ i + 6 ] = nx;\r\n\t\t\t\t\tarray[ i + 7 ] = ny;\r\n\t\t\t\t\tarray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\r\n\r\n\t\tsetMaterial( material );\r\n\r\n\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false;\r\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + material.wireframe;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphTargetInfluences = object.morphTargetInfluences;\r\n\r\n\t\tif ( morphTargetInfluences !== undefined ) {\r\n\r\n\t\t\tvar activeInfluences = [];\r\n\r\n\t\t\tfor ( var i = 0, l = morphTargetInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = morphTargetInfluences[ i ];\r\n\t\t\t\tactiveInfluences.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tactiveInfluences.sort( absNumericalSort );\r\n\r\n\t\t\tif ( activeInfluences.length > 8 ) {\r\n\r\n\t\t\t\tactiveInfluences.length = 8;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\t\tfor ( var i = 0, l = activeInfluences.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar influence = activeInfluences[ i ];\r\n\t\t\t\tmorphInfluences[ i ] = influence[ 0 ];\r\n\r\n\t\t\t\tif ( influence[ 0 ] !== 0 ) {\r\n\r\n\t\t\t\t\tvar index = influence[ 1 ];\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true && morphAttributes.position ) geometry.addAttribute( 'morphTarget' + i, morphAttributes.position[ index ] );\r\n\t\t\t\t\tif ( material.morphNormals === true && morphAttributes.normal ) geometry.addAttribute( 'morphNormal' + i, morphAttributes.normal[ index ] );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( material.morphTargets === true ) geometry.removeAttribute( 'morphTarget' + i );\r\n\t\t\t\t\tif ( material.morphNormals === true ) geometry.removeAttribute( 'morphNormal' + i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprogram.getUniforms().setValue(\r\n\t\t\t\t\t_gl, 'morphTargetInfluences', morphInfluences );\r\n\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\tindex = objects.getWireframeAttribute( geometry );\r\n\r\n\t\t}\r\n\r\n\t\tvar renderer;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\trenderer = indexedBufferRenderer;\r\n\t\t\trenderer.setIndex( index );\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer = bufferRenderer;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tsetupVertexAttributes( material, program, geometry );\r\n\r\n\t\t\tif ( index !== null ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, objects.getAttributeBuffer( index ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tvar dataStart = 0;\r\n\t\tvar dataCount = Infinity;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tdataCount = index.count;\r\n\r\n\t\t} else if ( position !== undefined ) {\r\n\r\n\t\t\tdataCount = position.count;\r\n\r\n\t\t}\r\n\r\n\t\tvar rangeStart = geometry.drawRange.start;\r\n\t\tvar rangeCount = geometry.drawRange.count;\r\n\r\n\t\tvar groupStart = group !== null ? group.start : 0;\r\n\t\tvar groupCount = group !== null ? group.count : Infinity;\r\n\r\n\t\tvar drawStart = Math.max( dataStart, rangeStart, groupStart );\r\n\t\tvar drawEnd = Math.min( dataStart + dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\r\n\r\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\r\n\r\n\t\t//\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tif ( material.wireframe === true ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tswitch ( object.drawMode ) {\r\n\r\n\t\t\t\t\tcase THREE.TrianglesDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.TriangleStripDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.TriangleFanDrawMode:\r\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar lineWidth = material.linewidth;\r\n\r\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\r\n\r\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\r\n\r\n\t\t\tif ( object instanceof THREE.LineSegments ) {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINES );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Points ) {\r\n\r\n\t\t\trenderer.setMode( _gl.POINTS );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\r\n\r\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderer.render( drawStart, drawCount );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( geometry instanceof THREE.InstancedBufferGeometry ) {\r\n\r\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\tif ( extension === null ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( startIndex === undefined ) startIndex = 0;\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.getAttributes();\r\n\r\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\r\n\r\n\t\tfor ( var name in programAttributes ) {\r\n\r\n\t\t\tvar programAttribute = programAttributes[ name ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar type = _gl.FLOAT;\r\n\t\t\t\t\tvar array = geometryAttribute.array;\r\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\r\n\r\n\t\t\t\t\tif ( array instanceof Float32Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.FLOAT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Float64Array ) {\r\n\r\n\t\t\t\t\t\tconsole.warn(\"Unsupported data buffer format: Float64Array\");\r\n\r\n\t\t\t\t\t} else if ( array instanceof Uint16Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Int16Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.SHORT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Uint32Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Int32Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.INT;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Int8Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.BYTE;\r\n\r\n\t\t\t\t\t} else if ( array instanceof Uint8Array ) {\r\n\r\n\t\t\t\t\t\ttype = _gl.UNSIGNED_BYTE;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\t\t\t\t\tvar buffer = objects.getAttributeBuffer( geometryAttribute );\r\n\r\n\t\t\t\t\tif ( geometryAttribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\tvar data = geometryAttribute.data;\r\n\t\t\t\t\t\tvar stride = data.stride;\r\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\r\n\r\n\t\t\t\t\t\tif ( data instanceof THREE.InstancedInterleavedBuffer ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * data.array.BYTES_PER_ELEMENT, ( startIndex * stride + offset ) * data.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tif ( geometryAttribute instanceof THREE.InstancedBufferAttribute ) {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute, extension );\r\n\r\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\r\n\r\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * geometryAttribute.array.BYTES_PER_ELEMENT );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\r\n\r\n\t\t\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\t\t\tswitch ( value.length ) {\r\n\r\n\t\t\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\tdefault:\r\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction absNumericalSort( a, b ) {\r\n\r\n\t\treturn Math.abs( b[ 0 ] ) - Math.abs( a[ 0 ] );\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\r\n\t\topaqueObjectsLastIndex = - 1;\r\n\t\ttransparentObjectsLastIndex = - 1;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\t_localClippingEnabled = this.localClippingEnabled;\r\n\t\t_clippingEnabled = _clipping.init(\r\n\t\t\t\tthis.clippingPlanes, _localClippingEnabled, camera );\r\n\r\n\t\tprojectObject( scene, camera );\r\n\r\n\r\n\t\topaqueObjects.length = opaqueObjectsLastIndex + 1;\r\n\t\ttransparentObjects.length = transparentObjectsLastIndex + 1;\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\r\n\r\n\t\tsetupShadows( lights );\r\n\r\n\t\tshadowMap.render( scene, camera );\r\n\r\n\t\tsetupLights( lights, camera );\r\n\r\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\r\n\r\n\t\t//\r\n\r\n\t\t_infoRender.calls = 0;\r\n\t\t_infoRender.vertices = 0;\r\n\t\t_infoRender.faces = 0;\r\n\t\t_infoRender.points = 0;\r\n\r\n\t\tif ( renderTarget === undefined ) {\r\n\r\n\t\t\trenderTarget = null;\r\n\r\n\t\t}\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\t\t\trenderObjects( opaqueObjects, camera, fog );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, fog );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentViewport );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\tif ( texture.generateMipmaps && isPowerOfTwo( renderTarget ) &&\r\n\t\t\t\t\ttexture.minFilter !== THREE.NearestFilter &&\r\n\t\t\t\t\ttexture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction pushRenderItem( object, geometry, material, z, group ) {\r\n\r\n\t\tvar array, index;\r\n\r\n\t\t// allocate the next position in the appropriate array\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tarray = transparentObjects;\r\n\t\t\tindex = ++ transparentObjectsLastIndex;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray = opaqueObjects;\r\n\t\t\tindex = ++ opaqueObjectsLastIndex;\r\n\r\n\t\t}\r\n\r\n\t\t// recycle existing render item or grow the array\r\n\r\n\t\tvar renderItem = array[ index ];\r\n\r\n\t\tif ( renderItem !== undefined ) {\r\n\r\n\t\t\trenderItem.id = object.id;\r\n\t\t\trenderItem.object = object;\r\n\t\t\trenderItem.geometry = geometry;\r\n\t\t\trenderItem.material = material;\r\n\t\t\trenderItem.z = _vector3.z;\r\n\t\t\trenderItem.group = group;\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderItem = {\r\n\t\t\t\tid: object.id,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tgeometry: geometry,\r\n\t\t\t\tmaterial: material,\r\n\t\t\t\tz: _vector3.z,\r\n\t\t\t\tgroup: group\r\n\t\t\t};\r\n\r\n\t\t\t// assert( index === array.length );\r\n\t\t\tarray.push( renderItem );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// TODO Duplicated code (Frustum)\r\n\r\n\tfunction isObjectViewable( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null )\r\n\t\t\tgeometry.computeBoundingSphere();\r\n\r\n\t\t_sphere.copy( geometry.boundingSphere ).\r\n\t\t\tapplyMatrix4( object.matrixWorld );\r\n\r\n\t\treturn isSphereViewable( _sphere );\r\n\r\n\t}\r\n\r\n\tfunction isSpriteViewable( sprite ) {\r\n\r\n\t\t_sphere.center.set( 0, 0, 0 );\r\n\t\t_sphere.radius = 0.7071067811865476;\r\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\r\n\r\n\t\treturn isSphereViewable( _sphere );\r\n\r\n\t}\r\n\r\n\tfunction isSphereViewable( sphere ) {\r\n\r\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\r\n\r\n\t\tvar numPlanes = _clipping.numPlanes;\r\n\r\n\t\tif ( numPlanes === 0 ) return true;\r\n\r\n\t\tvar planes = _this.clippingPlanes,\r\n\r\n\t\t\tcenter = sphere.center,\r\n\t\t\tnegRad = - sphere.radius,\r\n\t\t\ti = 0;\r\n\r\n\t\tdo {\r\n\r\n\t\t\t// out when deeper than radius in the negative halfspace\r\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\r\n\r\n\t\t} while ( ++ i !== numPlanes );\r\n\r\n\t\treturn true;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( camera.layers ) ) {\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || isSpriteViewable( object ) === true ) {\r\n\r\n\t\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpushRenderItem( object, null, object.material, _vector3.z, null );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) {\r\n\r\n\t\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( object.frustumCulled === false || isObjectViewable( object ) === true ) {\r\n\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tvar geometry = objects.update( object );\r\n\r\n\t\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\r\n\t\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\r\n\t\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\t\tpushRenderItem( object, geometry, groupMaterial, _vector3.z, group );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tpushRenderItem( object, geometry, material, _vector3.z, null );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, fog, overrideMaterial ) {\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar renderItem = renderList[ i ];\r\n\r\n\t\t\tvar object = renderItem.object;\r\n\t\t\tvar geometry = renderItem.geometry;\r\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\r\n\t\t\tvar group = renderItem.group;\r\n\r\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\r\n\r\n\t\t\tif ( object instanceof THREE.ImmediateRenderObject ) {\r\n\r\n\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t\tvar program = setProgram( camera, fog, material, object );\r\n\r\n\t\t\t\t_currentGeometryProgram = '';\r\n\r\n\t\t\t\tobject.render( function ( object ) {\r\n\r\n\t\t\t\t\t_this.renderBufferImmediate( object, program, material );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, fog, geometry, material, object, group );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initMaterial( material, fog, object ) {\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tvar parameters = programCache.getParameters(\r\n\t\t\t\tmaterial, _lights, fog, _clipping.numPlanes, object );\r\n\r\n\t\tvar code = programCache.getProgramCode( material, parameters );\r\n\r\n\t\tvar program = materialProperties.program;\r\n\t\tvar programChange = true;\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\t// new material\r\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\t} else if ( program.code !== code ) {\r\n\r\n\t\t\t// changed glsl or parameters\r\n\t\t\treleaseMaterialProgramReference( material );\r\n\r\n\t\t} else if ( parameters.shaderID !== undefined ) {\r\n\r\n\t\t\t// same glsl and uniform list\r\n\t\t\treturn;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// only rebuild uniform list\r\n\t\t\tprogramChange = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( programChange ) {\r\n\r\n\t\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\t\tvar shader = THREE.ShaderLib[ parameters.shaderID ];\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterialProperties.__webglShader = {\r\n\t\t\t\t\tname: material.type,\r\n\t\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t\t};\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmaterial.__webglShader = materialProperties.__webglShader;\r\n\r\n\t\t\tprogram = programCache.acquireProgram( material, parameters, code );\r\n\r\n\t\t\tmaterialProperties.program = program;\r\n\t\t\tmaterial.program = program;\r\n\r\n\t\t}\r\n\r\n\t\tvar attributes = program.getAttributes();\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphTarget' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tif ( attributes[ 'morphNormal' + i ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( ! ( material instanceof THREE.ShaderMaterial ) &&\r\n\t\t\t\t! ( material instanceof THREE.RawShaderMaterial ) ||\r\n\t\t\t\tmaterial.clipping === true ) {\r\n\r\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\r\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lights ) {\r\n\r\n\t\t\t// store the light setup it was created for\r\n\r\n\t\t\tmaterialProperties.lightsHash = _lights.hash;\r\n\r\n\t\t\t// wire up the material to this renderer's lighting state\r\n\r\n\t\t\tuniforms.ambientLightColor.value = _lights.ambient;\r\n\t\t\tuniforms.directionalLights.value = _lights.directional;\r\n\t\t\tuniforms.spotLights.value = _lights.spot;\r\n\t\t\tuniforms.pointLights.value = _lights.point;\r\n\t\t\tuniforms.hemisphereLights.value = _lights.hemi;\r\n\r\n\t\t\tuniforms.directionalShadowMap.value = _lights.directionalShadowMap;\r\n\t\t\tuniforms.directionalShadowMatrix.value = _lights.directionalShadowMatrix;\r\n\t\t\tuniforms.spotShadowMap.value = _lights.spotShadowMap;\r\n\t\t\tuniforms.spotShadowMatrix.value = _lights.spotShadowMatrix;\r\n\t\t\tuniforms.pointShadowMap.value = _lights.pointShadowMap;\r\n\t\t\tuniforms.pointShadowMatrix.value = _lights.pointShadowMatrix;\r\n\r\n\t\t}\r\n\r\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\r\n\t\t\tuniformsList =\r\n\t\t\t\t\tTHREE.WebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\r\n\r\n\t\tmaterialProperties.uniformsList = uniformsList;\r\n\t\tmaterialProperties.dynamicUniforms =\r\n\t\t\t\tTHREE.WebGLUniforms.splitDynamic( uniformsList, uniforms );\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tif ( material.side !== THREE.DoubleSide )\r\n\t\t\tstate.enable( _gl.CULL_FACE );\r\n\t\telse\r\n\t\t\tstate.disable( _gl.CULL_FACE );\r\n\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthFunc( material.depthFunc );\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tvar materialProperties = properties.get( material );\r\n\r\n\t\tif ( _clippingEnabled ) {\r\n\r\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\r\n\r\n\t\t\t\tvar useCache =\r\n\t\t\t\t\t\tcamera === _currentCamera &&\r\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\r\n\r\n\t\t\t\t// we might want to call this function with some ClippingGroup\r\n\t\t\t\t// object instead of the material, once it becomes feasible\r\n\t\t\t\t// (#8465, #8379)\r\n\t\t\t\t_clipping.setState(\r\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipShadows,\r\n\t\t\t\t\t\tcamera, materialProperties, useCache );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materialProperties.numClippingPlanes !== undefined &&\r\n\t\t\t\tmaterialProperties.numClippingPlanes !== _clipping.numPlanes ) {\r\n\r\n\t\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialProperties.program === undefined ) {\r\n\r\n\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( materialProperties.lightsHash !== undefined &&\r\n\t\t\tmaterialProperties.lightsHash !== _lights.hash ) {\r\n\r\n\t\t\tmaterial.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tinitMaterial( material, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = materialProperties.program,\r\n\t\t\tp_uniforms = program.getUniforms(),\r\n\t\t\tm_uniforms = materialProperties.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\tp_uniforms.set( _gl, camera, 'projectionMatrix' );\r\n\r\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\r\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) {\r\n\r\n\t\t\t\t_currentCamera = camera;\r\n\r\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\r\n\t\t\t\t// now, in case this material supports lights - or later, when\r\n\t\t\t\t// the next material that does gets activated:\r\n\r\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\r\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\r\n\r\n\t\t\t\tif ( uCamPos !== undefined ) {\r\n\r\n\t\t\t\t\tuCamPos.setValue( _gl,\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp_uniforms.set( _gl, _this, 'toneMappingExposure' );\r\n\t\t\tp_uniforms.set( _gl, _this, 'toneMappingWhitePoint' );\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\r\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\r\n\r\n\t\t\tvar skeleton = object.skeleton;\r\n\r\n\t\t\tif ( skeleton ) {\r\n\r\n\t\t\t\tif ( capabilities.floatVertexTextures && skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTexture' );\r\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureWidth' );\r\n\t\t\t\t\tp_uniforms.set( _gl, skeleton, 'boneTextureHeight' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\tif ( material.lights ) {\r\n\r\n\t\t\t\t// the current material requires lighting info\r\n\r\n\t\t\t\t// note: all lighting uniforms are always set correctly\r\n\t\t\t\t// they simply reference the renderer's state for their\r\n\t\t\t\t// values\r\n\t\t\t\t//\r\n\t\t\t\t// use the current material's .needsUpdate flags to set\r\n\t\t\t\t// the GL state when required\r\n\r\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshStandardMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointsMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhysicalMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshStandardMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsStandard( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\t\t\tm_uniforms.displacementMap.value = material.displacementMap;\r\n\t\t\t\t\tm_uniforms.displacementScale.value = material.displacementScale;\r\n\t\t\t\t\tm_uniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tTHREE.WebGLUniforms.upload(\r\n\t\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// common matrices\r\n\r\n\t\tp_uniforms.set( _gl, object, 'modelViewMatrix' );\r\n\t\tp_uniforms.set( _gl, object, 'normalMatrix' );\r\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\r\n\r\n\r\n\t\t// dynamic uniforms\r\n\r\n\t\tvar dynUniforms = materialProperties.dynamicUniforms;\r\n\r\n\t\tif ( dynUniforms !== null ) {\r\n\r\n\t\t\tTHREE.WebGLUniforms.evalDynamic(\r\n\t\t\t\t\tdynUniforms, m_uniforms, object, camera );\r\n\r\n\t\t\tTHREE.WebGLUniforms.upload( _gl, dynUniforms, m_uniforms, _this );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tif ( material.emissive ) {\r\n\r\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.aoMap ) {\r\n\r\n\t\t\tuniforms.aoMap.value = material.aoMap;\r\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t// 1. color map\r\n\t\t// 2. specular map\r\n\t\t// 3. normal map\r\n\t\t// 4. bump map\r\n\t\t// 5. alpha map\r\n\t\t// 6. emissive map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.displacementMap ) {\r\n\r\n\t\t\tuvScaleMap = material.displacementMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.roughnessMap ) {\r\n\r\n\t\t\tuvScaleMap = material.roughnessMap;\r\n\r\n\t\t} else if ( material.metalnessMap ) {\r\n\r\n\t\t\tuvScaleMap = material.metalnessMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t} else if ( material.emissiveMap ) {\r\n\r\n\t\t\tuvScaleMap = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\t// backwards compatibility\r\n\t\t\tif ( uvScaleMap instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\r\n\t\t// don't flip CubeTexture envMaps, flip everything else:\r\n\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\r\n\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\r\n\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\r\n\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap instanceof THREE.CubeTexture ) ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPoints ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size * _pixelRatio;\r\n\t\tuniforms.scale.value = _canvas.clientHeight * 0.5;\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.specular.value = material.specular;\r\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsStandard ( uniforms, material ) {\r\n\r\n\t\tuniforms.roughness.value = material.roughness;\r\n\t\tuniforms.metalness.value = material.metalness;\r\n\r\n\t\tif ( material.roughnessMap ) {\r\n\r\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.metalnessMap ) {\r\n\r\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.lightMap ) {\r\n\r\n\t\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.emissiveMap ) {\r\n\r\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.displacementMap ) {\r\n\r\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\r\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\r\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.envMap ) {\r\n\r\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\r\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhysical ( uniforms, material ) {\r\n\r\n\t\trefreshUniformsStandard( uniforms, material );\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLights.needsUpdate = value;\r\n\t\tuniforms.pointLights.needsUpdate = value;\r\n\t\tuniforms.spotLights.needsUpdate = value;\r\n\t\tuniforms.hemisphereLights.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\t// Lighting\r\n\r\n\tfunction setupShadows ( lights ) {\r\n\r\n\t\tvar lightShadowsLength = 0;\r\n\r\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t_lights.shadows[ lightShadowsLength ++ ] = light;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_lights.shadows.length = lightShadowsLength;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights, camera ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\t\tshadowMap,\r\n\r\n\t\tviewMatrix = camera.matrixWorldInverse,\r\n\r\n\t\tdirectionalLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tshadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tr += color.r * intensity;\r\n\t\t\t\tg += color.g * intensity;\r\n\t\t\t\tb += color.b * intensity;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.directionalShadowMap[ directionalLength ] = shadowMap;\r\n\t\t\t\t_lights.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\r\n\t\t\t\t_lights.directional[ directionalLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.distance = distance;\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\tuniforms.direction.sub( _vector3 );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\r\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\r\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\r\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.spotShadowMap[ spotLength ] = shadowMap;\r\n\t\t\t\t_lights.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\r\n\t\t\t\t_lights.spot[ spotLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\r\n\r\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\r\n\t\t\t\tuniforms.distance = light.distance;\r\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tuniforms.shadow = light.castShadow;\r\n\r\n\t\t\t\tif ( light.castShadow ) {\r\n\r\n\t\t\t\t\tuniforms.shadowBias = light.shadow.bias;\r\n\t\t\t\t\tuniforms.shadowRadius = light.shadow.radius;\r\n\t\t\t\t\tuniforms.shadowMapSize = light.shadow.mapSize;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_lights.pointShadowMap[ pointLength ] = shadowMap;\r\n\r\n\t\t\t\tif ( _lights.pointShadowMatrix[ pointLength ] === undefined ) {\r\n\r\n\t\t\t\t\t_lights.pointShadowMatrix[ pointLength ] = new THREE.Matrix4();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\r\n\t\t\t\t// equal to inverse of the light's position\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld ).negate();\r\n\t\t\t\t_lights.pointShadowMatrix[ pointLength ].identity().setPosition( _vector3 );\r\n\r\n\t\t\t\t_lights.point[ pointLength ++ ] = uniforms;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\tvar uniforms = lightCache.get( light );\r\n\r\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\r\n\t\t\t\tuniforms.direction.normalize();\r\n\r\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\r\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\r\n\r\n\t\t\t\t_lights.hemi[ hemiLength ++ ] = uniforms;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_lights.ambient[ 0 ] = r;\r\n\t\t_lights.ambient[ 1 ] = g;\r\n\t\t_lights.ambient[ 2 ] = b;\r\n\r\n\t\t_lights.directional.length = directionalLength;\r\n\t\t_lights.spot.length = spotLength;\r\n\t\t_lights.point.length = pointLength;\r\n\t\t_lights.hemi.length = hemiLength;\r\n\r\n\t\t_lights.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + hemiLength + ',' + _lights.shadows.length;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tstate.setCullFace( cullFace );\r\n\t\tstate.setFlipSided( frontFaceDirection === THREE.FrontFaceDirectionCW );\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction allocTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\r\n\r\n\t\t\tconsole.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isPowerOfTwoImage ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isPowerOfTwoImage ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension ) {\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\r\n\t\t\tif ( texture.type === THREE.HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction uploadTexture( textureProperties, texture, slot ) {\r\n\r\n\t\tif ( textureProperties.__webglInit === undefined ) {\r\n\r\n\t\t\ttextureProperties.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\r\n\r\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\r\n\r\n\t\t\timage = makePowerOfTwo( image );\r\n\r\n\t\t}\r\n\r\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DepthTexture ) {\r\n\r\n\t\t\t// populate depth texture with dummy data\r\n\r\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\r\n\r\n\t\t\tif ( texture.type === THREE.FloatType ) {\r\n\r\n\t\t\t\tif ( !_isWebGL2 ) throw new Error('Float Depth Texture only supported in WebGL2.0');\r\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\r\n\r\n\t\t\t} else if ( _isWebGL2 ) {\r\n\r\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\r\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\r\n\r\n\t\t} else if ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t}\r\n\r\n\tfunction setTexture2D( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\tvar image = texture.image;\r\n\r\n\t\t\tif ( image === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( image.complete === false ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuploadTexture( textureProperties, texture, slot );\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\r\n\t}\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction isPowerOfTwo( image ) {\r\n\r\n\t\treturn THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height );\r\n\r\n\t}\r\n\r\n\tfunction textureNeedsPowerOfTwo( texture ) {\r\n\r\n\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) return true;\r\n\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) return true;\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction makePowerOfTwo( image ) {\r\n\r\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement ) {\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = THREE.Math.nearestPowerOfTwo( image.width );\r\n\t\t\tcanvas.height = THREE.Math.nearestPowerOfTwo( image.height );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setTextureCube ( texture, slot ) {\r\n\r\n\t\tvar textureProperties = properties.get( texture );\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\r\n\r\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_infoMemory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isPowerOfTwoImage ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextureProperties.__version = texture.version;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setTextureCubeDynamic ( texture, slot ) {\r\n\r\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\r\n\r\n\t}\r\n\r\n\tthis.allocTextureUnit = allocTextureUnit;\r\n\r\n\t//this.setTexture2D = setTexture2D;\r\n\tthis.setTexture2D = ( function() {\r\n\r\n\t\tvar warned = false;\r\n\r\n\t\t// backwards compatibility: peel texture.texture\r\n\t\treturn function( texture, slot ) {\r\n\r\n\t\t\tif ( texture instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tsetTexture2D( texture, slot );\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tthis.setTexture = ( function() {\r\n\r\n\t\tvar warned = false;\r\n\r\n\t\treturn function( texture, slot ) {\r\n\r\n\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\r\n\t\t\t\twarned = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setTexture2D( texture, slot );\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\tthis.setTextureCube = ( function() {\r\n\r\n\t\tvar warned = false;\r\n\r\n\t\treturn function( texture, slot ) {\r\n\r\n\t\t\t// backwards compatibility: peel texture.texture\r\n\t\t\tif ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\tif ( ! warned ) {\r\n\r\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\r\n\t\t\t\t\twarned = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture = texture.texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\r\n\t\t\t// TODO: unify these code paths\r\n\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t ( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\r\n\r\n\t\t\t\t// CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t// this function alone should take care of cube textures\r\n\t\t\t\tsetTextureCube( texture, slot );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\r\n\r\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}() );\r\n\r\n\t// Render targets\r\n\r\n\t// Setup storage for target texture and bind it to correct framebuffer\r\n\tfunction setupFrameBufferTexture ( framebuffer, renderTarget, attachment, textureTarget ) {\r\n\r\n\t\tvar glFormat = paramThreeToGL( renderTarget.texture.format );\r\n\t\tvar glType = paramThreeToGL( renderTarget.texture.type );\r\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\r\n\tfunction setupRenderBufferStorage ( renderbuffer, renderTarget ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// FIXME: We don't support !depth !stencil\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\r\n\tfunction setupDepthTexture ( framebuffer, renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tif ( isCube ) throw new Error('Depth Texture with cube render targets is not supported!');\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\tif ( !( renderTarget.depthTexture instanceof THREE.DepthTexture ) ) {\r\n\r\n\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\r\n\r\n\t\t}\r\n\r\n\t\t// upload an empty depth texture with framebuffer size\r\n\t\tif ( !properties.get( renderTarget.depthTexture ).__webglTexture ||\r\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\r\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\r\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\r\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\r\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\r\n\t\t}\r\n\r\n\t\t_this.setTexture2D( renderTarget.depthTexture, 0 );\r\n\r\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\r\n\r\n\t}\r\n\r\n\t// Setup GL resources for a non-texture depth buffer\r\n\tfunction setupDepthRenderbuffer( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget.depthTexture ) {\r\n\r\n\t\t\tif ( isCube ) throw new Error('target.depthTexture not supported in Cube render targets');\r\n\r\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\r\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\r\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\r\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\r\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t}\r\n\r\n\t// Set up GL resources for the render target\r\n\tfunction setupRenderTarget( renderTarget ) {\r\n\r\n\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\r\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\r\n\r\n\t\t_infoMemory.textures ++;\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height );\r\n\r\n\t\t// Setup framebuffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t}\r\n\r\n\t\t// Setup color buffer\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\r\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\r\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\r\n\r\n\t\t\tif ( renderTarget.texture.generateMipmaps && isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t\t// Setup depth and stencil buffers\r\n\r\n\t\tif ( renderTarget.depthBuffer ) {\r\n\r\n\t\t\tsetupDepthRenderbuffer( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.getCurrentRenderTarget = function() {\r\n\r\n\t\treturn _currentRenderTarget;\r\n\r\n\t};\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\t_currentRenderTarget = renderTarget;\r\n\r\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tsetupRenderTarget( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\t\tvar framebuffer;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTargetProperties.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_currentScissor.copy( renderTarget.scissor );\r\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\r\n\r\n\t\t\t_currentViewport.copy( renderTarget.viewport );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\r\n\t\t\t_currentScissorTest = _scissorTest;\r\n\r\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\r\n\r\n\t\t}\r\n\r\n\t\tif ( _currentFramebuffer !== framebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\tstate.scissor( _currentScissor );\r\n\t\tstate.setScissorTest( _currentScissorTest );\r\n\r\n\t\tstate.viewport( _currentViewport );\r\n\r\n\t\tif ( isCube ) {\r\n\r\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\r\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTarget === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\r\n\r\n\t\tif ( framebuffer ) {\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tvar texture = renderTarget.texture;\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && paramThreeToGL( texture.format ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.type !== THREE.UnsignedByteType &&\r\n\t\t\t\t     paramThreeToGL( texture.type ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) &&\r\n\t\t\t\t     ! ( texture.type === THREE.FloatType && extensions.get( 'WEBGL_color_buffer_float' ) ) &&\r\n\t\t\t\t     ! ( texture.type === THREE.HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\r\n\t\t\t\t\treturn;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\r\n\r\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\r\n\r\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, paramThreeToGL( texture.format ), paramThreeToGL( texture.type ), buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} finally {\r\n\r\n\t\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap( renderTarget ) {\r\n\r\n\t\tvar target = renderTarget instanceof THREE.WebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\r\n\t\tvar texture = properties.get( renderTarget.texture ).__webglTexture;\r\n\r\n\t\tstate.bindTexture( target, texture );\r\n\t\t_gl.generateMipmap( target );\r\n\t\tstate.bindTexture( target, null );\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\t\tif ( p === THREE.DepthFormat ) return _gl.DEPTH_COMPONENT;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_ETC1_Format ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author Marius Kintel / https://github.com/kintel\r\n */\r\n\r\n/*\r\n In options, we can specify:\r\n * Texture parameters for an auto-generated target texture\r\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\r\n*/\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.scissor = new THREE.Vector4( 0, 0, width, height );\r\n\tthis.scissorTest = false;\r\n\r\n\tthis.viewport = new THREE.Vector4( 0, 0, width, height );\r\n\r\n\toptions = options || {};\r\n\r\n\tif ( options.minFilter === undefined ) options.minFilter = THREE.LinearFilter;\r\n\r\n\tthis.texture = new THREE.Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\tthis.depthTexture = null;\r\n\r\n};\r\n\r\nObject.assign( THREE.WebGLRenderTarget.prototype, THREE.EventDispatcher.prototype, {\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tif ( this.width !== width || this.height !== height ) {\r\n\r\n\t\t\tthis.width = width;\r\n\t\t\tthis.height = height;\r\n\r\n\t\t\tthis.dispose();\r\n\r\n\t\t}\r\n\r\n\t\tthis.viewport.set( 0, 0, width, height );\r\n\t\tthis.scissor.set( 0, 0, width, height );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new this.constructor().copy( this );\r\n\r\n\t},\r\n\r\n\tcopy: function ( source ) {\r\n\r\n\t\tthis.width = source.width;\r\n\t\tthis.height = source.height;\r\n\r\n\t\tthis.viewport.copy( source.viewport );\r\n\r\n\t\tthis.texture = source.texture.clone();\r\n\r\n\t\tthis.depthBuffer = source.depthBuffer;\r\n\t\tthis.stencilBuffer = source.stencilBuffer;\r\n\t\tthis.depthTexture = source.depthTexture;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\tthis.activeMipMapLevel = 0;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawArrays( mode, start, count );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar position = geometry.attributes.position;\r\n\r\n\t\tvar count = 0;\r\n\r\n\t\tif ( position instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tcount = position.data.count;\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcount = position.count;\r\n\r\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\r\n\r\n\t\t}\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLClipping.js\r\n\r\nTHREE.WebGLClipping = function() {\r\n\r\n\tvar scope = this,\r\n\r\n\t\tglobalState = null,\r\n\t\tnumGlobalPlanes = 0,\r\n\t\tlocalClippingEnabled = false,\r\n\t\trenderingShadows = false,\r\n\r\n\t\tplane = new THREE.Plane(),\r\n\t\tviewNormalMatrix = new THREE.Matrix3(),\r\n\r\n\t\tuniform = { value: null, needsUpdate: false };\r\n\r\n\tthis.uniform = uniform;\r\n\tthis.numPlanes = 0;\r\n\r\n\tthis.init = function( planes, enableLocalClipping, camera ) {\r\n\r\n\t\tvar enabled =\r\n\t\t\tplanes.length !== 0 ||\r\n\t\t\tenableLocalClipping ||\r\n\t\t\t// enable state of previous frame - the clipping code has to\r\n\t\t\t// run another frame in order to reset the state:\r\n\t\t\tnumGlobalPlanes !== 0 ||\r\n\t\t\tlocalClippingEnabled;\r\n\r\n\t\tlocalClippingEnabled = enableLocalClipping;\r\n\r\n\t\tglobalState = projectPlanes( planes, camera, 0 );\r\n\t\tnumGlobalPlanes = planes.length;\r\n\r\n\t\treturn enabled;\r\n\r\n\t};\r\n\r\n\tthis.beginShadows = function() {\r\n\r\n\t\trenderingShadows = true;\r\n\t\tprojectPlanes( null );\r\n\r\n\t};\r\n\r\n\tthis.endShadows = function() {\r\n\r\n\t\trenderingShadows = false;\r\n\t\tresetGlobalState();\r\n\r\n\t};\r\n\r\n\tthis.setState = function( planes, clipShadows, camera, cache, fromCache ) {\r\n\r\n\t\tif ( ! localClippingEnabled ||\r\n\t\t\t\tplanes === null || planes.length === 0 ||\r\n\t\t\t\trenderingShadows && ! clipShadows ) {\r\n\t\t\t// there's no local clipping\r\n\r\n\t\t\tif ( renderingShadows ) {\r\n\t\t\t\t// there's no global clipping\r\n\r\n\t\t\t\tprojectPlanes( null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tresetGlobalState();\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\r\n\t\t\t\tlGlobal = nGlobal * 4,\r\n\r\n\t\t\t\tdstArray = cache.clippingState || null;\r\n\r\n\t\t\tuniform.value = dstArray; // ensure unique state\r\n\r\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\r\n\r\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\r\n\r\n\t\t\t\tdstArray[ i ] = globalState[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcache.clippingState = dstArray;\r\n\t\t\tthis.numPlanes += nGlobal;\r\n\r\n\t\t}\r\n\r\n\r\n\t};\r\n\r\n\tfunction resetGlobalState() {\r\n\r\n\t\tif ( uniform.value !== globalState ) {\r\n\r\n\t\t\tuniform.value = globalState;\r\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = numGlobalPlanes;\r\n\r\n\t}\r\n\r\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\r\n\r\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\r\n\t\t\tdstArray = null;\r\n\r\n\t\tif ( nPlanes !== 0 ) {\r\n\r\n\t\t\tdstArray = uniform.value;\r\n\r\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\r\n\r\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\r\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\r\n\r\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\r\n\r\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\r\n\r\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var i = 0, i4 = dstOffset;\r\n\t\t\t\t\t\t\t\t\ti !== nPlanes; ++ i, i4 += 4 ) {\r\n\r\n\t\t\t\t\tplane.copy( planes[ i ] ).\r\n\t\t\t\t\t\t\tapplyMatrix4( viewMatrix, viewNormalMatrix );\r\n\r\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\r\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuniform.value = dstArray;\r\n\t\t\tuniform.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tscope.numPlanes = nPlanes;\r\n\t\treturn dstArray;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/renderers/webgl/WebGLIndexedBufferRenderer.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLIndexedBufferRenderer = function ( _gl, extensions, _infoRender ) {\r\n\r\n\tvar mode;\r\n\r\n\tfunction setMode( value ) {\r\n\r\n\t\tmode = value;\r\n\r\n\t}\r\n\r\n\tvar type, size;\r\n\r\n\tfunction setIndex( index ) {\r\n\r\n\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\tsize = 4;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\tsize = 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction render( start, count ) {\r\n\r\n\t\t_gl.drawElements( mode, count, type, start * size );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += count / 3;\r\n\r\n\t}\r\n\r\n\tfunction renderInstances( geometry, start, count ) {\r\n\r\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * size, geometry.maxInstancedCount );\r\n\r\n\t\t_infoRender.calls ++;\r\n\t\t_infoRender.vertices += count * geometry.maxInstancedCount;\r\n\t\tif ( mode === _gl.TRIANGLES ) _infoRender.faces += geometry.maxInstancedCount * count / 3;\r\n\t}\r\n\r\n\tthis.setMode = setMode;\r\n\tthis.setIndex = setIndex;\r\n\tthis.render = render;\r\n\tthis.renderInstances = renderInstances;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'WEBGL_depth_texture':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_etc1':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLCapabilities.js\r\n\r\nTHREE.WebGLCapabilities = function ( gl, extensions, parameters ) {\r\n\r\n\tfunction getMaxPrecision( precision ) {\r\n\r\n\t\tif ( precision === 'highp' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'highp';\r\n\r\n\t\t\t}\r\n\r\n\t\t\tprecision = 'mediump';\r\n\r\n\t\t}\r\n\r\n\t\tif ( precision === 'mediump' ) {\r\n\r\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\r\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\r\n\r\n\t\t\t\treturn 'mediump';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn 'lowp';\r\n\r\n\t}\r\n\r\n\tthis.getMaxPrecision = getMaxPrecision;\r\n\r\n\tthis.precision = parameters.precision !== undefined ? parameters.precision : 'highp';\r\n\tthis.logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false;\r\n\r\n\tthis.maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tthis.maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\r\n\tthis.maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tthis.maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tthis.maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\tthis.maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\r\n\tthis.maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\r\n\r\n\tthis.vertexTextures = this.maxVertexTextures > 0;\r\n\tthis.floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\r\n\tthis.floatVertexTextures = this.vertexTextures && this.floatFragmentTextures;\r\n\r\n\tvar _maxPrecision = getMaxPrecision( this.precision );\r\n\r\n\tif ( _maxPrecision !== this.precision ) {\r\n\r\n\t\tconsole.warn( 'THREE.WebGLRenderer:', this.precision, 'not supported, using', _maxPrecision, 'instead.' );\r\n\t\tthis.precision = _maxPrecision;\r\n\r\n\t}\r\n\r\n\tif ( this.logarithmicDepthBuffer ) {\r\n\r\n\t\tthis.logarithmicDepthBuffer = !! extensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLGeometries.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLGeometries = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = {};\r\n\r\n\tfunction get( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometries[ geometry.id ] !== undefined ) {\r\n\r\n\t\t\treturn geometries[ geometry.id ];\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tvar buffergeometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tbuffergeometry = geometry;\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\r\n\r\n\t\t\t\tgeometry._bufferGeometry = new THREE.BufferGeometry().setFromObject( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbuffergeometry = geometry._bufferGeometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometries[ geometry.id ] = buffergeometry;\r\n\r\n\t\tinfo.memory.geometries ++;\r\n\r\n\t\treturn buffergeometry;\r\n\r\n\t}\r\n\r\n\tfunction onGeometryDispose( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\t\tvar buffergeometry = geometries[ geometry.id ];\r\n\r\n\t\tif ( buffergeometry.index !== null ) {\r\n\r\n\t\t\tdeleteAttribute( buffergeometry.index );\r\n\r\n\t\t}\r\n\r\n\t\tdeleteAttributes( buffergeometry.attributes );\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdelete geometries[ geometry.id ];\r\n\r\n\t\t// TODO\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe ) {\r\n\r\n\t\t\tdeleteAttribute( property.wireframe );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( geometry );\r\n\r\n\t\tvar bufferproperty = properties.get( buffergeometry );\r\n\r\n\t\tif ( bufferproperty.wireframe ) {\r\n\r\n\t\t\tdeleteAttribute( bufferproperty.wireframe );\r\n\r\n\t\t}\r\n\r\n\t\tproperties.delete( buffergeometry );\r\n\r\n\t\t//\r\n\r\n\t\tinfo.memory.geometries --;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction deleteAttribute( attribute ) {\r\n\r\n\t\tvar buffer = getAttributeBuffer( attribute );\r\n\r\n\t\tif ( buffer !== undefined ) {\r\n\r\n\t\t\tgl.deleteBuffer( buffer );\r\n\t\t\tremoveAttributeBuffer( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction deleteAttributes( attributes ) {\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tdeleteAttribute( attributes[ name ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction removeAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\tproperties.delete( attribute.data );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tproperties.delete( attribute );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.get = get;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLLights.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLLights = function () {\r\n\r\n\tvar lights = {};\r\n\r\n\tthis.get = function ( light ) {\r\n\r\n\t\tif ( lights[ light.id ] !== undefined ) {\r\n\r\n\t\t\treturn lights[ light.id ];\r\n\r\n\t\t}\r\n\r\n\t\tvar uniforms;\r\n\r\n\t\tswitch ( light.type ) {\r\n\r\n\t\t\tcase 'DirectionalLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'SpotLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\tconeCos: 0,\r\n\t\t\t\t\tpenumbraCos: 0,\r\n\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'PointLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tposition: new THREE.Vector3(),\r\n\t\t\t\t\tcolor: new THREE.Color(),\r\n\t\t\t\t\tdistance: 0,\r\n\t\t\t\t\tdecay: 0,\r\n\r\n\t\t\t\t\tshadow: false,\r\n\t\t\t\t\tshadowBias: 0,\r\n\t\t\t\t\tshadowRadius: 1,\r\n\t\t\t\t\tshadowMapSize: new THREE.Vector2()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'HemisphereLight':\r\n\t\t\t\tuniforms = {\r\n\t\t\t\t\tdirection: new THREE.Vector3(),\r\n\t\t\t\t\tskyColor: new THREE.Color(),\r\n\t\t\t\t\tgroundColor: new THREE.Color()\r\n\t\t\t\t};\r\n\t\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t\tlights[ light.id ] = uniforms;\r\n\r\n\t\treturn uniforms;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLObjects.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLObjects = function ( gl, properties, info ) {\r\n\r\n\tvar geometries = new THREE.WebGLGeometries( gl, properties, info );\r\n\r\n\t//\r\n\r\n\tfunction update( object ) {\r\n\r\n\t\t// TODO: Avoid updating twice (when using shadowMap). Maybe add frame counter.\r\n\r\n\t\tvar geometry = geometries.get( object );\r\n\r\n\t\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tgeometry.updateFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tupdateAttribute( index, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in attributes ) {\r\n\r\n\t\t\tupdateAttribute( attributes[ name ], gl.ARRAY_BUFFER );\r\n\r\n\t\t}\r\n\r\n\t\t// morph targets\r\n\r\n\t\tvar morphAttributes = geometry.morphAttributes;\r\n\r\n\t\tfor ( var name in morphAttributes ) {\r\n\r\n\t\t\tvar array = morphAttributes[ name ];\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tupdateAttribute( array[ i ], gl.ARRAY_BUFFER );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n\tfunction updateAttribute( attribute, bufferType ) {\r\n\r\n\t\tvar data = ( attribute instanceof THREE.InterleavedBufferAttribute ) ? attribute.data : attribute;\r\n\r\n\t\tvar attributeProperties = properties.get( data );\r\n\r\n\t\tif ( attributeProperties.__webglBuffer === undefined ) {\r\n\r\n\t\t\tcreateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t} else if ( attributeProperties.version !== data.version ) {\r\n\r\n\t\t\tupdateBuffer( attributeProperties, data, bufferType );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tattributeProperties.__webglBuffer = gl.createBuffer();\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tvar usage = data.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\r\n\r\n\t\tgl.bufferData( bufferType, data.array, usage );\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction updateBuffer( attributeProperties, data, bufferType ) {\r\n\r\n\t\tgl.bindBuffer( bufferType, attributeProperties.__webglBuffer );\r\n\r\n\t\tif ( data.dynamic === false || data.updateRange.count === - 1 ) {\r\n\r\n\t\t\t// Not using update ranges\r\n\r\n\t\t\tgl.bufferSubData( bufferType, 0, data.array );\r\n\r\n\t\t} else if ( data.updateRange.count === 0 ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.bufferSubData( bufferType, data.updateRange.offset * data.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t  data.array.subarray( data.updateRange.offset, data.updateRange.offset + data.updateRange.count ) );\r\n\r\n\t\t\tdata.updateRange.count = 0; // reset range\r\n\r\n\t\t}\r\n\r\n\t\tattributeProperties.version = data.version;\r\n\r\n\t}\r\n\r\n\tfunction getAttributeBuffer( attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.InterleavedBufferAttribute ) {\r\n\r\n\t\t\treturn properties.get( attribute.data ).__webglBuffer;\r\n\r\n\t\t}\r\n\r\n\t\treturn properties.get( attribute ).__webglBuffer;\r\n\r\n\t}\r\n\r\n\tfunction getWireframeAttribute( geometry ) {\r\n\r\n\t\tvar property = properties.get( geometry );\r\n\r\n\t\tif ( property.wireframe !== undefined ) {\r\n\r\n\t\t\treturn property.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = [];\r\n\r\n\t\tvar index = geometry.index;\r\n\t\tvar attributes = geometry.attributes;\r\n\t\tvar position = attributes.position;\r\n\r\n\t\t// console.time( 'wireframe' );\r\n\r\n\t\tif ( index !== null ) {\r\n\r\n\t\t\tvar edges = {};\r\n\t\t\tvar array = index.array;\r\n\r\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = array[ i + 0 ];\r\n\t\t\t\tvar b = array[ i + 1 ];\r\n\t\t\t\tvar c = array[ i + 2 ];\r\n\r\n\t\t\t\tif ( checkEdge( edges, a, b ) ) indices.push( a, b );\r\n\t\t\t\tif ( checkEdge( edges, b, c ) ) indices.push( b, c );\r\n\t\t\t\tif ( checkEdge( edges, c, a ) ) indices.push( c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar array = attributes.position.array;\r\n\r\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\r\n\r\n\t\t\t\tvar a = i + 0;\r\n\t\t\t\tvar b = i + 1;\r\n\t\t\t\tvar c = i + 2;\r\n\r\n\t\t\t\tindices.push( a, b, b, c, c, a );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// console.timeEnd( 'wireframe' );\r\n\r\n\t\tvar TypeArray = position.count > 65535 ? Uint32Array : Uint16Array;\r\n\t\tvar attribute = new THREE.BufferAttribute( new TypeArray( indices ), 1 );\r\n\r\n\t\tupdateAttribute( attribute, gl.ELEMENT_ARRAY_BUFFER );\r\n\r\n\t\tproperty.wireframe = attribute;\r\n\r\n\t\treturn attribute;\r\n\r\n\t}\r\n\r\n\tfunction checkEdge( edges, a, b ) {\r\n\r\n\t\tif ( a > b ) {\r\n\r\n\t\t\tvar tmp = a;\r\n\t\t\ta = b;\r\n\t\t\tb = tmp;\r\n\r\n\t\t}\r\n\r\n\t\tvar list = edges[ a ];\r\n\r\n\t\tif ( list === undefined ) {\r\n\r\n\t\t\tedges[ a ] = [ b ];\r\n\t\t\treturn true;\r\n\r\n\t\t} else if ( list.indexOf( b ) === -1 ) {\r\n\r\n\t\t\tlist.push( b );\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tthis.getAttributeBuffer = getAttributeBuffer;\r\n\tthis.getWireframeAttribute = getWireframeAttribute;\r\n\r\n\tthis.update = update;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tfunction getEncodingComponents( encoding ) {\r\n\r\n\t\tswitch ( encoding ) {\r\n\r\n\t\t\tcase THREE.LinearEncoding:\r\n\t\t\t\treturn [ 'Linear','( value )' ];\r\n\t\t\tcase THREE.sRGBEncoding:\r\n\t\t\t\treturn [ 'sRGB','( value )' ];\r\n\t\t\tcase THREE.RGBEEncoding:\r\n\t\t\t\treturn [ 'RGBE','( value )' ];\r\n\t\t\tcase THREE.RGBM7Encoding:\r\n\t\t\t\treturn [ 'RGBM','( value, 7.0 )' ];\r\n\t\t\tcase THREE.RGBM16Encoding:\r\n\t\t\t\treturn [ 'RGBM','( value, 16.0 )' ];\r\n\t\t\tcase THREE.RGBDEncoding:\r\n\t\t\t\treturn [ 'RGBD','( value, 256.0 )' ];\r\n\t\t\tcase THREE.GammaEncoding:\r\n\t\t\t\treturn [ 'Gamma','( value, float( GAMMA_FACTOR ) )' ];\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\r\n\r\n\t}\r\n\r\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\r\n\r\n\t\tvar components = getEncodingComponents( encoding );\r\n\t\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\r\n\r\n\t}\r\n\r\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\r\n\r\n\t\tvar toneMappingName;\r\n\r\n\t\tswitch ( toneMapping ) {\r\n\r\n\t\t\tcase THREE.LinearToneMapping:\r\n\t\t\t\ttoneMappingName = \"Linear\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.ReinhardToneMapping:\r\n\t\t\t\ttoneMappingName = \"Reinhard\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.Uncharted2ToneMapping:\r\n\t\t\t\ttoneMappingName = \"Uncharted2\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase THREE.CineonToneMapping:\r\n\t\t\t\ttoneMappingName = \"OptimizedCineon\";\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\r\n\r\n\t\t}\r\n\r\n\t\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\r\n\r\n\t}\r\n\r\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\r\n\r\n\t\textensions = extensions || {};\r\n\r\n\t\tvar chunks = [\r\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\r\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\r\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : '',\r\n\t\t];\r\n\r\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction generateDefines( defines ) {\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tfor ( var name in defines ) {\r\n\r\n\t\t\tvar value = defines[ name ];\r\n\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t}\r\n\r\n\tfunction fetchAttributeLocations( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\r\n\r\n\t\tfor ( var i = 0; i < n; i ++ ) {\r\n\r\n\t\t\tvar info = gl.getActiveAttrib( program, i );\r\n\t\t\tvar name = info.name;\r\n\r\n\t\t\t// console.log(\"THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:\", name, i );\r\n\r\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t}\r\n\r\n\tfunction filterEmptyLine( string ) {\r\n\r\n\t\treturn string !== '';\r\n\r\n\t}\r\n\r\n\tfunction replaceLightNums( string, parameters ) {\r\n\r\n\t\treturn string\r\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\r\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\r\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\r\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\r\n\r\n\t}\r\n\r\n\tfunction parseIncludes( string ) {\r\n\r\n\t\tvar pattern = /#include +<([\\w\\d.]+)>/g;\r\n\r\n\t\tfunction replace( match, include ) {\r\n\r\n\t\t\tvar replace = THREE.ShaderChunk[ include ];\r\n\r\n\t\t\tif ( replace === undefined ) {\r\n\r\n\t\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn parseIncludes( replace );\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\tfunction unrollLoops( string ) {\r\n\r\n\t\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\r\n\r\n\t\tfunction replace( match, start, end, snippet ) {\r\n\r\n\t\t\tvar unroll = '';\r\n\r\n\t\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\r\n\r\n\t\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn unroll;\r\n\r\n\t\t}\r\n\r\n\t\treturn string.replace( pattern, replace );\r\n\r\n\t}\r\n\r\n\treturn function WebGLProgram( renderer, code, material, parameters ) {\r\n\r\n\t\tvar gl = renderer.context;\r\n\r\n\t\tvar extensions = material.extensions;\r\n\t\tvar defines = material.defines;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.CubeUVReflectionMapping:\r\n\t\t\t\tcase THREE.CubeUVRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customExtensions = generateExtensions( extensions, parameters, renderer.extensions );\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar prefixVertex, prefixFragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefixVertex = '';\r\n\t\t\tprefixFragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefixVertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t\tprefixFragment = [\r\n\r\n\t\t\t\tcustomExtensions,\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t'#define SHADER_NAME ' + material.__webglShader.name,\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\r\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\r\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\r\n\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\r\n\t\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\r\n\r\n\t\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\tparameters.logarithmicDepthBuffer && renderer.extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\tparameters.envMap && renderer.extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? THREE.ShaderChunk[ 'tonemapping_pars_fragment' ] : '',  // this code is required here because it is used by the toneMapping() function defined below\r\n\t\t\t\t( parameters.toneMapping !== THREE.NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\r\n\r\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? THREE.ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\r\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\r\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\r\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\r\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\r\n\r\n\t\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\r\n\r\n\t\t\t\t'\\n'\r\n\r\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvertexShader = parseIncludes( vertexShader, parameters );\r\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\r\n\r\n\t\tfragmentShader = parseIncludes( fragmentShader, parameters );\r\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\r\n\r\n\t\tif ( material instanceof THREE.ShaderMaterial === false ) {\r\n\r\n\t\t\tvertexShader = unrollLoops( vertexShader );\r\n\t\t\tfragmentShader = unrollLoops( fragmentShader );\r\n\r\n\t\t}\r\n\r\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\r\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\r\n\r\n\t\t// console.log( '*VERTEX*', vertexGlsl );\r\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\r\n\r\n\t\tvar glVertexShader = THREE.WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\r\n\t\tvar glFragmentShader = THREE.WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\r\n\r\n\t\tgl.attachShader( program, glVertexShader );\r\n\t\tgl.attachShader( program, glFragmentShader );\r\n\r\n\t\t// Force a particular attribute to index 0.\r\n\r\n\t\tif ( material.index0AttributeName !== undefined ) {\r\n\r\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\r\n\r\n\t\t} else if ( parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\r\n\r\n\t\t}\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\tvar programLog = gl.getProgramInfoLog( program );\r\n\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\r\n\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\r\n\r\n\t\tvar runnable = true;\r\n\t\tvar haveDiagnostics = true;\r\n\r\n\t\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\trunnable = false;\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\r\n\r\n\t\t} else if ( programLog !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\r\n\r\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\r\n\r\n\t\t\thaveDiagnostics = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( haveDiagnostics ) {\r\n\r\n\t\t\tthis.diagnostics = {\r\n\r\n\t\t\t\trunnable: runnable,\r\n\t\t\t\tmaterial: material,\r\n\r\n\t\t\t\tprogramLog: programLog,\r\n\r\n\t\t\t\tvertexShader: {\r\n\r\n\t\t\t\t\tlog: vertexLog,\r\n\t\t\t\t\tprefix: prefixVertex\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tfragmentShader: {\r\n\r\n\t\t\t\t\tlog: fragmentLog,\r\n\t\t\t\t\tprefix: prefixFragment\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\tgl.deleteShader( glVertexShader );\r\n\t\tgl.deleteShader( glFragmentShader );\r\n\r\n\t\t// set up caching for uniform locations\r\n\r\n\t\tvar cachedUniforms;\r\n\r\n\t\tthis.getUniforms = function() {\r\n\r\n\t\t\tif ( cachedUniforms === undefined ) {\r\n\r\n\t\t\t\tcachedUniforms =\r\n\t\t\t\t\t\tnew THREE.WebGLUniforms( gl, program, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedUniforms;\r\n\r\n\t\t};\r\n\r\n\t\t// set up caching for attribute locations\r\n\r\n\t\tvar cachedAttributes;\r\n\r\n\t\tthis.getAttributes = function() {\r\n\r\n\t\t\tif ( cachedAttributes === undefined ) {\r\n\r\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn cachedAttributes;\r\n\r\n\t\t};\r\n\r\n\t\t// free resource\r\n\r\n\t\tthis.destroy = function() {\r\n\r\n\t\t\tgl.deleteProgram( program );\r\n\t\t\tthis.program = undefined;\r\n\r\n\t\t};\r\n\r\n\t\t// DEPRECATED\r\n\r\n\t\tObject.defineProperties( this, {\r\n\r\n\t\t\tuniforms: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\r\n\t\t\t\t\treturn this.getUniforms();\r\n\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\tattributes: {\r\n\t\t\t\tget: function() {\r\n\r\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\r\n\t\t\t\t\treturn this.getAttributes();\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLPrograms.js\r\n\r\nTHREE.WebGLPrograms = function ( renderer, capabilities ) {\r\n\r\n\tvar programs = [];\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tMeshStandardMaterial: 'physical',\r\n\t\tMeshPhysicalMaterial: 'physical',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointsMaterial: 'points'\r\n\t};\r\n\r\n\tvar parameterNames = [\r\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\r\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\r\n\t\t\"roughnessMap\", \"metalnessMap\",\r\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\r\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\r\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\r\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\r\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\",\r\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\r\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"depthPacking\"\r\n\t];\r\n\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tconsole.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\r\n\r\n\t\tvar encoding;\r\n\r\n\t\tif ( ! map ) {\r\n\r\n\t\t\tencoding = THREE.LinearEncoding;\r\n\r\n\t\t} else if ( map instanceof THREE.Texture ) {\r\n\r\n\t\t\tencoding = map.encoding;\r\n\r\n\t\t} else if ( map instanceof THREE.WebGLRenderTarget ) {\r\n\r\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\r\n\t\t\tencoding = map.texture.encoding;\r\n\r\n\t\t}\r\n\r\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\r\n\t\tif ( encoding === THREE.LinearEncoding && gammaOverrideLinear ) {\r\n\r\n\t\t\tencoding = THREE.GammaEncoding;\r\n\r\n\t\t}\r\n\r\n\t\treturn encoding;\r\n\r\n\t}\r\n\r\n\tthis.getParameters = function ( material, lights, fog, nClipPlanes, object ) {\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxBones = allocateBones( object );\r\n\t\tvar precision = renderer.getPrecision();\r\n\r\n\t\tif ( material.precision !== null ) {\r\n\r\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\r\n\r\n\t\t\tif ( precision !== material.precision ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar currentRenderTarget = renderer.getCurrentRenderTarget();\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tshaderID: shaderID,\r\n\r\n\t\t\tprecision: precision,\r\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\r\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\r\n\t\t\tmap: !! material.map,\r\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\r\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === THREE.CubeUVReflectionMapping ) || ( material.envMap.mapping === THREE.CubeUVRefractionMapping ) ),\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\taoMap: !! material.aoMap,\r\n\t\t\temissiveMap: !! material.emissiveMap,\r\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tdisplacementMap: !! material.displacementMap,\r\n\t\t\troughnessMap: !! material.roughnessMap,\r\n\t\t\tmetalnessMap: !! material.metalnessMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\r\n\r\n\t\t\tnumDirLights: lights.directional.length,\r\n\t\t\tnumPointLights: lights.point.length,\r\n\t\t\tnumSpotLights: lights.spot.length,\r\n\t\t\tnumHemiLights: lights.hemi.length,\r\n\r\n\t\t\tnumClippingPlanes: nClipPlanes,\r\n\r\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && lights.shadows.length > 0,\r\n\t\t\tshadowMapType: renderer.shadowMap.type,\r\n\r\n\t\t\ttoneMapping: renderer.toneMapping,\r\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\r\n\r\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide,\r\n\r\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\r\n\r\n\t\t};\r\n\r\n\t\treturn parameters;\r\n\r\n\t};\r\n\r\n\tthis.getProgramCode = function ( material, parameters ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tif ( parameters.shaderID ) {\r\n\r\n\t\t\tarray.push( parameters.shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tarray.push( material.fragmentShader );\r\n\t\t\tarray.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tarray.push( name );\r\n\t\t\t\tarray.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\r\n\r\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn array.join();\r\n\r\n\t};\r\n\r\n\tthis.acquireProgram = function ( material, parameters, code ) {\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\t++ program.usedTimes;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( renderer, code, material, parameters );\r\n\t\t\tprograms.push( program );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tthis.releaseProgram = function( program ) {\r\n\r\n\t\tif ( -- program.usedTimes === 0 ) {\r\n\r\n\t\t\t// Remove from unordered set\r\n\t\t\tvar i = programs.indexOf( program );\r\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\r\n\t\t\tprograms.pop();\r\n\r\n\t\t\t// Free WebGL resources\r\n\t\t\tprogram.destroy();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Exposed for resource monitoring & error feedback via renderer.info:\r\n\tthis.programs = programs;\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProperties.js\r\n\r\n/**\r\n* @author fordacious / fordacious.github.io\r\n*/\r\n\r\nTHREE.WebGLProperties = function () {\r\n\r\n\tvar properties = {};\r\n\r\n\tthis.get = function ( object ) {\r\n\r\n\t\tvar uuid = object.uuid;\r\n\t\tvar map = properties[ uuid ];\r\n\r\n\t\tif ( map === undefined ) {\r\n\r\n\t\t\tmap = {};\r\n\t\t\tproperties[ uuid ] = map;\r\n\r\n\t\t}\r\n\r\n\t\treturn map;\r\n\r\n\t};\r\n\r\n\tthis.delete = function ( object ) {\r\n\r\n\t\tdelete properties[ object.uuid ];\r\n\r\n\t};\r\n\r\n\tthis.clear = function () {\r\n\r\n\t\tproperties = {};\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tfunction addLineNumbers( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t}\r\n\r\n\treturn function WebGLShader( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type );\r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShadowMap.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WebGLShadowMap = function ( _renderer, _lights, _objects ) {\r\n\r\n\tvar _gl = _renderer.context,\r\n\t_state = _renderer.state,\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_lightShadows = _lights.shadows,\r\n\r\n\t_shadowMapSize = new THREE.Vector2(),\r\n\r\n\t_lookTarget = new THREE.Vector3(),\r\n\t_lightPositionWorld = new THREE.Vector3(),\r\n\r\n\t_renderList = [],\r\n\r\n\t_MorphingFlag = 1,\r\n\t_SkinningFlag = 2,\r\n\r\n\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\r\n\r\n\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\r\n\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\r\n\r\n\t_materialCache = {};\r\n\r\n\tvar cubeDirections = [\r\n\t\tnew THREE.Vector3( 1, 0, 0 ), new THREE.Vector3( - 1, 0, 0 ), new THREE.Vector3( 0, 0, 1 ),\r\n\t\tnew THREE.Vector3( 0, 0, - 1 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, - 1, 0 )\r\n\t];\r\n\r\n\tvar cubeUps = [\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 1, 0 ),\r\n\t\tnew THREE.Vector3( 0, 1, 0 ), new THREE.Vector3( 0, 0, 1 ),\tnew THREE.Vector3( 0, 0, - 1 )\r\n\t];\r\n\r\n\tvar cube2DViewPorts = [\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4(),\r\n\t\tnew THREE.Vector4(), new THREE.Vector4(), new THREE.Vector4()\r\n\t];\r\n\r\n\t// init\r\n\r\n\tvar depthMaterialTemplate = new THREE.MeshDepthMaterial();\r\n\tdepthMaterialTemplate.depthPacking = THREE.RGBADepthPacking;\r\n\tdepthMaterialTemplate.clipping = true;\r\n\r\n\tvar distanceShader = THREE.ShaderLib[ \"distanceRGBA\" ];\r\n\tvar distanceUniforms = THREE.UniformsUtils.clone( distanceShader.uniforms );\r\n\r\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\r\n\r\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\r\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\r\n\r\n\t\tvar depthMaterial = depthMaterialTemplate.clone();\r\n\t\tdepthMaterial.morphTargets = useMorphing;\r\n\t\tdepthMaterial.skinning = useSkinning;\r\n\r\n\t\t_depthMaterials[ i ] = depthMaterial;\r\n\r\n\t\tvar distanceMaterial = new THREE.ShaderMaterial( {\r\n\t\t\tdefines: {\r\n\t\t\t\t'USE_SHADOWMAP': ''\r\n\t\t\t},\r\n\t\t\tuniforms: distanceUniforms,\r\n\t\t\tvertexShader: distanceShader.vertexShader,\r\n\t\t\tfragmentShader: distanceShader.fragmentShader,\r\n\t\t\tmorphTargets: useMorphing,\r\n\t\t\tskinning: useSkinning,\r\n\t\t\tclipping: true\r\n\t\t} );\r\n\r\n\t\t_distanceMaterials[ i ] = distanceMaterial;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar scope = this;\r\n\r\n\tthis.enabled = false;\r\n\r\n\tthis.autoUpdate = true;\r\n\tthis.needsUpdate = false;\r\n\r\n\tthis.type = THREE.PCFShadowMap;\r\n\r\n\tthis.renderReverseSided = true;\r\n\tthis.renderSingleSided = true;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( scope.enabled === false ) return;\r\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\r\n\r\n\t\tif ( _lightShadows.length === 0 ) return;\r\n\r\n\t\t// Set GL state for depth map.\r\n\t\t_state.clearColor( 1, 1, 1, 1 );\r\n\t\t_state.disable( _gl.BLEND );\r\n\t\t_state.setDepthTest( true );\r\n\t\t_state.setScissorTest( false );\r\n\r\n\t\t// render depth map\r\n\r\n\t\tvar faceCount, isPointLight;\r\n\r\n\t\tfor ( var i = 0, il = _lightShadows.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar light = _lightShadows[ i ];\r\n\t\t\tvar shadow = light.shadow;\r\n\r\n\t\t\tif ( shadow === undefined ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowCamera = shadow.camera;\r\n\r\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\r\n\r\n\t\t\tif ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tfaceCount = 6;\r\n\t\t\t\tisPointLight = true;\r\n\r\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\r\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\r\n\r\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\r\n\t\t\t\t// following orientation:\r\n\t\t\t\t//\r\n\t\t\t\t//  xzXZ\r\n\t\t\t\t//   y Y\r\n\t\t\t\t//\r\n\t\t\t\t// X - Positive x direction\r\n\t\t\t\t// x - Negative x direction\r\n\t\t\t\t// Y - Positive y direction\r\n\t\t\t\t// y - Negative y direction\r\n\t\t\t\t// Z - Positive z direction\r\n\t\t\t\t// z - Negative z direction\r\n\r\n\t\t\t\t// positive X\r\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// negative X\r\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// positive Z\r\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// negative Z\r\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\r\n\t\t\t\t// positive Y\r\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\r\n\t\t\t\t// negative Y\r\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\r\n\r\n\t\t\t\t_shadowMapSize.x *= 4.0;\r\n\t\t\t\t_shadowMapSize.y *= 2.0;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfaceCount = 1;\r\n\t\t\t\tisPointLight = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow.map === null ) {\r\n\r\n\t\t\t\tvar pars = { minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tshadow.map = new THREE.WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\r\n\r\n\t\t\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( shadow instanceof THREE.SpotLightShadow ) {\r\n\r\n\t\t\t\tshadow.update( light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar shadowMap = shadow.map;\r\n\t\t\tvar shadowMatrix = shadow.matrix;\r\n\r\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// render shadow map for each cube face (if omni-directional) or\r\n\t\t\t// run a single pass if not\r\n\r\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\r\n\r\n\t\t\t\tif ( isPointLight ) {\r\n\r\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\r\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\r\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\r\n\t\t\t\t\t_state.viewport( vpDimensions );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tshadowCamera.updateMatrixWorld();\r\n\t\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t\t// compute shadow matrix\r\n\r\n\t\t\t\tshadowMatrix.set(\r\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t\t_renderList.length = 0;\r\n\r\n\t\t\t\tprojectObject( scene, camera, shadowCamera );\r\n\r\n\t\t\t\t// render shadow map\r\n\t\t\t\t// render regular objects\r\n\r\n\t\t\t\tfor ( var j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar object = _renderList[ j ];\r\n\t\t\t\t\tvar geometry = _objects.update( object );\r\n\t\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\t\tif ( material instanceof THREE.MultiMaterial ) {\r\n\r\n\t\t\t\t\t\tvar groups = geometry.groups;\r\n\t\t\t\t\t\tvar materials = material.materials;\r\n\r\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar group = groups[ k ];\r\n\t\t\t\t\t\t\tvar groupMaterial = materials[ group.materialIndex ];\r\n\r\n\t\t\t\t\t\t\tif ( groupMaterial.visible === true ) {\r\n\r\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld );\r\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Restore GL state.\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\t\t_renderer.setClearColor( clearColor, clearAlpha );\r\n\r\n\t\tscope.needsUpdate = false;\r\n\r\n\t};\r\n\r\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tvar result = null;\r\n\r\n\t\tvar materialVariants = _depthMaterials;\r\n\t\tvar customMaterial = object.customDepthMaterial;\r\n\r\n\t\tif ( isPointLight ) {\r\n\r\n\t\t\tmaterialVariants = _distanceMaterials;\r\n\t\t\tcustomMaterial = object.customDistanceMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( ! customMaterial ) {\r\n\r\n\t\t\tvar useMorphing = geometry.morphTargets !== undefined &&\r\n\t\t\t\t\tgeometry.morphTargets.length > 0 && material.morphTargets;\r\n\r\n\t\t\tvar useSkinning = object instanceof THREE.SkinnedMesh && material.skinning;\r\n\r\n\t\t\tvar variantIndex = 0;\r\n\r\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\r\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\r\n\r\n\t\t\tresult = materialVariants[ variantIndex ];\r\n\r\n\t\t} else {\r\n\r\n\t\t\tresult = customMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tif ( _renderer.localClippingEnabled &&\r\n\t\t\t material.clipShadows === true &&\r\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\r\n\r\n\t\t\t// in this case we need a unique material instance reflecting the\r\n\t\t\t// appropriate state\r\n\r\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\r\n\r\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\r\n\r\n\t\t\tif ( materialsForVariant === undefined ) {\r\n\r\n\t\t\t\tmaterialsForVariant = {};\r\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\r\n\r\n\t\t\tif ( cachedMaterial === undefined ) {\r\n\r\n\t\t\t\tcachedMaterial = result.clone();\r\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tresult = cachedMaterial;\r\n\r\n\t\t}\r\n\r\n\t\tresult.visible = material.visible;\r\n\t\tresult.wireframe = material.wireframe;\r\n\r\n\t\tvar side = material.side;\r\n\r\n\t\tif ( scope.renderSingleSided && side == THREE.DoubleSide ) {\r\n\r\n\t\t\tside = THREE.FrontSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( scope.renderReverseSided ) {\r\n\r\n\t\t\tif ( side === THREE.FrontSide ) side = THREE.BackSide;\r\n\t\t\telse if ( side === THREE.BackSide ) side = THREE.FrontSide;\r\n\r\n\t\t}\r\n\r\n\t\tresult.side = side;\r\n\r\n\t\tresult.clipShadows = material.clipShadows;\r\n\t\tresult.clippingPlanes = material.clippingPlanes;\r\n\r\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\r\n\t\tresult.linewidth = material.linewidth;\r\n\r\n\t\tif ( isPointLight && result.uniforms.lightPos !== undefined ) {\r\n\r\n\t\t\tresult.uniforms.lightPos.value.copy( lightPositionWorld );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t}\r\n\r\n\tfunction projectObject( object, camera, shadowCamera ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object.layers.test( camera.layers ) && ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.Points ) ) {\r\n\r\n\t\t\tif ( object.castShadow && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\tvar material = object.material;\r\n\r\n\t\t\t\tif ( material.visible === true ) {\r\n\r\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar children = object.children;\r\n\r\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( children[ i ], camera, shadowCamera );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, extensions, paramThreeToGL ) {\r\n\r\n\tvar _this = this;\r\n\r\n\tthis.buffers = {\r\n\t\tcolor: new THREE.WebGLColorBuffer( gl, this ),\r\n\t\tdepth: new THREE.WebGLDepthBuffer( gl, this ),\r\n\t\tstencil: new THREE.WebGLStencilBuffer( gl, this )\r\n\t};\r\n\r\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\r\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\r\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\r\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\r\n\r\n\tvar capabilities = {};\r\n\r\n\tvar compressedTextureFormats = null;\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\tvar currentPremultipledAlpha = false;\r\n\r\n\tvar currentFlipSided = null;\r\n\tvar currentCullFace = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tvar currentScissorTest = null;\r\n\r\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\r\n\tvar currentTextureSlot = null;\r\n\tvar currentBoundTextures = {};\r\n\r\n\tvar currentScissor = new THREE.Vector4();\r\n\tvar currentViewport = new THREE.Vector4();\r\n\r\n\tfunction createTexture( type, target, count ) {\r\n\r\n\t\tvar data = new Uint8Array( 3 );\r\n\t\tvar texture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( type, texture );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\r\n\t\tfor ( var i = 0; i < count; i ++ ) {\r\n\r\n\t\t\tgl.texImage2D( target + i, 0, gl.RGB, 1, 1, 0, gl.RGB, gl.UNSIGNED_BYTE, data );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n\tvar emptyTextures = {};\r\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\r\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\r\n\r\n\t//\r\n\r\n\tthis.init = function () {\r\n\r\n\t\tthis.clearColor( 0, 0, 0, 1 );\r\n\t\tthis.clearDepth( 1 );\r\n\t\tthis.clearStencil( 0 );\r\n\r\n\t\tthis.enable( gl.DEPTH_TEST );\r\n\t\tthis.setDepthFunc( THREE.LessEqualDepth );\r\n\r\n\t\tthis.setFlipSided( false );\r\n\t\tthis.setCullFace( THREE.CullFaceBack );\r\n\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\tthis.enable( gl.BLEND );\r\n\t\tthis.setBlending( THREE.NormalBlending );\r\n\r\n\t};\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\r\n\r\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\r\n\t\t\tattributeDivisors[ attribute ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttributeAndDivisor = function ( attribute, meshPerAttribute, extension ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\r\n\r\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\r\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== true ) {\r\n\r\n\t\t\tgl.enable( id );\r\n\t\t\tcapabilities[ id ] = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disable = function ( id ) {\r\n\r\n\t\tif ( capabilities[ id ] !== false ) {\r\n\r\n\t\t\tgl.disable( id );\r\n\t\t\tcapabilities[ id ] = false;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getCompressedTextureFormats = function () {\r\n\r\n\t\tif ( compressedTextureFormats === null ) {\r\n\r\n\t\t\tcompressedTextureFormats = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\r\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\r\n\r\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn compressedTextureFormats;\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\r\n\r\n\t\tif ( blending !== THREE.NoBlending ) {\r\n\r\n\t\t\tthis.enable( gl.BLEND );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.BLEND );\r\n\t\t\tcurrentBlending = blending; // no blending, that is\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\r\n\r\n\t\t\tif ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( premultipliedAlpha ) {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// TODO Deprecate\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tthis.buffers.color.setMask( colorWrite );\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tthis.buffers.depth.setTest( depthTest );\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tthis.buffers.depth.setMask( depthWrite );\r\n\r\n\t};\r\n\r\n\tthis.setDepthFunc = function ( depthFunc ) {\r\n\r\n\t\tthis.buffers.depth.setFunc( depthFunc );\r\n\r\n\t};\r\n\r\n\tthis.setStencilTest = function ( stencilTest ) {\r\n\r\n\t\tthis.buffers.stencil.setTest( stencilTest );\r\n\r\n\t};\r\n\r\n\tthis.setStencilWrite = function ( stencilWrite ) {\r\n\r\n\t\tthis.buffers.stencil.setMask( stencilWrite );\r\n\r\n\t};\r\n\r\n\tthis.setStencilFunc = function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\tthis.buffers.stencil.setFunc( stencilFunc, stencilRef, stencilMask );\r\n\r\n\t};\r\n\r\n\tthis.setStencilOp = function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\tthis.buffers.stencil.setOp( stencilFail, stencilZFail, stencilZPass );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setCullFace = function ( cullFace ) {\r\n\r\n\t\tif ( cullFace !== THREE.CullFaceNone ) {\r\n\r\n\t\t\tthis.enable( gl.CULL_FACE );\r\n\r\n\t\t\tif ( cullFace !== currentCullFace ) {\r\n\r\n\t\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.BACK );\r\n\r\n\t\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t\tcurrentCullFace = cullFace;\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonOffset, factor, units ) {\r\n\r\n\t\tif ( polygonOffset ) {\r\n\r\n\t\t\tthis.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\r\n\r\n\t\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getScissorTest = function () {\r\n\r\n\t\treturn currentScissorTest;\r\n\r\n\t};\r\n\r\n\tthis.setScissorTest = function ( scissorTest ) {\r\n\r\n\t\tcurrentScissorTest = scissorTest;\r\n\r\n\t\tif ( scissorTest ) {\r\n\r\n\t\t\tthis.enable( gl.SCISSOR_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.disable( gl.SCISSOR_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// texture\r\n\r\n\tthis.activeTexture = function ( webglSlot ) {\r\n\r\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\r\n\r\n\t\tif ( currentTextureSlot !== webglSlot ) {\r\n\r\n\t\t\tgl.activeTexture( webglSlot );\r\n\t\t\tcurrentTextureSlot = webglSlot;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.bindTexture = function ( webglType, webglTexture ) {\r\n\r\n\t\tif ( currentTextureSlot === null ) {\r\n\r\n\t\t\t_this.activeTexture();\r\n\r\n\t\t}\r\n\r\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\r\n\r\n\t\tif ( boundTexture === undefined ) {\r\n\r\n\t\t\tboundTexture = { type: undefined, texture: undefined };\r\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\r\n\r\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\r\n\r\n\t\t\tboundTexture.type = webglType;\r\n\t\t\tboundTexture.texture = webglTexture;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.compressedTexImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.texImage2D = function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\tgl.texImage2D.apply( gl, arguments );\r\n\r\n\t\t} catch ( error ) {\r\n\r\n\t\t\tconsole.error( error );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// TODO Deprecate\r\n\r\n\tthis.clearColor = function ( r, g, b, a ) {\r\n\r\n\t\tthis.buffers.color.setClear( r, g, b, a );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function ( depth ) {\r\n\r\n\t\tthis.buffers.depth.setClear( depth );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function ( stencil ) {\r\n\r\n\t\tthis.buffers.stencil.setClear( stencil );\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.scissor = function ( scissor ) {\r\n\r\n\t\tif ( currentScissor.equals( scissor ) === false ) {\r\n\r\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\r\n\t\t\tcurrentScissor.copy( scissor );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.viewport = function ( viewport ) {\r\n\r\n\t\tif ( currentViewport.equals( viewport ) === false ) {\r\n\r\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\r\n\t\t\tcurrentViewport.copy( viewport );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcapabilities = {};\r\n\r\n\t\tcompressedTextureFormats = null;\r\n\r\n\t\tcurrentTextureSlot = null;\r\n\t\tcurrentBoundTextures = {};\r\n\r\n\t\tcurrentBlending = null;\r\n\r\n\t\tcurrentFlipSided = null;\r\n\t\tcurrentCullFace = null;\r\n\r\n\t\tthis.buffers.color.reset();\r\n\t\tthis.buffers.depth.reset();\r\n\t\tthis.buffers.stencil.reset();\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.WebGLColorBuffer = function ( gl, state ) {\r\n\r\n\tvar locked = false;\r\n\r\n\tvar color = new THREE.Vector4();\r\n\tvar currentColorMask = null;\r\n\tvar currentColorClear = new THREE.Vector4();\r\n\r\n\tthis.setMask = function ( colorMask ) {\r\n\r\n\t\tif ( currentColorMask !== colorMask && ! locked ) {\r\n\r\n\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\r\n\t\t\tcurrentColorMask = colorMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLocked = function ( lock ) {\r\n\r\n\t\tlocked = lock;\r\n\r\n\t};\r\n\r\n\tthis.setClear = function ( r, g, b, a ) {\r\n\r\n\t\tcolor.set( r, g, b, a );\r\n\r\n\t\tif ( currentColorClear.equals( color ) === false ) {\r\n\r\n\t\t\tgl.clearColor( r, g, b, a );\r\n\t\t\tcurrentColorClear.copy( color );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tlocked = false;\r\n\r\n\t\tcurrentColorMask = null;\r\n\t\tcurrentColorClear = new THREE.Vector4();\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.WebGLDepthBuffer = function( gl, state ) {\r\n\r\n\tvar locked = false;\r\n\r\n\tvar currentDepthMask = null;\r\n\tvar currentDepthFunc = null;\r\n\tvar currentDepthClear = null;\r\n\r\n\tthis.setTest = function ( depthTest ) {\r\n\r\n\t\tif ( depthTest ) {\r\n\r\n\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMask = function( depthMask ){\r\n\r\n\t\tif ( currentDepthMask !== depthMask && ! locked ) {\r\n\r\n\t\t\tgl.depthMask( depthMask );\r\n\t\t\tcurrentDepthMask = depthMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFunc = function ( depthFunc ) {\r\n\r\n\t\tif ( currentDepthFunc !== depthFunc ) {\r\n\r\n\t\t\tif ( depthFunc ) {\r\n\r\n\t\t\t\tswitch ( depthFunc ) {\r\n\r\n\t\t\t\t\tcase THREE.NeverDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.AlwaysDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LESS );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.LessEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.EqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.GreaterDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase THREE.NotEqualDepth:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tdefault:\r\n\r\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.depthFunc( gl.LEQUAL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthFunc = depthFunc;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLocked = function ( lock ) {\r\n\r\n\t\tlocked = lock;\r\n\r\n\t};\r\n\r\n\tthis.setClear = function ( depth ) {\r\n\r\n\t\tif ( currentDepthClear !== depth ) {\r\n\r\n\t\t\tgl.clearDepth( depth );\r\n\t\t\tcurrentDepthClear = depth;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tlocked = false;\r\n\r\n\t\tcurrentDepthMask = null;\r\n\t\tcurrentDepthFunc = null;\r\n\t\tcurrentDepthClear = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.WebGLStencilBuffer = function ( gl, state ) {\r\n\r\n\tvar locked = false;\r\n\r\n\tvar currentStencilMask = null;\r\n\tvar currentStencilFunc = null;\r\n\tvar currentStencilRef = null;\r\n\tvar currentStencilFuncMask = null;\r\n\tvar currentStencilFail  = null;\r\n\tvar currentStencilZFail = null;\r\n\tvar currentStencilZPass = null;\r\n\tvar currentStencilClear = null;\r\n\r\n\tthis.setTest = function ( stencilTest ) {\r\n\r\n\t\tif ( stencilTest ) {\r\n\r\n\t\t\tstate.enable( gl.STENCIL_TEST );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.disable( gl.STENCIL_TEST );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMask = function ( stencilMask ) {\r\n\r\n\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\r\n\r\n\t\t\tgl.stencilMask( stencilMask );\r\n\t\t\tcurrentStencilMask = stencilMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFunc = function ( stencilFunc, stencilRef, stencilMask ) {\r\n\r\n\t\tif ( currentStencilFunc !== stencilFunc ||\r\n\t\t     currentStencilRef \t!== stencilRef \t||\r\n\t\t     currentStencilFuncMask !== stencilMask ) {\r\n\r\n\t\t\tgl.stencilFunc( stencilFunc,  stencilRef, stencilMask );\r\n\r\n\t\t\tcurrentStencilFunc = stencilFunc;\r\n\t\t\tcurrentStencilRef  = stencilRef;\r\n\t\t\tcurrentStencilFuncMask = stencilMask;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setOp\t = function ( stencilFail, stencilZFail, stencilZPass ) {\r\n\r\n\t\tif ( currentStencilFail\t !== stencilFail \t||\r\n\t\t     currentStencilZFail !== stencilZFail ||\r\n\t\t     currentStencilZPass !== stencilZPass ) {\r\n\r\n\t\t\tgl.stencilOp( stencilFail,  stencilZFail, stencilZPass );\r\n\r\n\t\t\tcurrentStencilFail  = stencilFail;\r\n\t\t\tcurrentStencilZFail = stencilZFail;\r\n\t\t\tcurrentStencilZPass = stencilZPass;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLocked = function ( lock ) {\r\n\r\n\t\tlocked = lock;\r\n\r\n\t};\r\n\r\n\tthis.setClear = function ( stencil ) {\r\n\r\n\t\tif ( currentStencilClear !== stencil ) {\r\n\r\n\t\t\tgl.clearStencil( stencil );\r\n\t\t\tcurrentStencilClear = stencil;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tlocked = false;\r\n\r\n\t\tcurrentStencilMask = null;\r\n\t\tcurrentStencilFunc = null;\r\n\t\tcurrentStencilRef = null;\r\n\t\tcurrentStencilFuncMask = null;\r\n\t\tcurrentStencilFail = null;\r\n\t\tcurrentStencilZFail = null;\r\n\t\tcurrentStencilZPass = null;\r\n\t\tcurrentStencilClear = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLUniforms.js\r\n\r\n/**\r\n *\r\n * Uniforms of a program.\r\n * Those form a tree structure with a special top-level container for the root,\r\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\r\n *\r\n *\r\n * Properties of inner nodes including the top-level container:\r\n *\r\n * .seq - array of nested uniforms\r\n * .map - nested uniforms by name\r\n *\r\n *\r\n * Methods of all nodes except the top-level container:\r\n *\r\n * .setValue( gl, value, [renderer] )\r\n *\r\n * \t\tuploads a uniform value(s)\r\n *  \tthe 'renderer' parameter is needed for sampler uniforms\r\n *\r\n *\r\n * Static methods of the top-level container (renderer factorizations):\r\n *\r\n * .upload( gl, seq, values, renderer )\r\n *\r\n * \t\tsets uniforms in 'seq' to 'values[id].value'\r\n *\r\n * .seqWithValue( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with corresponding entry in values\r\n *\r\n * .splitDynamic( seq, values ) : filteredSeq\r\n *\r\n * \t\tfilters 'seq' entries with dynamic entry and removes them from 'seq'\r\n *\r\n *\r\n * Methods of the top-level container (renderer factorizations):\r\n *\r\n * .setValue( gl, name, value )\r\n *\r\n * \t\tsets uniform with  name 'name' to 'value'\r\n *\r\n * .set( gl, obj, prop )\r\n *\r\n * \t\tsets uniform from object and property with same name than uniform\r\n *\r\n * .setOptional( gl, obj, prop )\r\n *\r\n * \t\tlike .set for an optional property of the object\r\n *\r\n *\r\n * @author tschw\r\n *\r\n */\r\n\r\nTHREE.WebGLUniforms = ( function() { // scope\r\n\r\n\t// --- Base for inner nodes (including the root) ---\r\n\r\n\tvar UniformContainer = function() {\r\n\r\n\t\t\tthis.seq = [];\r\n\t\t\tthis.map = {};\r\n\r\n\t\t},\r\n\r\n\t// --- Utilities ---\r\n\r\n\t// Array Caches (provide typed arrays for temporary by size)\r\n\r\n\t\tarrayCacheF32 = [],\r\n\t\tarrayCacheI32 = [],\r\n\r\n\t\tuncacheTemporaryArrays = function() {\r\n\r\n\t\t\tarrayCacheF32.length = 0;\r\n\t\t\tarrayCacheI32.length = 0;\r\n\r\n\t\t},\r\n\r\n\t// Flattening for arrays of vectors and matrices\r\n\r\n\t\tflatten = function( array, nBlocks, blockSize ) {\r\n\r\n\t\t\tvar firstElem = array[ 0 ];\r\n\r\n\t\t\tif ( firstElem <= 0 || firstElem > 0 ) return array;\r\n\t\t\t// unoptimized: ! isNaN( firstElem )\r\n\t\t\t// see http://jacksondunstan.com/articles/983\r\n\r\n\t\t\tvar n = nBlocks * blockSize,\r\n\t\t\t\tr = arrayCacheF32[ n ];\r\n\r\n\t\t\tif ( r === undefined ) {\r\n\r\n\t\t\t\tr = new Float32Array( n );\r\n\t\t\t\tarrayCacheF32[ n ] = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( nBlocks !== 0 ) {\r\n\r\n\t\t\t\tfirstElem.toArray( r, 0 );\r\n\r\n\t\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\r\n\r\n\t\t\t\t\toffset += blockSize;\r\n\t\t\t\t\tarray[ i ].toArray( r, offset );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn r;\r\n\r\n\t\t},\r\n\r\n\t// Texture unit allocation\r\n\r\n\t\tallocTexUnits = function( renderer, n ) {\r\n\r\n\t\t\tvar r = arrayCacheI32[ n ];\r\n\r\n\t\t\tif ( r === undefined ) {\r\n\r\n\t\t\t\tr = new Int32Array( n );\r\n\t\t\t\tarrayCacheI32[ n ] = r;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i )\r\n\t\t\t\tr[ i ] = renderer.allocTextureUnit();\r\n\r\n\t\t\treturn r;\r\n\r\n\t\t},\r\n\r\n\t// --- Setters ---\r\n\r\n\t// Note: Defining these methods externally, because they come in a bunch\r\n\t// and this way their names minify.\r\n\r\n\t\t// Single scalar\r\n\r\n\t\tsetValue1f = function( gl, v ) { gl.uniform1f( this.addr, v ); },\r\n\t\tsetValue1i = function( gl, v ) { gl.uniform1i( this.addr, v ); },\r\n\r\n\t\t// Single float vector (from flat array or THREE.VectorN)\r\n\r\n\t\tsetValue2fv = function( gl, v ) {\r\n\r\n\t\t\tif ( v.x === undefined ) gl.uniform2fv( this.addr, v );\r\n\t\t\telse gl.uniform2f( this.addr, v.x, v.y );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue3fv = function( gl, v ) {\r\n\r\n\t\t\tif ( v.x !== undefined )\r\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\r\n\t\t\telse if ( v.r !== undefined )\r\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\r\n\t\t\telse\r\n\t\t\t\tgl.uniform3fv( this.addr, v );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue4fv = function( gl, v ) {\r\n\r\n\t\t\tif ( v.x === undefined ) gl.uniform4fv( this.addr, v );\r\n\t\t\telse gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\r\n\r\n\t\t},\r\n\r\n\t\t// Single matrix (from flat array or MatrixN)\r\n\r\n\t\tsetValue2fm = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue3fm = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v.elements || v );\r\n\r\n\t\t},\r\n\r\n\t\tsetValue4fm = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v.elements || v );\r\n\r\n\t\t},\r\n\r\n\t\t// Single texture (2D / Cube)\r\n\r\n\t\tsetValueT1 = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar unit = renderer.allocTextureUnit();\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tif ( v ) renderer.setTexture2D( v, unit );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueT6 = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar unit = renderer.allocTextureUnit();\r\n\t\t\tgl.uniform1i( this.addr, unit );\r\n\t\t\tif ( v ) renderer.setTextureCube( v, unit );\r\n\r\n\t\t},\r\n\r\n\t\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\r\n\r\n\t\tsetValue2iv = function( gl, v ) { gl.uniform2iv( this.addr, v ); },\r\n\t\tsetValue3iv = function( gl, v ) { gl.uniform3iv( this.addr, v ); },\r\n\t\tsetValue4iv = function( gl, v ) { gl.uniform4iv( this.addr, v ); },\r\n\r\n\t\t// Helper to pick the right setter for the singular case\r\n\r\n\t\tgetSingularSetter = function( type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 0x1406: return setValue1f; // FLOAT\r\n\t\t\t\tcase 0x8b50: return setValue2fv; // _VEC2\r\n\t\t\t\tcase 0x8b51: return setValue3fv; // _VEC3\r\n\t\t\t\tcase 0x8b52: return setValue4fv; // _VEC4\r\n\r\n\t\t\t\tcase 0x8b5a: return setValue2fm; // _MAT2\r\n\t\t\t\tcase 0x8b5b: return setValue3fm; // _MAT3\r\n\t\t\t\tcase 0x8b5c: return setValue4fm; // _MAT4\r\n\r\n\t\t\t\tcase 0x8b5e: return setValueT1; // SAMPLER_2D\r\n\t\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\r\n\r\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\r\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\t// Array of scalars\r\n\r\n\t\tsetValue1fv = function( gl, v ) { gl.uniform1fv( this.addr, v ); },\r\n\t\tsetValue1iv = function( gl, v ) { gl.uniform1iv( this.addr, v ); },\r\n\r\n\t\t// Array of vectors (flat or from THREE classes)\r\n\r\n\t\tsetValueV2a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueV3a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueV4a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Array of matrices (flat or from THREE clases)\r\n\r\n\t\tsetValueM2a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueM3a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\r\n\r\n\t\t},\r\n\r\n\t\tsetValueM4a = function( gl, v ) {\r\n\r\n\t\t\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\r\n\r\n\t\t},\r\n\r\n\t\t// Array of textures (2D / Cube)\r\n\r\n\t\tsetValueT1a = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar n = v.length,\r\n\t\t\t\tunits = allocTexUnits( renderer, n );\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar tex = v[ i ];\r\n\t\t\t\tif ( tex ) renderer.setTexture2D( tex, units[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tsetValueT6a = function( gl, v, renderer ) {\r\n\r\n\t\t\tvar n = v.length,\r\n\t\t\t\tunits = allocTexUnits( renderer, n );\r\n\r\n\t\t\tgl.uniform1iv( this.addr, units );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar tex = v[ i ];\r\n\t\t\t\tif ( tex ) renderer.setTextureCube( tex, units[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\r\n\t\t// Helper to pick the right setter for a pure (bottom-level) array\r\n\r\n\t\tgetPureArraySetter = function( type ) {\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase 0x1406: return setValue1fv; // FLOAT\r\n\t\t\t\tcase 0x8b50: return setValueV2a; // _VEC2\r\n\t\t\t\tcase 0x8b51: return setValueV3a; // _VEC3\r\n\t\t\t\tcase 0x8b52: return setValueV4a; // _VEC4\r\n\r\n\t\t\t\tcase 0x8b5a: return setValueM2a; // _MAT2\r\n\t\t\t\tcase 0x8b5b: return setValueM3a; // _MAT3\r\n\t\t\t\tcase 0x8b5c: return setValueM4a; // _MAT4\r\n\r\n\t\t\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\r\n\t\t\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\r\n\r\n\t\t\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\r\n\t\t\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\r\n\t\t\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\r\n\t\t\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t// --- Uniform Classes ---\r\n\r\n\t\tSingleUniform = function SingleUniform( id, activeInfo, addr ) {\r\n\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.addr = addr;\r\n\t\t\tthis.setValue = getSingularSetter( activeInfo.type );\r\n\r\n\t\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t\t},\r\n\r\n\t\tPureArrayUniform = function( id, activeInfo, addr ) {\r\n\r\n\t\t\tthis.id = id;\r\n\t\t\tthis.addr = addr;\r\n\t\t\tthis.size = activeInfo.size;\r\n\t\t\tthis.setValue = getPureArraySetter( activeInfo.type );\r\n\r\n\t\t\t// this.path = activeInfo.name; // DEBUG\r\n\r\n\t\t},\r\n\r\n\t\tStructuredUniform = function( id ) {\r\n\r\n\t\t\tthis.id = id;\r\n\r\n\t\t\tUniformContainer.call( this ); // mix-in\r\n\r\n\t\t};\r\n\r\n\tStructuredUniform.prototype.setValue = function( gl, value ) {\r\n\r\n\t\t// Note: Don't need an extra 'renderer' parameter, since samplers\r\n\t\t// are not allowed in structured uniforms.\r\n\r\n\t\tvar seq = this.seq;\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tu.setValue( gl, value[ u.id ] );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// --- Top-level ---\r\n\r\n\t// Parser - builds up the property tree from the path strings\r\n\r\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g,\r\n\t\t// extracts\r\n\t\t// \t- the identifier (member name or array index)\r\n\t\t//  - followed by an optional right bracket (found when array index)\r\n\t\t//  - followed by an optional left bracket or dot (type of subscript)\r\n\t\t//\r\n\t\t// Note: These portions can be read in a non-overlapping fashion and\r\n\t\t// allow straightforward parsing of the hierarchy that WebGL encodes\r\n\t\t// in the uniform names.\r\n\r\n\t\taddUniform = function( container, uniformObject ) {\r\n\r\n\t\t\tcontainer.seq.push( uniformObject );\r\n\t\t\tcontainer.map[ uniformObject.id ] = uniformObject;\r\n\r\n\t\t},\r\n\r\n\t\tparseUniform = function( activeInfo, addr, container ) {\r\n\r\n\t\t\tvar path = activeInfo.name,\r\n\t\t\t\tpathLength = path.length;\r\n\r\n\t\t\t// reset RegExp object, because of the early exit of a previous run\r\n\t\t\tRePathPart.lastIndex = 0;\r\n\r\n\t\t\tfor (; ;) {\r\n\r\n\t\t\t\tvar match = RePathPart.exec( path ),\r\n\t\t\t\t\tmatchEnd = RePathPart.lastIndex,\r\n\r\n\t\t\t\t\tid = match[ 1 ],\r\n\t\t\t\t\tidIsIndex = match[ 2 ] === ']',\r\n\t\t\t\t\tsubscript = match[ 3 ];\r\n\r\n\t\t\t\tif ( idIsIndex ) id = id | 0; // convert to integer\r\n\r\n\t\t\t\tif ( subscript === undefined ||\r\n\t\t\t\t\t\tsubscript === '[' && matchEnd + 2 === pathLength ) {\r\n\t\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\r\n\r\n\t\t\t\t\taddUniform( container, subscript === undefined ?\r\n\t\t\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\r\n\t\t\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// step into inner node / create it in case it doesn't exist\r\n\r\n\t\t\t\t\tvar map = container.map,\r\n\t\t\t\t\t\tnext = map[ id ];\r\n\r\n\t\t\t\t\tif ( next === undefined ) {\r\n\r\n\t\t\t\t\t\tnext = new StructuredUniform( id );\r\n\t\t\t\t\t\taddUniform( container, next );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcontainer = next;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t// Root Container\r\n\r\n\t\tWebGLUniforms = function WebGLUniforms( gl, program, renderer ) {\r\n\r\n\t\t\tUniformContainer.call( this );\r\n\r\n\t\t\tthis.renderer = renderer;\r\n\r\n\t\t\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\r\n\r\n\t\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\t\tvar info = gl.getActiveUniform( program, i ),\r\n\t\t\t\t\tpath = info.name,\r\n\t\t\t\t\taddr = gl.getUniformLocation( program, path );\r\n\r\n\t\t\t\tparseUniform( info, addr, this );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\tWebGLUniforms.prototype.setValue = function( gl, name, value ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.set = function( gl, object, name ) {\r\n\r\n\t\tvar u = this.map[ name ];\r\n\r\n\t\tif ( u !== undefined ) u.setValue( gl, object[ name ], this.renderer );\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.prototype.setOptional = function( gl, object, name ) {\r\n\r\n\t\tvar v = object[ name ];\r\n\r\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\r\n\r\n\t};\r\n\r\n\r\n\t// Static interface\r\n\r\n\tWebGLUniforms.upload = function( gl, seq, values, renderer ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v.needsUpdate !== false ) {\r\n\t\t\t\t// note: always updating when .needsUpdate is undefined\r\n\r\n\t\t\t\tu.setValue( gl, v.value, renderer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.seqWithValue = function( seq, values ) {\r\n\r\n\t\tvar r = [];\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ];\r\n\t\t\tif ( u.id in values ) r.push( u );\r\n\r\n\t\t}\r\n\r\n\t\treturn r;\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.splitDynamic = function( seq, values ) {\r\n\r\n\t\tvar r = null,\r\n\t\t\tn = seq.length,\r\n\t\t\tw = 0;\r\n\r\n\t\tfor ( var i = 0; i !== n; ++ i ) {\r\n\r\n\t\t\tvar u = seq[ i ],\r\n\t\t\t\tv = values[ u.id ];\r\n\r\n\t\t\tif ( v && v.dynamic === true ) {\r\n\r\n\t\t\t\tif ( r === null ) r = [];\r\n\t\t\t\tr.push( u );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// in-place compact 'seq', removing the matches\r\n\t\t\t\tif ( w < i ) seq[ w ] = u;\r\n\t\t\t\t++ w;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( w < n ) seq.length = w;\r\n\r\n\t\treturn r;\r\n\r\n\t};\r\n\r\n\tWebGLUniforms.evalDynamic = function( seq, values, object, camera ) {\r\n\r\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\r\n\r\n\t\t\tvar v = values[ seq[ i ].id ],\r\n\t\t\t\tf = v.onUpdateCallback;\r\n\r\n\t\t\tif ( f !== undefined ) f.call( v, object, camera );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn WebGLUniforms;\r\n\r\n} )();\r\n\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar shader, program, attributes, uniforms;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 1, - 1,  0, 0,\r\n\t\t\t 1, - 1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t- 1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tshader = {\r\n\r\n\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\"if ( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\"}\"\r\n\r\n\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\"if ( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\"} else if ( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\"}\"\r\n\r\n\t\t\t].join( \"\\n\" )\r\n\r\n\t\t};\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewport ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewport.w / viewport.z,\r\n\t\t\thalfViewportWidth = viewport.z * 0.5,\r\n\t\t\thalfViewportHeight = viewport.w * 0.5;\r\n\r\n\t\tvar size = 16 / viewport.w,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tvar validArea = new THREE.Box2();\r\n\r\n\t\tvalidArea.min.set( 0, 0 );\r\n\t\tvalidArea.max.set( viewport.z - 16, viewport.w - 16 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.vertex );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/uniforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.setDepthWrite( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewport.w;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition );\r\n\r\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\r\n\r\n\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\r\n\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tstate.disable( gl.BLEND );\r\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition );\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tstate.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture2D( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.DEPTH_TEST );\r\n\t\tstate.setDepthWrite( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\tvar state = renderer.state;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tfunction init() {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t}\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tstate.initAttributes();\r\n\t\tstate.enableAttribute( attributes.position );\r\n\t\tstate.enableAttribute( attributes.uv );\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\tstate.disable( gl.CULL_FACE );\r\n\t\tstate.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tstate.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\tstate.setDepthTest( material.depthTest );\r\n\t\t\tstate.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map ) {\r\n\r\n\t\t\t\trenderer.setTexture2D( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture2D( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tstate.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\t\t\r\n\t\tif ( a.renderOrder !== b.renderOrder ) {\r\n\r\n\t\t\treturn a.renderOrder - b.renderOrder;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/Three.Legacy.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nObject.assign( THREE, {\r\n\tFace4: function ( a, b, c, d, normal, color, materialIndex ) {\r\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\r\n\t\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\t},\r\n\tLineStrip: 0,\r\n\tLinePieces: 1,\r\n\tMeshFaceMaterial: THREE.MultiMaterial,\r\n\tPointCloud: function ( geometry, material ) {\r\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t},\r\n\tParticle: THREE.Sprite,\r\n\tParticleSystem: function ( geometry, material ) {\r\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\r\n\t\treturn new THREE.Points( geometry, material );\r\n\t},\r\n\tPointCloudMaterial: function ( parameters ) {\r\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t},\r\n\tParticleBasicMaterial: function ( parameters ) {\r\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t},\r\n\tParticleSystemMaterial: function ( parameters ) {\r\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\r\n\t\treturn new THREE.PointsMaterial( parameters );\r\n\t},\r\n\tVertex: function ( x, y, z ) {\r\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\r\n\t\treturn new THREE.Vector3( x, y, z );\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.assign( THREE.Box2.prototype, {\r\n\tempty: function () {\r\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\r\n\t\treturn this.isEmpty();\r\n\t},\r\n\tisIntersectionBox: function ( box ) {\r\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\treturn this.intersectsBox( box );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Box3.prototype, {\r\n\tempty: function () {\r\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\r\n\t\treturn this.isEmpty();\r\n\t},\r\n\tisIntersectionBox: function ( box ) {\r\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\treturn this.intersectsBox( box );\r\n\t},\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\treturn this.intersectsSphere( sphere );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Matrix3.prototype, {\r\n\tmultiplyVector3: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\t},\r\n\tmultiplyVector3Array: function ( a ) {\r\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Matrix4.prototype, {\r\n\textractPosition: function ( m ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\t},\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\t},\r\n\tmultiplyVector3: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\t},\r\n\tmultiplyVector4: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\t},\r\n\tmultiplyVector3Array: function ( a ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\t},\r\n\trotateAxis: function ( v ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\t\tv.transformDirection( this );\r\n\t},\r\n\tcrossVector: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\t},\r\n\ttranslate: function ( v ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\t},\r\n\trotateX: function ( angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\t},\r\n\trotateY: function ( angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\t},\r\n\trotateZ: function ( angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\t},\r\n\trotateByAxis: function ( axis, angle ) {\r\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Plane.prototype, {\r\n\tisIntersectionLine: function ( line ) {\r\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\r\n\t\treturn this.intersectsLine( line );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Quaternion.prototype, {\r\n\tmultiplyVector3: function ( vector ) {\r\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Ray.prototype, {\r\n\tisIntersectionBox: function ( box ) {\r\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\r\n\t\treturn this.intersectsBox( box );\r\n\t},\r\n\tisIntersectionPlane: function ( plane ) {\r\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\r\n\t\treturn this.intersectsPlane( plane );\r\n\t},\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\r\n\t\treturn this.intersectsSphere( sphere );\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.Vector3.prototype, {\r\n\tsetEulerFromRotationMatrix: function () {\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\t},\r\n\tsetEulerFromQuaternion: function () {\r\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\t},\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\t},\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\t\treturn this.setFromMatrixScale( m );\r\n\t},\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\t\treturn this.setFromMatrixColumn( matrix, index );\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.assign( THREE.Object3D.prototype, {\r\n\tgetChildByName: function ( name ) {\r\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\t},\r\n\trenderDepth: function ( value ) {\r\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\r\n\t},\r\n\ttranslate: function ( distance, axis ) {\r\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.Object3D.prototype, {\r\n\teulerOrder: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\treturn this.rotation.order;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\r\n\t\t\tthis.rotation.order = value;\r\n\t\t}\r\n\t},\r\n\tuseQuaternion: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.LOD.prototype, {\r\n\tobjects: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\r\n\t\t\treturn this.levels;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\r\n\r\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\r\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\r\n\r\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\r\n\tthis.setFocalLength( focalLength );\r\n\r\n};\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Light.prototype, {\r\n\tonlyShadow: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowCameraFov: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\r\n\t\t\tthis.shadow.camera.fov = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraLeft: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\r\n\t\t\tthis.shadow.camera.left = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraRight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\r\n\t\t\tthis.shadow.camera.right = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraTop: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\r\n\t\t\tthis.shadow.camera.top = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraBottom: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\r\n\t\t\tthis.shadow.camera.bottom = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraNear: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\r\n\t\t\tthis.shadow.camera.near = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraFar: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\r\n\t\t\tthis.shadow.camera.far = value;\r\n\t\t}\r\n\t},\r\n\tshadowCameraVisible: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\r\n\t\t}\r\n\t},\r\n\tshadowBias: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\r\n\t\t\tthis.shadow.bias = value;\r\n\t\t}\r\n\t},\r\n\tshadowDarkness: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\r\n\t\t}\r\n\t},\r\n\tshadowMapWidth: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\r\n\t\t\tthis.shadow.mapSize.width = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapHeight: {\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\r\n\t\t\tthis.shadow.mapSize.height = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.BufferAttribute.prototype, {\r\n\tlength: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Please use .count.' );\r\n\t\t\treturn this.array.length;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.BufferGeometry.prototype, {\r\n\taddIndex: function ( index ) {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\r\n\t\tthis.setIndex( index );\r\n\t},\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\t\tif ( indexOffset !== undefined ) {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\r\n\t\t}\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\r\n\t\tthis.addGroup( start, count );\r\n\t},\r\n\tclearDrawCalls: function () {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\r\n\t\tthis.clearGroups();\r\n\t},\r\n\tcomputeTangents: function () {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\r\n\t},\r\n\tcomputeOffsets: function () {\r\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.BufferGeometry.prototype, {\r\n\tdrawcalls: {\r\n\t\tget: function () {\r\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\t}\r\n\t},\r\n\toffsets: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\r\n\t\t\treturn this.groups;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.Material.prototype, {\r\n\twrapAround: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapAround has been removed.' );\r\n\t\t}\r\n\t},\r\n\twrapRGB: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .wrapRGB has been removed.' );\r\n\t\t\treturn new THREE.Color();\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.MeshPhongMaterial.prototype, {\r\n\tmetal: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\r\n\t\t\treturn false;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.ShaderMaterial.prototype, {\r\n\tderivatives: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\treturn this.extensions.derivatives;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\r\n\t\t\tthis.extensions.derivatives = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.EventDispatcher.prototype = Object.assign( Object.create( {\r\n\r\n\t// Note: Extra base ensures these properties are not 'assign'ed.\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( target ) {\r\n\r\n\t\tconsole.warn( \"THREE.EventDispatcher: .apply is deprecated, \" +\r\n\t\t\t\t\"just inherit or Object.assign the prototype to mix-in.\" );\r\n\r\n\t\tObject.assign( target, this );\r\n\r\n\t}\r\n\r\n} ), THREE.EventDispatcher.prototype );\r\n\r\n//\r\n\r\nObject.assign( THREE.WebGLRenderer.prototype, {\r\n\tsupportsFloatTextures: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\r\n\t\treturn this.extensions.get( 'OES_texture_float' );\r\n\t},\r\n\tsupportsHalfFloatTextures: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\r\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\r\n\t},\r\n\tsupportsStandardDerivatives: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\r\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\r\n\t},\r\n\tsupportsCompressedTextureS3TC: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\r\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\t},\r\n\tsupportsCompressedTexturePVRTC: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\r\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\t},\r\n\tsupportsBlendMinMax: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\r\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\r\n\t},\r\n\tsupportsVertexTextures: function () {\r\n\t\treturn this.capabilities.vertexTextures;\r\n\t},\r\n\tsupportsInstancedArrays: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\r\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\r\n\t},\r\n\tenableScissorTest: function ( boolean ) {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\r\n\t\tthis.setScissorTest( boolean );\r\n\t},\r\n\tinitMaterial: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\t},\r\n\taddPrePlugin: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\t},\r\n\taddPostPlugin: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\t},\r\n\tupdateShadowMap: function () {\r\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.WebGLRenderer.prototype, {\r\n\tshadowMapEnabled: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.enabled;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\r\n\t\t\tthis.shadowMap.enabled = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapType: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.type;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\r\n\t\t\tthis.shadowMap.type = value;\r\n\t\t}\r\n\t},\r\n\tshadowMapCullFace: {\r\n\t\tget: function () {\r\n\t\t\treturn this.shadowMap.cullFace;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\r\n\t\t\tthis.shadowMap.cullFace = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\nObject.defineProperties( THREE.WebGLShadowMap.prototype, {\r\n\tcullFace: {\r\n\t\tget: function () {\r\n\t\t\treturn this.renderReverseSided ? THREE.CullFaceFront : THREE.CullFaceBack;\r\n\t\t},\r\n\t\tset: function ( cullFace ) {\r\n\t\t\tvar value = ( cullFace !== THREE.CullFaceBack );\r\n\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\r\n\t\t\tthis.renderReverseSided = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.defineProperties( THREE.WebGLRenderTarget.prototype, {\r\n\twrapS: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\treturn this.texture.wrapS;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\r\n\t\t\tthis.texture.wrapS = value;\r\n\t\t}\r\n\t},\r\n\twrapT: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\treturn this.texture.wrapT;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\r\n\t\t\tthis.texture.wrapT = value;\r\n\t\t}\r\n\t},\r\n\tmagFilter: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\treturn this.texture.magFilter;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\r\n\t\t\tthis.texture.magFilter = value;\r\n\t\t}\r\n\t},\r\n\tminFilter: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\treturn this.texture.minFilter;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\r\n\t\t\tthis.texture.minFilter = value;\r\n\t\t}\r\n\t},\r\n\tanisotropy: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\treturn this.texture.anisotropy;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\r\n\t\t\tthis.texture.anisotropy = value;\r\n\t\t}\r\n\t},\r\n\toffset: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\treturn this.texture.offset;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\r\n\t\t\tthis.texture.offset = value;\r\n\t\t}\r\n\t},\r\n\trepeat: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\treturn this.texture.repeat;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\r\n\t\t\tthis.texture.repeat = value;\r\n\t\t}\r\n\t},\r\n\tformat: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\treturn this.texture.format;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\r\n\t\t\tthis.texture.format = value;\r\n\t\t}\r\n\t},\r\n\ttype: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\treturn this.texture.type;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\r\n\t\t\tthis.texture.type = value;\r\n\t\t}\r\n\t},\r\n\tgenerateMipmaps: {\r\n\t\tget: function () {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\treturn this.texture.generateMipmaps;\r\n\t\t},\r\n\t\tset: function ( value ) {\r\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\r\n\t\t\tthis.texture.generateMipmaps = value;\r\n\t\t}\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nObject.assign( THREE.Audio.prototype, {\r\n\tload: function ( file ) {\r\n\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Please use THREE.AudioLoader.' );\r\n\t\tvar scope = this;\r\n\t\tvar audioLoader = new THREE.AudioLoader();\r\n\t\taudioLoader.load( file, function ( buffer ) {\r\n\t\t\tscope.setBuffer( buffer );\r\n\t\t} );\r\n\t\treturn this;\r\n\t}\r\n} );\r\n\r\nObject.assign( THREE.AudioAnalyser.prototype, {\r\n\tgetData: function ( file ) {\r\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\r\n\t\treturn this.getFrequencyData();\r\n\t}\r\n} );\r\n\r\n//\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.TextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( urls, mapping, onLoad, onError ) {\r\n\r\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\r\n\r\n\t\tvar loader = new THREE.CubeTextureLoader();\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\r\n\r\n\t\tif ( mapping ) texture.mapping = mapping;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tconsole.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tconsole.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tconsole.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tconsole.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/extras/CurveUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.CurveUtils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * ( 1 - t ) * ( 1 - t )  +\r\n\t\t\t3 * p1 * ( 1 - t ) * ( 1 - t ) - 6 * t * p1 * ( 1 - t ) +\r\n\t\t\t6 * t *  p2 * ( 1 - t ) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Group();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ShapeUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.ShapeUtils = {\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tarea: function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t},\r\n\r\n\ttriangulate: ( function () {\r\n\r\n\t\t/**\r\n\t\t * This code is a quick port of code written in C++ which was submitted to\r\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n\t\t * See original code and more information here:\r\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n\t\t *\r\n\t\t * ported to actionscript by Zevan Rosser\r\n\t\t * www.actionsnippet.com\r\n\t\t *\r\n\t\t * ported to javascript by Joshua Koo\r\n\t\t * http://www.lab4games.net/zz85/blog\r\n\t\t *\r\n\t\t */\r\n\r\n\t\tfunction snip( contour, u, v, w, n, verts ) {\r\n\r\n\t\t\tvar p;\r\n\t\t\tvar ax, ay, bx, by;\r\n\t\t\tvar cx, cy, px, py;\r\n\r\n\t\t\tax = contour[ verts[ u ] ].x;\r\n\t\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\t\tbx = contour[ verts[ v ] ].x;\r\n\t\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\t\tcx = contour[ verts[ w ] ].x;\r\n\t\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\t\tif ( Number.EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\t\taX = cx - bx;  aY = cy - by;\r\n\t\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\t\tpx = contour[ verts[ p ] ].x;\r\n\t\t\t\tpy = contour[ verts[ p ] ].y;\r\n\r\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// takes in an contour array and returns\r\n\r\n\t\treturn function ( contour, indices ) {\r\n\r\n\t\t\tvar n = contour.length;\r\n\r\n\t\t\tif ( n < 3 ) return null;\r\n\r\n\t\t\tvar result = [],\r\n\t\t\t\tverts = [],\r\n\t\t\t\tvertIndices = [];\r\n\r\n\t\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\t\tvar u, v, w;\r\n\r\n\t\t\tif ( THREE.ShapeUtils.area( contour ) > 0.0 ) {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar nv = n;\r\n\r\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t\t//return null;\r\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\r\n\r\n\t\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\t\treturn result;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\t\ta = verts[ u ];\r\n\t\t\t\t\tb = verts[ v ];\r\n\t\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tnv --;\r\n\r\n\t\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( indices ) return vertIndices;\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t} )(),\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\r\n\t\t\t// inOtherPt needs to be collinear to the inSegment\r\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\r\n\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 === 0 ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 === limit ) {\r\n\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// parallel or collinear\r\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\r\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\r\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t\t// they are the same point\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\r\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif ( seg1dx !== 0 ) {\r\n\r\n\t\t\t\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\r\n\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\r\n\r\n\t\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\r\n\t\t\t\tif ( ! insideAngle ) {\r\n\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\r\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\r\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[ holeIdx ];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tconsole.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.ShapeUtils.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2: ( function () {\r\n\r\n\t\tfunction b2p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p1( t, p ) {\r\n\r\n\t\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b2p2( t, p ) {\r\n\r\n\t\t\treturn t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2 ) {\r\n\r\n\t\t\treturn b2p0( t, p0 ) + b2p1( t, p1 ) + b2p2( t, p2 );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3: ( function () {\r\n\r\n\t\tfunction b3p0( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn k * k * k * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p1( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * k * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p2( t, p ) {\r\n\r\n\t\t\tvar k = 1 - t;\r\n\t\t\treturn 3 * k * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\tfunction b3p3( t, p ) {\r\n\r\n\t\t\treturn t * t * t * p;\r\n\r\n\t\t}\r\n\r\n\t\treturn function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t\treturn b3p0( t, p0 ) + b3p1( t, p1 ) + b3p2( t, p2 ) + b3p3( t, p3 );\r\n\r\n\t\t};\r\n\r\n\t} )()\r\n\r\n};\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\nTHREE.Curve.prototype = {\r\n\r\n\tconstructor: THREE.Curve,\r\n\r\n\t// Virtual base class method to overwrite and implement in subclasses\r\n\t//\t- t [0 .. 1]\r\n\r\n\tgetPoint: function ( t ) {\r\n\r\n\t\tconsole.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\t\treturn null;\r\n\r\n\t},\r\n\r\n\t// Get point at relative position in curve according to arc length\r\n\t// - u [0 .. 1]\r\n\r\n\tgetPointAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getPoint( t );\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPoint( t )\r\n\r\n\tgetPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get sequence of points using getPointAt( u )\r\n\r\n\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 5;\r\n\r\n\t\tvar d, pts = [];\r\n\r\n\t\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn pts;\r\n\r\n\t},\r\n\r\n\t// Get total curve arc length\r\n\r\n\tgetLength: function () {\r\n\r\n\t\tvar lengths = this.getLengths();\r\n\t\treturn lengths[ lengths.length - 1 ];\r\n\r\n\t},\r\n\r\n\t// Get list of cumulative segment lengths\r\n\r\n\tgetLengths: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = ( this.__arcLengthDivisions ) ? ( this.__arcLengthDivisions ) : 200;\r\n\r\n\t\tif ( this.cacheArcLengths\r\n\t\t\t&& ( this.cacheArcLengths.length === divisions + 1 )\r\n\t\t\t&& ! this.needsUpdate ) {\r\n\r\n\t\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\t\treturn this.cacheArcLengths;\r\n\r\n\t\t}\r\n\r\n\t\tthis.needsUpdate = false;\r\n\r\n\t\tvar cache = [];\r\n\t\tvar current, last = this.getPoint( 0 );\r\n\t\tvar p, sum = 0;\r\n\r\n\t\tcache.push( 0 );\r\n\r\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\t\tsum += current.distanceTo( last );\r\n\t\t\tcache.push( sum );\r\n\t\t\tlast = current;\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheArcLengths = cache;\r\n\r\n\t\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n\t},\r\n\r\n\tupdateArcLengths: function() {\r\n\r\n\t\tthis.needsUpdate = true;\r\n\t\tthis.getLengths();\r\n\r\n\t},\r\n\r\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\r\n\r\n\tgetUtoTmapping: function ( u, distance ) {\r\n\r\n\t\tvar arcLengths = this.getLengths();\r\n\r\n\t\tvar i = 0, il = arcLengths.length;\r\n\r\n\t\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\t\tif ( distance ) {\r\n\r\n\t\t\ttargetArcLength = distance;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t\t}\r\n\r\n\t\t//var time = Date.now();\r\n\r\n\t\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\t\tvar low = 0, high = il - 1, comparison;\r\n\r\n\t\twhile ( low <= high ) {\r\n\r\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\t\tlow = i + 1;\r\n\r\n\t\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\t\thigh = i - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thigh = i;\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t\t// DONE\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\ti = high;\r\n\r\n\t\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\r\n\r\n\t\t\tvar t = i / ( il - 1 );\r\n\t\t\treturn t;\r\n\r\n\t\t}\r\n\r\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\r\n\r\n\t\tvar lengthBefore = arcLengths[ i ];\r\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\t\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n\t\t// determine where we are between the 'before' and 'after' points\r\n\r\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n\t\t// add that fractional amount to t\r\n\r\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\t\treturn t;\r\n\r\n\t},\r\n\r\n\t// Returns a unit vector tangent at t\r\n\t// In case any sub curve does not implement its tangent derivation,\r\n\t// 2 points a small delta apart will be used to find its gradient\r\n\t// which seems to give a reasonable approximation\r\n\r\n\tgetTangent: function( t ) {\r\n\r\n\t\tvar delta = 0.0001;\r\n\t\tvar t1 = t - delta;\r\n\t\tvar t2 = t + delta;\r\n\r\n\t\t// Capping in case of danger\r\n\r\n\t\tif ( t1 < 0 ) t1 = 0;\r\n\t\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\t\tvar pt1 = this.getPoint( t1 );\r\n\t\tvar pt2 = this.getPoint( t2 );\r\n\r\n\t\tvar vec = pt2.clone().sub( pt1 );\r\n\t\treturn vec.normalize();\r\n\r\n\t},\r\n\r\n\tgetTangentAt: function ( u ) {\r\n\r\n\t\tvar t = this.getUtoTmapping( u );\r\n\t\treturn this.getTangent( t );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\r\n\tthis.autoClose = false; // Automatically closes the path\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.assign( Object.create( THREE.Curve.prototype ), {\r\n\r\n\tconstructor: THREE.CurvePath,\r\n\r\n\tadd: function ( curve ) {\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t},\r\n\r\n\tclosePath: function () {\r\n\r\n\t\t// TODO Test\r\n\t\t// and verify for vector3 (needs to implement equals)\r\n\t\t// Add a line curve if start and end of lines are not connected\r\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\r\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\r\n\r\n\t\tif ( ! startPoint.equals( endPoint ) ) {\r\n\r\n\t\t\tthis.curves.push( new THREE.LineCurve( endPoint, startPoint ) );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t// To get accurate point with reference to\r\n\t// entire path distance at time t,\r\n\t// following has to be done:\r\n\r\n\t// 1. Length of each sub path have to be known\r\n\t// 2. Locate and identify type of curve\r\n\t// 3. Get t for the curve\r\n\t// 4. Return curve.getPointAt(t')\r\n\r\n\tgetPoint: function ( t ) {\r\n\r\n\t\tvar d = t * this.getLength();\r\n\t\tvar curveLengths = this.getCurveLengths();\r\n\t\tvar i = 0;\r\n\r\n\t\t// To think about boundaries points.\r\n\r\n\t\twhile ( i < curveLengths.length ) {\r\n\r\n\t\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\t\tvar diff = curveLengths[ i ] - d;\r\n\t\t\t\tvar curve = this.curves[ i ];\r\n\r\n\t\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ti ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n\t},\r\n\r\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n\t// getPoint() depends on getLength\r\n\r\n\tgetLength: function () {\r\n\r\n\t\tvar lens = this.getCurveLengths();\r\n\t\treturn lens[ lens.length - 1 ];\r\n\r\n\t},\r\n\r\n\t// Compute lengths and cache them\r\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\n\tgetCurveLengths: function () {\r\n\r\n\t\t// We use cache values if curves and cache array are same length\r\n\r\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\r\n\r\n\t\t\treturn this.cacheLengths;\r\n\r\n\t\t}\r\n\r\n\t\t// Get length of sub-curve\r\n\t\t// Push sums into cached array\r\n\r\n\t\tvar lengths = [], sums = 0;\r\n\r\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\r\n\r\n\t\t\tsums += this.curves[ i ].getLength();\r\n\t\t\tlengths.push( sums );\r\n\r\n\t\t}\r\n\r\n\t\tthis.cacheLengths = lengths;\r\n\r\n\t\treturn lengths;\r\n\r\n\t},\r\n\r\n\t/**************************************************************\r\n\t *\tCreate Geometries Helpers\r\n\t **************************************************************/\r\n\r\n\t/// Generate geometry from path points (for Line or Points objects)\r\n\r\n\tcreatePointsGeometry: function ( divisions ) {\r\n\r\n\t\tvar pts = this.getPoints( divisions );\r\n\t\treturn this.createGeometry( pts );\r\n\r\n\t},\r\n\r\n\t// Generate geometry from equidistant sampling along the path\r\n\r\n\tcreateSpacedPointsGeometry: function ( divisions ) {\r\n\r\n\t\tvar pts = this.getSpacedPoints( divisions );\r\n\t\treturn this.createGeometry( pts );\r\n\r\n\t},\r\n\r\n\tcreateGeometry: function ( points ) {\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\r\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar point = points[ i ];\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3( point.x, point.y, point.z || 0 ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/core/Font.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Font = function ( data ) {\r\n\r\n\tthis.data = data;\r\n\r\n};\r\n\r\nObject.assign( THREE.Font.prototype, {\r\n\r\n\tgenerateShapes: function ( text, size, divisions ) {\r\n\r\n\t\tfunction createPaths( text ) {\r\n\r\n\t\t\tvar chars = String( text ).split( '' );\r\n\t\t\tvar scale = size / data.resolution;\r\n\t\t\tvar offset = 0;\r\n\r\n\t\t\tvar paths = [];\r\n\r\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\r\n\r\n\t\t\t\tvar ret = createPath( chars[ i ], scale, offset );\r\n\t\t\t\toffset += ret.offset;\r\n\r\n\t\t\t\tpaths.push( ret.path );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn paths;\r\n\r\n\t\t}\r\n\r\n\t\tfunction createPath( c, scale, offset ) {\r\n\r\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\r\n\r\n\t\t\tif ( ! glyph ) return;\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar pts = [], b2 = THREE.ShapeUtils.b2, b3 = THREE.ShapeUtils.b3;\r\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\r\n\r\n\t\t\tif ( glyph.o ) {\r\n\r\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\r\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\r\n\r\n\t\t\t\t\tvar action = outline[ i ++ ];\r\n\r\n\t\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\t\t\tcase 'm': // moveTo\r\n\r\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.moveTo( x, y );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'l': // lineTo\r\n\r\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.lineTo( x, y );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\r\n\r\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\tb2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\t\t\tb2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\r\n\r\n\t\t\t\t\t\t\tcpx  = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy  = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale;\r\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offset;\r\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale;\r\n\r\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\t\t\tfor ( var i2 = 1; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\t\t\tb3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\t\t\tb3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn { offset: glyph.ha * scale, path: path };\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( size === undefined ) size = 100;\r\n\t\tif ( divisions === undefined ) divisions = 4;\r\n\r\n\t\tvar data = this.data;\r\n\r\n\t\tvar paths = createPaths( text );\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t\t}\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call( this );\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.assign( Object.create( THREE.CurvePath.prototype ), {\r\n\r\n\tconstructor: THREE.Path,\r\n\r\n\t// TODO Clean up PATH API\r\n\r\n\t// Create path using straight lines to connect all points\r\n\t// - vectors: array of Vector2\r\n\r\n\tfromPoints: function ( vectors ) {\r\n\r\n\t\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\t\tfor ( var i = 1, l = vectors.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.lineTo( vectors[ i ].x, vectors[ i ].y );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmoveTo: function ( x, y ) {\r\n\r\n\t\tthis.actions.push( { action: 'moveTo', args: [ x, y ] } );\r\n\r\n\t},\r\n\r\n\tlineTo: function ( x, y ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'lineTo', args: [ x, y ] } );\r\n\r\n\t},\r\n\r\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar curve = new THREE.QuadraticBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'quadraticCurveTo', args: [ aCPx, aCPy, aX, aY ] } );\r\n\r\n\t},\r\n\r\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar curve = new THREE.CubicBezierCurve(\r\n\t\t\tnew THREE.Vector2( x0, y0 ),\r\n\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\tnew THREE.Vector2( aX, aY )\r\n\t\t);\r\n\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'bezierCurveTo', args: [ aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ] } );\r\n\r\n\t},\r\n\r\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\r\n\r\n\t\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\t\tArray.prototype.push.apply( npts, pts );\r\n\r\n\t\tvar curve = new THREE.SplineCurve( npts );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tthis.actions.push( { action: 'splineThru', args: args } );\r\n\r\n\t},\r\n\r\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\r\n\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n\t},\r\n\r\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n\t},\r\n\r\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\t\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\t\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\r\n\t},\r\n\r\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\t\tvar args = [\r\n\t\t\taX, aY,\r\n\t\t\txRadius, yRadius,\r\n\t\t\taStartAngle, aEndAngle,\r\n\t\t\taClockwise,\r\n\t\t\taRotation || 0 // aRotation is optional.\r\n\t\t];\r\n\r\n\t\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\r\n\t\tthis.curves.push( curve );\r\n\r\n\t\tvar lastPoint = curve.getPoint( 1 );\r\n\t\targs.push( lastPoint.x );\r\n\t\targs.push( lastPoint.y );\r\n\r\n\t\tthis.actions.push( { action: 'ellipse', args: args } );\r\n\r\n\t},\r\n\r\n\tgetSpacedPoints: function ( divisions ) {\r\n\r\n\t\tif ( ! divisions ) divisions = 40;\r\n\r\n\t\tvar points = [];\r\n\r\n\t\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t\t//if ( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.autoClose ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t},\r\n\r\n\tgetPoints: function ( divisions ) {\r\n\r\n\t\tdivisions = divisions || 12;\r\n\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\t\tvar points = [];\r\n\r\n\t\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\t\tlaste, tx, ty;\r\n\r\n\t\tfor ( var i = 0, l = this.actions.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar item = this.actions[ i ];\r\n\r\n\t\t\tvar action = item.action;\r\n\t\t\tvar args = item.args;\r\n\r\n\t\t\tswitch ( action ) {\r\n\r\n\t\t\tcase 'moveTo':\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'lineTo':\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'quadraticCurveTo':\r\n\r\n\t\t\t\tcpx  = args[ 2 ];\r\n\t\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\t\ttx = b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\tty = b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'bezierCurveTo':\r\n\r\n\t\t\t\tcpx  = args[ 4 ];\r\n\t\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\t\tcpx1 = args[ 0 ];\r\n\t\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\t\tcpx2 = args[ 2 ];\r\n\t\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tfor ( var j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / divisions;\r\n\r\n\t\t\t\t\ttx = b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\tty = b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'splineThru':\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\t\tvar spts = [ last ];\r\n\r\n\t\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\t\tfor ( var j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\t\tpoints.push( spline.getPointAt( j / n ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'arc':\r\n\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(points);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'ellipse':\r\n\r\n\t\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\t\taClockwise = !! args[ 6 ],\r\n\t\t\t\t\taRotation = args[ 7 ];\r\n\r\n\r\n\t\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\t\tvar angle;\r\n\t\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\t\tvar cos, sin;\r\n\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\tcos = Math.cos( aRotation );\r\n\t\t\t\t\tsin = Math.sin( aRotation );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\t\tvar t = j / tdivisions;\r\n\r\n\t\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\t\tif ( aRotation !== 0 ) {\r\n\r\n\t\t\t\t\t\tvar x = tx, y = ty;\r\n\r\n\t\t\t\t\t\t// Rotate the point about the center of the ellipse.\r\n\t\t\t\t\t\ttx = ( x - aX ) * cos - ( y - aY ) * sin + aX;\r\n\t\t\t\t\t\tty = ( x - aX ) * sin + ( y - aY ) * cos + aY;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//console.log(points);\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t} // end switch\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\t// Normalize to remove the closing point by default.\r\n\t\tvar lastPoint = points[ points.length - 1 ];\r\n\t\tif ( Math.abs( lastPoint.x - points[ 0 ].x ) < Number.EPSILON &&\r\n\t\t\t\t Math.abs( lastPoint.y - points[ 0 ].y ) < Number.EPSILON )\r\n\t\t\tpoints.splice( points.length - 1, 1 );\r\n\r\n\t\tif ( this.autoClose ) {\r\n\r\n\t\t\tpoints.push( points[ 0 ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn points;\r\n\r\n\t},\r\n\r\n\ttoShapes: function ( isCCW, noHoles ) {\r\n\r\n\t\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\t\tfor ( var i = 0, l = inActions.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar item = inActions[ i ];\r\n\r\n\t\t\t\tvar args = item.args;\r\n\t\t\t\tvar action = item.action;\r\n\r\n\t\t\t\tif ( action === 'moveTo' ) {\r\n\r\n\t\t\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( lastPath.actions.length !== 0 ) {\r\n\r\n\t\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// console.log(subPaths);\r\n\r\n\t\t\treturn\tsubPaths;\r\n\r\n\t\t}\r\n\r\n\t\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\t\tvar shapes = [];\r\n\r\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\t\tshapes.push( tmpShape );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\r\n\t\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t\t// inPt on polygon contour => immediate success    or\r\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\t\tvar inside = false;\r\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\r\n\t\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\r\n\r\n\t\t\t\t\t// not parallel\r\n\t\t\t\t\tif ( edgeDy < 0 ) {\r\n\r\n\t\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\r\n\r\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\r\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// parallel or collinear\r\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\r\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t\t// continue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn\tinside;\r\n\r\n\t\t}\r\n\r\n\t\tvar isClockWise = THREE.ShapeUtils.isClockWise;\r\n\r\n\t\tvar subPaths = extractSubpaths( this.actions );\r\n\t\tif ( subPaths.length === 0 ) return [];\r\n\r\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\t\tif ( subPaths.length === 1 ) {\r\n\r\n\t\t\ttmpPath = subPaths[ 0 ];\r\n\t\t\ttmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\treturn shapes;\r\n\r\n\t\t}\r\n\r\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\r\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t\t// console.log(\"Holes first\", holesFirst);\r\n\r\n\t\tvar betterShapeHoles = [];\r\n\t\tvar newShapes = [];\r\n\t\tvar newShapeHoles = [];\r\n\t\tvar mainIdx = 0;\r\n\t\tvar tmpPoints;\r\n\r\n\t\tnewShapes[ mainIdx ] = undefined;\r\n\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\r\n\r\n\t\t\ttmpPath = subPaths[ i ];\r\n\t\t\ttmpPoints = tmpPath.getPoints();\r\n\t\t\tsolid = isClockWise( tmpPoints );\r\n\t\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\t\tif ( solid ) {\r\n\r\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\r\n\r\n\t\t\t\tnewShapes[ mainIdx ] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\t\tnewShapes[ mainIdx ].s.actions = tmpPath.actions;\r\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\r\n\r\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\r\n\r\n\t\t\t\t//console.log('cw', i);\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\r\n\r\n\t\t\t\t//console.log('ccw', i);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// only Holes? -> probably all Shapes with wrong orientation\r\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\t\tif ( newShapes.length > 1 ) {\r\n\r\n\t\t\tvar ambiguous = false;\r\n\t\t\tvar toChange = [];\r\n\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\r\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\r\n\r\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\r\n\t\t\t\t\tvar ho = sho[ hIdx ];\r\n\t\t\t\t\tvar hole_unassigned = true;\r\n\r\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\r\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\r\n\r\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\tambiguous = true;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( hole_unassigned ) {\r\n\r\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\r\n\t\t\tif ( toChange.length > 0 ) {\r\n\r\n\t\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar tmpHoles;\r\n\r\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\r\n\t\t\ttmpShape = newShapes[ i ].s;\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t\ttmpHoles = newShapeHoles[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.assign( Object.create( THREE.Path.prototype ), {\r\n\r\n\tconstructor: THREE.Shape,\r\n\r\n\t// Convenience method to return ExtrudeGeometry\r\n\r\n\textrude: function ( options ) {\r\n\r\n\t\treturn new THREE.ExtrudeGeometry( this, options );\r\n\r\n\t},\r\n\r\n\t// Convenience method to return ShapeGeometry\r\n\r\n\tmakeGeometry: function ( options ) {\r\n\r\n\t\treturn new THREE.ShapeGeometry( this, options );\r\n\r\n\t},\r\n\r\n\tgetPointsHoles: function ( divisions ) {\r\n\r\n\t\tvar holesPts = [];\r\n\r\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\r\n\r\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\r\n\r\n\t\t}\r\n\r\n\t\treturn holesPts;\r\n\r\n\t},\r\n\r\n\t// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\n\textractAllPoints: function ( divisions ) {\r\n\r\n\t\treturn {\r\n\r\n\t\t\tshape: this.getPoints( divisions ),\r\n\t\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\textractPoints: function ( divisions ) {\r\n\r\n\t\treturn this.extractAllPoints( divisions );\r\n\r\n\t}\r\n\r\n} );\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub( this.v1 );\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub( this.v1 );\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b2 = THREE.ShapeUtils.b2;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\tb2( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t);\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentQuadraticBezier = THREE.CurveUtils.tangentQuadraticBezier;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\ttangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\ttangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t);\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangentCubicBezier = THREE.CurveUtils.tangentCubicBezier;\r\n\r\n\treturn new THREE.Vector2( \r\n\t\ttangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\ttangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y )\r\n\t).normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\r\n\tvar point1 = points[ intPoint ];\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\treturn new THREE.Vector2(\r\n\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight )\r\n\t);\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\t\r\n\tthis.aRotation = aRotation || 0;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\tif ( this.aRotation !== 0 ) {\r\n\r\n\t\tvar cos = Math.cos( this.aRotation );\r\n\t\tvar sin = Math.sin( this.aRotation );\r\n\r\n\t\tvar tx = x, ty = y;\r\n\r\n\t\t// Rotate the point about the center of the ellipse.\r\n\t\tx = ( tx - this.aX ) * cos - ( ty - this.aY ) * sin + this.aX;\r\n\t\ty = ( tx - this.aX ) * sin + ( ty - this.aY ) * cos + this.aY;\r\n\r\n\t}\r\n\r\n\treturn new THREE.Vector2( x, y );\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b2 = THREE.ShapeUtils.b2;\t\t\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb2( t, this.v0.x, this.v1.x, this.v2.x ),\r\n\t\t\tb2( t, this.v0.y, this.v1.y, this.v2.y ),\r\n\t\t\tb2( t, this.v0.z, this.v1.z, this.v2.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar b3 = THREE.ShapeUtils.b3;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tb3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x ),\r\n\t\t\tb3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y ),\r\n\t\t\tb3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */ ) {\r\n\r\n\t\tconsole.warn( 'THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3' );\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar interpolate = THREE.CurveUtils.interpolate;\r\n\r\n\t\treturn new THREE.Vector3(\r\n\t\t\tinterpolate( point0.x, point1.x, point2.x, point3.x, weight ),\r\n\t\t\tinterpolate( point0.y, point1.y, point2.y, point3.y, weight ),\r\n\t\t\tinterpolate( point0.z, point1.z, point2.z, point3.z, weight )\r\n\t\t);\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CatmullRomCurve3.js\r\n\r\n/**\r\n * @author zz85 https://github.com/zz85\r\n *\r\n * Centripetal CatmullRom Curve - which is useful for avoiding\r\n * cusps and self-intersections in non-uniform catmull rom curves.\r\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\r\n *\r\n * curve.type accepts centripetal(default), chordal and catmullrom\r\n * curve.tension is used for catmullrom which defaults to 0.5\r\n */\r\n\r\nTHREE.CatmullRomCurve3 = ( function() {\r\n\r\n\tvar\r\n\t\ttmp = new THREE.Vector3(),\r\n\t\tpx = new CubicPoly(),\r\n\t\tpy = new CubicPoly(),\r\n\t\tpz = new CubicPoly();\r\n\r\n\t/*\r\n\tBased on an optimized c++ solution in\r\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\r\n\t - http://ideone.com/NoEbVM\r\n\r\n\tThis CubicPoly class could be used for reusing some variables and calculations,\r\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\r\n\twhich can be placed in CurveUtils.\r\n\t*/\r\n\r\n\tfunction CubicPoly() {\r\n\r\n\t}\r\n\r\n\t/*\r\n\t * Compute coefficients for a cubic polynomial\r\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\r\n\t * such that\r\n\t *   p(0) = x0, p(1) = x1\r\n\t *  and\r\n\t *   p'(0) = t0, p'(1) = t1.\r\n\t */\r\n\tCubicPoly.prototype.init = function( x0, x1, t0, t1 ) {\r\n\r\n\t\tthis.c0 = x0;\r\n\t\tthis.c1 = t0;\r\n\t\tthis.c2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\r\n\t\tthis.c3 = 2 * x0 - 2 * x1 + t0 + t1;\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.initNonuniformCatmullRom = function( x0, x1, x2, x3, dt0, dt1, dt2 ) {\r\n\r\n\t\t// compute tangents when parameterized in [t1,t2]\r\n\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\r\n\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\r\n\r\n\t\t// rescale tangents for parametrization in [0,1]\r\n\t\tt1 *= dt1;\r\n\t\tt2 *= dt1;\r\n\r\n\t\t// initCubicPoly\r\n\t\tthis.init( x1, x2, t1, t2 );\r\n\r\n\t};\r\n\r\n\t// standard Catmull-Rom spline: interpolate between x1 and x2 with previous/following points x1/x4\r\n\tCubicPoly.prototype.initCatmullRom = function( x0, x1, x2, x3, tension ) {\r\n\r\n\t\tthis.init( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\r\n\r\n\t};\r\n\r\n\tCubicPoly.prototype.calc = function( t ) {\r\n\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t2 * t;\r\n\t\treturn this.c0 + this.c1 * t + this.c2 * t2 + this.c3 * t3;\r\n\r\n\t};\r\n\r\n\t// Subclass Three.js curve\r\n\treturn THREE.Curve.create(\r\n\r\n\t\tfunction ( p /* array of Vector3 */ ) {\r\n\r\n\t\t\tthis.points = p || [];\r\n\t\t\tthis.closed = false;\r\n\r\n\t\t},\r\n\r\n\t\tfunction ( t ) {\r\n\r\n\t\t\tvar points = this.points,\r\n\t\t\t\tpoint, intPoint, weight, l;\r\n\r\n\t\t\tl = points.length;\r\n\r\n\t\t\tif ( l < 2 ) console.log( 'duh, you need at least 2 points' );\r\n\r\n\t\t\tpoint = ( l - ( this.closed ? 0 : 1 ) ) * t;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tif ( this.closed ) {\r\n\r\n\t\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\r\n\r\n\t\t\t\tintPoint = l - 2;\r\n\t\t\t\tweight = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar p0, p1, p2, p3; // 4 points\r\n\r\n\t\t\tif ( this.closed || intPoint > 0 ) {\r\n\r\n\t\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate first point\r\n\t\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\r\n\t\t\t\tp0 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tp1 = points[ intPoint % l ];\r\n\t\t\tp2 = points[ ( intPoint + 1 ) % l ];\r\n\r\n\t\t\tif ( this.closed || intPoint + 2 < l ) {\r\n\r\n\t\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// extrapolate last point\r\n\t\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\r\n\t\t\t\tp3 = tmp;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.type === undefined || this.type === 'centripetal' || this.type === 'chordal' ) {\r\n\r\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\r\n\t\t\t\tvar pow = this.type === 'chordal' ? 0.5 : 0.25;\r\n\t\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\r\n\t\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\r\n\t\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\r\n\r\n\t\t\t\t// safety check for repeated points\r\n\t\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\r\n\t\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\r\n\t\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\r\n\r\n\t\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\r\n\t\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\r\n\t\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\r\n\r\n\t\t\t} else if ( this.type === 'catmullrom' ) {\r\n\r\n\t\t\t\tvar tension = this.tension !== undefined ? this.tension : 0.5;\r\n\t\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, tension );\r\n\t\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, tension );\r\n\t\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, tension );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar v = new THREE.Vector3(\r\n\t\t\t\tpx.calc( weight ),\r\n\t\t\t\tpy.calc( weight ),\r\n\t\t\t\tpz.calc( weight )\r\n\t\t\t);\r\n\r\n\t\t\treturn v;\r\n\r\n\t\t}\r\n\r\n\t);\r\n\r\n} )();\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = function ( points ) {\r\n\r\n\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Please use THREE.CatmullRomCurve3.' );\r\n\r\n\tTHREE.CatmullRomCurve3.call( this, points );\r\n\tthis.type = 'catmullrom';\r\n\tthis.closed = true;\r\n\r\n};\r\n\r\nTHREE.ClosedSplineCurve3.prototype = Object.create( THREE.CatmullRomCurve3.prototype );\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\nTHREE.CubeGeometry = THREE.BoxGeometry;\r\n\r\n// File:src/extras/geometries/BoxBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.BoxBufferGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'BoxBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tvar scope = this;\r\n\r\n\t// segments\r\n\twidthSegments = Math.floor( widthSegments ) || 1;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\tdepthSegments = Math.floor( depthSegments ) || 1;\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = calculateVertexCount( widthSegments, heightSegments, depthSegments );\r\n\tvar indexCount = calculateIndexCount( widthSegments, heightSegments, depthSegments );\r\n\r\n\t// buffers\r\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\tvar normals = new Float32Array( vertexCount * 3 );\r\n\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n\t// offset variables\r\n\tvar vertexBufferOffset = 0;\r\n\tvar uvBufferOffset = 0;\r\n\tvar indexBufferOffset = 0;\r\n\tvar numberOfVertices = 0;\r\n\r\n\t// group variables\r\n\tvar groupStart = 0;\r\n\r\n\t// build each side of the box geometry\r\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height,   width,  depthSegments, heightSegments, 0 ); // px\r\n\tbuildPlane( 'z', 'y', 'x',   1, - 1, depth, height, - width,  depthSegments, heightSegments, 1 ); // nx\r\n\tbuildPlane( 'x', 'z', 'y',   1,   1, width, depth,    height, widthSegments, depthSegments,  2 ); // py\r\n\tbuildPlane( 'x', 'z', 'y',   1, - 1, width, depth,  - height, widthSegments, depthSegments,  3 ); // ny\r\n\tbuildPlane( 'x', 'y', 'z',   1, - 1, width, height,   depth,  widthSegments, heightSegments, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth,  widthSegments, heightSegments, 5 ); // nz\r\n\r\n\t// build geometry\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\t// helper functions\r\n\r\n\tfunction calculateVertexCount ( w, h, d ) {\r\n\r\n\t\tvar vertices = 0;\r\n\r\n\t\t// calculate the amount of vertices for each side (plane)\r\n\t\tvertices += (w + 1) * (h + 1) * 2; // xy\r\n\t\tvertices += (w + 1) * (d + 1) * 2; // xz\r\n\t\tvertices += (d + 1) * (h + 1) * 2; // zy\r\n\r\n\t\treturn vertices;\r\n\r\n\t}\r\n\r\n\tfunction calculateIndexCount ( w, h, d ) {\r\n\r\n\t\tvar index = 0;\r\n\r\n\t\t// calculate the amount of squares for each side\r\n\t\tindex += w * h * 2; // xy\r\n\t\tindex += w * d * 2; // xz\r\n\t\tindex += d * h * 2; // zy\r\n\r\n\t\treturn index * 6; // two triangles per square => six vertices per square\r\n\r\n\t}\r\n\r\n\tfunction buildPlane ( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\r\n\r\n\t\tvar segmentWidth\t= width / gridX;\r\n\t\tvar segmentHeight = height / gridY;\r\n\r\n\t\tvar widthHalf = width / 2;\r\n\t\tvar heightHalf = height / 2;\r\n\t\tvar depthHalf = depth / 2;\r\n\r\n\t\tvar gridX1 = gridX + 1;\r\n\t\tvar gridY1 = gridY + 1;\r\n\r\n\t\tvar vertexCounter = 0;\r\n\t\tvar groupCount = 0;\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tvar y = iy * segmentHeight - heightHalf;\r\n\r\n\t\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\r\n\r\n\t\t\t\t// set values to correct vector component\r\n\t\t\t\tvector[ u ] = x * udir;\r\n\t\t\t\tvector[ v ] = y * vdir;\r\n\t\t\t\tvector[ w ] = depthHalf;\r\n\r\n\t\t\t\t// now apply vector to vertex buffer\r\n\t\t\t\tvertices[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\tvertices[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\tvertices[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n\t\t\t\t// set values to correct vector component\r\n\t\t\t\tvector[ u ] = 0;\r\n\t\t\t\tvector[ v ] = 0;\r\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\t\t\t// now apply vector to normal buffer\r\n\t\t\t\tnormals[ vertexBufferOffset ] = vector.x;\r\n\t\t\t\tnormals[ vertexBufferOffset + 1 ] = vector.y;\r\n\t\t\t\tnormals[ vertexBufferOffset + 2 ] = vector.z;\r\n\r\n\t\t\t\t// uvs\r\n\t\t\t\tuvs[ uvBufferOffset ] = ix / gridX;\r\n\t\t\t\tuvs[ uvBufferOffset + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\t\t// update offsets and counters\r\n\t\t\t\tvertexBufferOffset += 3;\r\n\t\t\t\tuvBufferOffset += 2;\r\n\t\t\t\tvertexCounter += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// 1. you need three indices to draw a single face\r\n\t\t// 2. a single segment consists of two faces\r\n\t\t// 3. so we need to generate six (2*3) indices per segment\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\t// indices\r\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\r\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\t// face one\r\n\t\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n\t\t\t\t// face two\r\n\t\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n\t\t\t\t// update offsets and counters\r\n\t\t\t\tindexBufferOffset += 6;\r\n\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t\t// update total number of vertices\r\n\t\tnumberOfVertices += vertexCounter;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.BoxBufferGeometry.prototype.constructor = THREE.BoxBufferGeometry;\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\n// File:src/extras/geometries/CircleBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n */\r\n\r\nTHREE.CircleBufferGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CircleBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar vertices = segments + 2;\r\n\r\n\tvar positions = new Float32Array( vertices * 3 );\r\n\tvar normals = new Float32Array( vertices * 3 );\r\n\tvar uvs = new Float32Array( vertices * 2 );\r\n\r\n\t// center data is already zero, but need to set a few extras\r\n\tnormals[ 2 ] = 1.0;\r\n\tuvs[ 0 ] = 0.5;\r\n\tuvs[ 1 ] = 0.5;\r\n\r\n\tfor ( var s = 0, i = 3, ii = 2 ; s <= segments; s ++, i += 3, ii += 2 ) {\r\n\r\n\t\tvar segment = thetaStart + s / segments * thetaLength;\r\n\r\n\t\tpositions[ i ] = radius * Math.cos( segment );\r\n\t\tpositions[ i + 1 ] = radius * Math.sin( segment );\r\n\r\n\t\tnormals[ i + 2 ] = 1; // normal z\r\n\r\n\t\tuvs[ ii ] = ( positions[ i ] / radius + 1 ) / 2;\r\n\t\tuvs[ ii + 1 ] = ( positions[ i + 1 ] / radius + 1 ) / 2;\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tindices.push( i, i + 1, 0 );\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( new Uint16Array( indices ), 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CircleBufferGeometry.prototype.constructor = THREE.CircleBufferGeometry;\r\n\r\n// File:src/extras/geometries/CylinderBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.CylinderBufferGeometry = function( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'CylinderBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tvar scope = this;\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\theightSegments = Math.floor( heightSegments ) || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\r\n\r\n\t// used to calculate buffer length\r\n\r\n\tvar nbCap = 0;\r\n\r\n\tif ( openEnded === false ) {\r\n\r\n\t\tif ( radiusTop > 0 ) nbCap ++;\r\n\t\tif ( radiusBottom > 0 ) nbCap ++;\r\n\r\n\t}\r\n\r\n\tvar vertexCount = calculateVertexCount();\r\n\tvar indexCount = calculateIndexCount();\r\n\r\n\t// buffers\r\n\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ), 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\r\n\tvar index = 0,\r\n\t    indexOffset = 0,\r\n\t    indexArray = [],\r\n\t    halfHeight = height / 2;\r\n\r\n\t// group variables\r\n\tvar groupStart = 0;\r\n\r\n\t// generate geometry\r\n\r\n\tgenerateTorso();\r\n\r\n\tif ( openEnded === false ) {\r\n\r\n\t\tif ( radiusTop > 0 ) generateCap( true );\r\n\t\tif ( radiusBottom > 0 ) generateCap( false );\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// helper functions\r\n\r\n\tfunction calculateVertexCount() {\r\n\r\n\t\tvar count = ( radialSegments + 1 ) * ( heightSegments + 1 );\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tcount += ( ( radialSegments + 1 ) * nbCap ) + ( radialSegments * nbCap );\r\n\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tfunction calculateIndexCount() {\r\n\r\n\t\tvar count = radialSegments * heightSegments * 2 * 3;\r\n\r\n\t\tif ( openEnded === false ) {\r\n\r\n\t\t\tcount += radialSegments * nbCap * 3;\r\n\r\n\t\t}\r\n\r\n\t\treturn count;\r\n\r\n\t}\r\n\r\n\tfunction generateTorso() {\r\n\r\n\t\tvar x, y;\r\n\t\tvar normal = new THREE.Vector3();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\tvar groupCount = 0;\r\n\r\n\t\t// this will be used to calculate the normal\r\n\t\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\r\n\t\t// generate vertices, normals and uvs\r\n\r\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\t\tvar indexRow = [];\r\n\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\t// calculate the radius of the current row\r\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\t\t// vertex\r\n\t\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\tvertex.y = - v * height + halfHeight;\r\n\t\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\t\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t\t// normal\r\n\t\t\t\tnormal.copy( vertex );\r\n\r\n\t\t\t\t// handle special case if radiusTop/radiusBottom is zero\r\n\r\n\t\t\t\tif ( ( radiusTop === 0 && y === 0 ) || ( radiusBottom === 0 && y === heightSegments ) ) {\r\n\r\n\t\t\t\t\tnormal.x = Math.sin( u * thetaLength + thetaStart );\r\n\t\t\t\t\tnormal.z = Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal.setY( Math.sqrt( normal.x * normal.x + normal.z * normal.z ) * tanTheta ).normalize();\r\n\t\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n\t\t\t\t// uv\r\n\t\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\t\t// save index of vertex in respective row\r\n\t\t\t\tindexRow.push( index );\r\n\r\n\t\t\t\t// increase index\r\n\t\t\t\tindex ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// now save vertices of the row in our index array\r\n\t\t\tindexArray.push( indexRow );\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\t\t// we use the index array to access the correct indices\r\n\t\t\t\tvar i1 = indexArray[ y ][ x ];\r\n\t\t\t\tvar i2 = indexArray[ y + 1 ][ x ];\r\n\t\t\t\tvar i3 = indexArray[ y + 1 ][ x + 1 ];\r\n\t\t\t\tvar i4 = indexArray[ y ][ x + 1 ];\r\n\r\n\t\t\t\t// face one\r\n\t\t\t\tindices.setX( indexOffset, i1 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\r\n\r\n\t\t\t\t// face two\r\n\t\t\t\tindices.setX( indexOffset, i2 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i3 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i4 ); indexOffset ++;\r\n\r\n\t\t\t\t// update counters\r\n\t\t\t\tgroupCount += 6;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, 0 );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t}\r\n\r\n\tfunction generateCap( top ) {\r\n\r\n\t\tvar x, centerIndexStart, centerIndexEnd;\r\n\r\n\t\tvar uv = new THREE.Vector2();\r\n\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\tvar groupCount = 0;\r\n\r\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\r\n\t\tvar sign = ( top === true ) ? 1 : - 1;\r\n\r\n\t\t// save the index of the first center vertex\r\n\t\tcenterIndexStart = index;\r\n\r\n\t\t// first we generate the center vertex data of the cap.\r\n\t\t// because the geometry needs one set of uvs per face,\r\n\t\t// we must generate a center vertex per face/segment\r\n\r\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertices.setXYZ( index, 0, halfHeight * sign, 0 );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = 0.5;\r\n\t\t\tuv.y = 0.5;\r\n\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\t// save the index of the last center vertex\r\n\t\tcenterIndexEnd = index;\r\n\r\n\t\t// now we generate the surrounding vertices, normals and uvs\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\t\t\tvar theta = u * thetaLength + thetaStart;\r\n\r\n\t\t\tvar cosTheta = Math.cos( theta );\r\n\t\t\tvar sinTheta = Math.sin( theta );\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = radius * sinTheta;\r\n\t\t\tvertex.y = halfHeight * sign;\r\n\t\t\tvertex.z = radius * cosTheta;\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, sign, 0 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\r\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\t// generate indices\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar c = centerIndexStart + x;\r\n\t\t\tvar i = centerIndexEnd + x;\r\n\r\n\t\t\tif ( top === true ) {\r\n\r\n\t\t\t\t// face top\r\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// face bottom\r\n\t\t\t\tindices.setX( indexOffset, i + 1 ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, i ); indexOffset ++;\r\n\t\t\t\tindices.setX( indexOffset, c ); indexOffset ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// update counters\r\n\t\t\tgroupCount += 3;\r\n\r\n\t\t}\r\n\r\n\t\t// add a group to the geometry. this will ensure multi material support\r\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\r\n\r\n\t\t// calculate new start value for groups\r\n\t\tgroupStart += groupCount;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.CylinderBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.CylinderBufferGeometry.prototype.constructor = THREE.CylinderBufferGeometry;\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\n// File:src/extras/geometries/ConeBufferGeometry.js\r\n\r\n/*\r\n * @author: abelnation / http://github.com/abelnation\r\n */\r\n\r\nTHREE.ConeBufferGeometry = function (\r\n\tradius, height,\r\n\tradialSegments, heightSegments,\r\n\topenEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.CylinderBufferGeometry.call( this,\r\n\t\t0, radius, height,\r\n\t\tradialSegments, heightSegments,\r\n\t\topenEnded, thetaStart, thetaLength );\r\n\r\n\tthis.type = 'ConeBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n};\r\n\r\nTHREE.ConeBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.ConeBufferGeometry.prototype.constructor = THREE.ConeBufferGeometry;\r\n\r\n// File:src/extras/geometries/ConeGeometry.js\r\n\r\n/**\r\n * @author abelnation / http://github.com/abelnation\r\n */\r\n\r\nTHREE.ConeGeometry = function (\r\n\tradius, height,\r\n\tradialSegments, heightSegments,\r\n\topenEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.CylinderGeometry.call( this,\r\n\t\t0, radius, height,\r\n\t\tradialSegments, heightSegments,\r\n\t\topenEnded, thetaStart, thetaLength );\r\n\r\n\tthis.type = 'ConeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n};\r\n\r\nTHREE.ConeGeometry.prototype = Object.create( THREE.CylinderGeometry.prototype );\r\nTHREE.ConeGeometry.prototype.constructor = THREE.ConeGeometry;\r\n\r\n// File:src/extras/geometries/EdgesGeometry.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.EdgesGeometry = function ( geometry, thresholdAngle ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.DEG2RAD * thresholdAngle );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = [];\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords.push( vertex.x );\r\n\t\t\tcoords.push( vertex.y );\r\n\t\t\tcoords.push( vertex.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( coords ), 3 ) );\r\n\r\n};\r\n\r\nTHREE.EdgesGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.EdgesGeometry.prototype.constructor = THREE.EdgesGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames( extrudePath, steps, false );\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initialization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\r\n\t\t// check for collinear edges\r\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\r\n\r\n\t\t\t// not collinear\r\n\r\n\t\t\t// length of vectors for normalizing\r\n\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\r\n\t\t\t// vector from inPt to intersection point\r\n\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// handle special case of collinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\r\n\r\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\r\n\r\n\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\r\n\r\n\t\t\t\t\t\tdirection_eq = true;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\r\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ); // curved\r\n\t\t//bs = bevelSize * t; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\r\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 );\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, 0 ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, 1 ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, 1 ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( Array.isArray( shapes ) === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.ShapeUtils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.ShapeUtils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.ShapeUtils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\n // points - to create a closed torus, one must use a set of points\r\n //    like so: [ a, b, c, d, a ], see first is the same as last.\r\n // segments - the number of circumference segments to create\r\n // phiStart - the starting radian\r\n // phiLength - the radian (0 to 2PI) range of the lathed section\r\n //    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheBufferGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'LatheBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = Math.floor( segments ) || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || Math.PI * 2;\r\n\r\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\r\n\tphiLength = THREE.Math.clamp( phiLength, 0, Math.PI * 2 );\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = ( segments + 1 ) * points.length;\r\n\tvar indexCount = segments * points.length * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\tvar index = 0, indexOffset = 0, base;\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\tvar i, j;\r\n\r\n\t// generate vertices and uvs\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar sin = Math.sin( phi );\r\n\t\tvar cos = Math.cos( phi );\r\n\r\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = points[ j ].x * sin;\r\n\t\t\tvertex.y = points[ j ].y;\r\n\t\t\tvertex.z = points[ j ].x * cos;\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = i / segments;\r\n\t\t\tuv.y = j / ( points.length - 1 );\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\r\n\r\n\t\t\tbase = j + i * points.length;\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + points.length;\r\n\t\t\tvar c = base + points.length + 1;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// generate normals\r\n\r\n\tthis.computeVertexNormals();\r\n\r\n\t// if the geometry is closed, we need to average the normals along the seam.\r\n\t// because the corresponding vertices are identical (but still have different UVs).\r\n\r\n\tif( phiLength === Math.PI * 2 ) {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\t\tvar n1 = new THREE.Vector3();\r\n\t\tvar n2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3();\r\n\r\n\t\t// this is the buffer offset for the last line of vertices\r\n\t\tbase = segments * points.length * 3;\r\n\r\n\t\tfor( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\r\n\r\n\t\t\t// select the normal of the vertex in the first line\r\n\t\t\tn1.x = normals[ j + 0 ];\r\n\t\t\tn1.y = normals[ j + 1 ];\r\n\t\t\tn1.z = normals[ j + 2 ];\r\n\r\n\t\t\t// select the normal of the vertex in the last line\r\n\t\t\tn2.x = normals[ base + j + 0 ];\r\n\t\t\tn2.y = normals[ base + j + 1 ];\r\n\t\t\tn2.z = normals[ base + j + 2 ];\r\n\r\n\t\t\t// average normals\r\n\t\t\tn.addVectors( n1, n2 ).normalize();\r\n\r\n\t\t\t// assign the new values to both normals\r\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\r\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\r\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\r\n\r\n\t\t} // next row\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LatheBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.LatheBufferGeometry.prototype.constructor = THREE.LatheBufferGeometry;\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points\r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2PI) range of the lathed section\r\n//    2PI is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.LatheBufferGeometry( points, segments, phiStart, phiLength ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = Math.floor( widthSegments ) || 1;\r\n\tvar gridY = Math.floor( heightSegments ) || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2 ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.RingBufferGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'RingBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 20;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\r\n\r\n\t// these are used to calculate buffer length\r\n\tvar vertexCount = ( thetaSegments + 1 ) * ( phiSegments + 1 );\r\n\tvar indexCount = thetaSegments * phiSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// some helper variables\r\n\tvar index = 0, indexOffset = 0, segment;\r\n\tvar radius = innerRadius;\r\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\tvar j, i;\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\t// values are generate from the inside of the ring to the outside\r\n\r\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\r\n\r\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormals.setXYZ( index, 0, 0, 1 );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\r\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex++;\r\n\r\n\t\t}\r\n\r\n\t\t// increase the radius for next row of vertices\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 0; j < phiSegments; j ++ ) {\r\n\r\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\r\n\r\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\r\n\r\n\t\t\tsegment = i + thetaSegmentLevel;\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = segment;\r\n\t\t\tvar b = segment + thetaSegments + 1;\r\n\t\t\tvar c = segment + thetaSegments + 2;\r\n\t\t\tvar d = segment + 1;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n};\r\n\r\nTHREE.RingBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.RingBufferGeometry.prototype.constructor = THREE.RingBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\n// File:src/extras/geometries/SphereBufferGeometry.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * based on THREE.SphereGeometry\r\n */\r\n\r\nTHREE.SphereBufferGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'SphereBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar thetaEnd = thetaStart + thetaLength;\r\n\r\n\tvar vertexCount = ( ( widthSegments + 1 ) * ( heightSegments + 1 ) );\r\n\r\n\tvar positions = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\tvar index = 0, vertices = [], normal = new THREE.Vector3();\r\n\r\n\tfor ( var y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\r\n\t\tfor ( var x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\r\n\t\t\tvar px = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvar py = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvar pz = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tnormal.set( px, py, pz ).normalize();\r\n\r\n\t\t\tpositions.setXYZ( index, px, py, pz );\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\t\t\tuvs.setXY( index, u, 1 - v );\r\n\r\n\t\t\tverticesRow.push( index );\r\n\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\r\n\t}\r\n\r\n\tvar indices = [];\r\n\r\n\tfor ( var y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( var x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tif ( y !== 0 || thetaStart > 0 ) indices.push( v1, v2, v4 );\r\n\t\t\tif ( y !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( v2, v3, v4 );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setIndex( new ( positions.count > 65535 ? THREE.Uint32Attribute : THREE.Uint16Attribute )( indices, 1 ) );\r\n\tthis.addAttribute( 'position', positions );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.SphereBufferGeometry.prototype.constructor = THREE.SphereBufferGeometry;\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  font: <THREE.Font>, // font\r\n *\r\n *  size: <float>, // size of the text\r\n *  height: <float>, // thickness to extrude text\r\n *  curveSegments: <int>, // number of points on the curves\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into text bevel goes\r\n *  bevelSize: <float> // how far from text outline is bevel\r\n * }\r\n */\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar font = parameters.font;\r\n\r\n\tif ( font instanceof THREE.Font === false ) {\r\n\r\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\r\n\t\treturn new THREE.Geometry();\r\n\r\n\t}\r\n\r\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, shapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n */\r\n\r\nTHREE.TorusBufferGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'TorusBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\t// used to calculate buffer length\r\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount );\r\n\tvar vertices = new Float32Array( vertexCount * 3 );\r\n\tvar normals = new Float32Array( vertexCount * 3 );\r\n\tvar uvs = new Float32Array( vertexCount * 2 );\r\n\r\n\t// offset variables\r\n\tvar vertexBufferOffset = 0;\r\n\tvar uvBufferOffset = 0;\r\n\tvar indexBufferOffset = 0;\r\n\r\n\t// helper variables\r\n\tvar center = new THREE.Vector3();\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar normal = new THREE.Vector3();\r\n\r\n\tvar j, i;\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tvertices[ vertexBufferOffset ] = vertex.x;\r\n\t\t\tvertices[ vertexBufferOffset + 1 ] = vertex.y;\r\n\t\t\tvertices[ vertexBufferOffset + 2 ] = vertex.z;\r\n\r\n\t\t\t// this vector is used to calculate the normal\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\t// normal\r\n\t\t\tnormal.subVectors( vertex, center ).normalize();\r\n\r\n\t\t\tnormals[ vertexBufferOffset ] = normal.x;\r\n\t\t\tnormals[ vertexBufferOffset + 1 ] = normal.y;\r\n\t\t\tnormals[ vertexBufferOffset + 2 ] = normal.z;\r\n\r\n\t\t\t// uv\r\n\t\t\tuvs[ uvBufferOffset ] = i / tubularSegments;\r\n\t\t\tuvs[ uvBufferOffset + 1 ] = j / radialSegments;\r\n\r\n\t\t\t// update offsets\r\n\t\t\tvertexBufferOffset += 3;\r\n\t\t\tuvBufferOffset += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices[ indexBufferOffset ] = a;\r\n\t\t\tindices[ indexBufferOffset + 1 ] = b;\r\n\t\t\tindices[ indexBufferOffset + 2 ] = d;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices[ indexBufferOffset + 3 ] = b;\r\n\t\t\tindices[ indexBufferOffset + 4 ] = c;\r\n\t\t\tindices[ indexBufferOffset + 5 ] = d;\r\n\r\n\t\t\t// update offset\r\n\t\t\tindexBufferOffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\tthis.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.TorusBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.TorusBufferGeometry.prototype.constructor = THREE.TorusBufferGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotBufferGeometry.js\r\n\r\n/**\r\n * @author Mugen87 / https://github.com/Mugen87\r\n *\r\n * see: http://www.blackpawn.com/texts/pqtorus/\r\n */\r\nTHREE.TorusKnotBufferGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tradialSegments: radialSegments,\r\n\t\tp: p,\r\n\t\tq: q\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\r\n\tradialSegments = Math.floor( radialSegments ) || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\r\n\t// used to calculate buffer length\r\n\tvar vertexCount = ( ( radialSegments + 1 ) * ( tubularSegments + 1 ) );\r\n\tvar indexCount = radialSegments * tubularSegments * 2 * 3;\r\n\r\n\t// buffers\r\n\tvar indices = new THREE.BufferAttribute( new ( indexCount > 65535 ? Uint32Array : Uint16Array )( indexCount ) , 1 );\r\n\tvar vertices = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar normals = new THREE.BufferAttribute( new Float32Array( vertexCount * 3 ), 3 );\r\n\tvar uvs = new THREE.BufferAttribute( new Float32Array( vertexCount * 2 ), 2 );\r\n\r\n\t// helper variables\r\n\tvar i, j, index = 0, indexOffset = 0;\r\n\r\n\tvar vertex = new THREE.Vector3();\r\n\tvar normal = new THREE.Vector3();\r\n\tvar uv = new THREE.Vector2();\r\n\r\n\tvar P1 = new THREE.Vector3();\r\n\tvar P2 = new THREE.Vector3();\r\n\r\n\tvar B = new THREE.Vector3();\r\n\tvar T = new THREE.Vector3();\r\n\tvar N = new THREE.Vector3();\r\n\r\n\t// generate vertices, normals and uvs\r\n\r\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\r\n\r\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\r\n\r\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\r\n\r\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\r\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\r\n\r\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\r\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\r\n\r\n\t\t// calculate orthonormal basis\r\n\r\n\t\tT.subVectors( P2, P1 );\r\n\t\tN.addVectors( P2, P1 );\r\n\t\tB.crossVectors( T, N );\r\n\t\tN.crossVectors( B, T );\r\n\r\n\t\t// normalize B, N. T can be ignored, we don't use it\r\n\r\n\t\tB.normalize();\r\n\t\tN.normalize();\r\n\r\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\r\n\r\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\r\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\r\n\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\t\t\tvar cx = - tube * Math.cos( v );\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\t// now calculate the final vertex position.\r\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\r\n\r\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\r\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\r\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\r\n\r\n\t\t\t// vertex\r\n\t\t\tvertices.setXYZ( index, vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\r\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\r\n\t\t\tnormals.setXYZ( index, normal.x, normal.y, normal.z );\r\n\r\n\t\t\t// uv\r\n\t\t\tuv.x = i / tubularSegments;\r\n\t\t\tuv.y = j / radialSegments;\r\n\t\t\tuvs.setXY( index, uv.x, uv.y );\r\n\r\n\t\t\t// increase index\r\n\t\t\tindex ++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// generate indices\r\n\r\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\r\n\r\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\r\n\r\n\t\t\t// indices\r\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\r\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\r\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\r\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\r\n\r\n\t\t\t// face one\r\n\t\t\tindices.setX( indexOffset, a ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t\t// face two\r\n\t\t\tindices.setX( indexOffset, b ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, c ); indexOffset++;\r\n\t\t\tindices.setX( indexOffset, d ); indexOffset++;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// build geometry\r\n\r\n\tthis.setIndex( indices );\r\n\tthis.addAttribute( 'position', vertices );\r\n\tthis.addAttribute( 'normal', normals );\r\n\tthis.addAttribute( 'uv', uvs );\r\n\r\n\t// this function calculates the current position on the torus curve\r\n\r\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = q / p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.TorusKnotBufferGeometry.prototype.constructor = THREE.TorusKnotBufferGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tradialSegments: radialSegments,\r\n\t\tp: p,\r\n\t\tq: q\r\n\t};\r\n\r\n\tif( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\r\n\r\n\tthis.fromBufferGeometry( new THREE.TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed,\r\n\t\ttaper: taper\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// construct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? ( i + 1 ) % segments : i + 1;\r\n\t\t\tjp = ( j + 1 ) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\r\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > Number.EPSILON ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, j );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, x1, x2 );\r\n\t\tvar min = Math.min( x0, x1, x2 );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) {\r\n\r\n\t\t\t// 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3, materialIndex ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ], undefined, materialIndex );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow( 2, detail );\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\tvar materialIndex = face.materialIndex;\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++ ) {\r\n\r\n\t\t\t\tif ( j === 0 && i === cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 === 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tmaterialIndex\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t- 1, - 1, - 1,    - 1, - 1,  1,\r\n\t\t- 1,  1, - 1,    - 1,  1,  1,\r\n\t\t 1, - 1, - 1,     1, - 1,  1,\r\n\t\t 1,  1, - 1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, - r, - t,     0, - r,  t,\r\n\t\t 0,  r, - t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t- r, - t,  0,    - r,  t,  0,\r\n\t\t r, - t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t- t,  0, - r,     t,  0, - r,\r\n\t\t- t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'DodecahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0, - 1, 0,    0, 0, 1,    0, 0, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.PolyhedronGeometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = ( i + 1 ) * sliceCount + j + 1;\r\n\t\t\td = ( i + 1 ) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/geometries/WireframeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeGeometry = function ( geometry ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\r\n\tfunction sortFunction( a, b ) {\r\n\r\n\t\treturn a - b;\r\n\r\n\t}\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j ] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( geometry.index !== null ) {\r\n\r\n\t\t\t// Indexed BufferGeometry\r\n\r\n\t\t\tvar indices = geometry.index.array;\r\n\t\t\tvar vertices = geometry.attributes.position;\r\n\t\t\tvar groups = geometry.groups;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( groups.length === 0 ) {\r\n\r\n\t\t\t\tgeometry.addGroup( 0, indices.length );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = groups.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar group = groups[ o ];\r\n\r\n\t\t\t\tvar start = group.start;\r\n\t\t\t\tvar count = group.count;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = edges[ 2 * i + j ];\r\n\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices.getX( index2 );\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices.getY( index2 );\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices.getZ( index2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.WireframeGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.WireframeGeometry.prototype.constructor = THREE.WireframeGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://clara.io\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.BufferGeometry();\r\n\tlineGeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.translate( 0, - 0.5, 0 );\r\n\r\n\treturn function ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function setDirection( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tthis.line.material.color.copy( color );\r\n\tthis.cone.material.color.copy( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\r\n\tvar positions = new Float32Array( 8 * 3 );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.setIndex( new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ) );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = ( function () {\r\n\r\n\tvar box = new THREE.Box3();\r\n\r\n\treturn function ( object ) {\r\n\r\n\t\tif ( object instanceof THREE.Box3 ) {\r\n\r\n\t\t\tbox.copy( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tbox.setFromObject( object );\r\n\r\n\t\t}\r\n\r\n\t\tif ( box.isEmpty() ) return;\r\n\r\n\t\tvar min = box.min;\r\n\t\tvar max = box.max;\r\n\r\n\t\t/*\r\n\t\t  5____4\r\n\t\t1/___0/|\r\n\t\t| 6__|_7\r\n\t\t2/___3/\r\n\r\n\t\t0: max.x, max.y, max.z\r\n\t\t1: min.x, max.y, max.z\r\n\t\t2: min.x, min.y, max.z\r\n\t\t3: max.x, min.y, max.z\r\n\t\t4: max.x, max.y, min.z\r\n\t\t5: min.x, max.y, min.z\r\n\t\t6: min.x, min.y, min.z\r\n\t\t7: max.x, min.y, min.z\r\n\t\t*/\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\t\tvar array = position.array;\r\n\r\n\t\tarray[  0 ] = max.x; array[  1 ] = max.y; array[  2 ] = max.z;\r\n\t\tarray[  3 ] = min.x; array[  4 ] = max.y; array[  5 ] = max.z;\r\n\t\tarray[  6 ] = min.x; array[  7 ] = min.y; array[  8 ] = max.z;\r\n\t\tarray[  9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\r\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\r\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\r\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\r\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\tthis.geometry.computeBoundingSphere();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.camera = camera;\r\n\tthis.camera.updateProjectionMatrix();\r\n\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tfunction setPoint( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tif ( size === undefined ) size = 1;\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [\r\n\t\t- size,   size, 0,\r\n\t\t  size,   size, 0,\r\n\t\t  size, - size, 0,\r\n\t\t- size, - size, 0,\r\n\t\t- size,   size, 0\r\n\t], 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\r\n\tthis.add( new THREE.Line( geometry, material ) );\r\n\r\n\tgeometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\r\n\r\n\tthis.add( new THREE.Line( geometry, material ));\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tvar lightPlane = this.children[ 0 ];\r\n\tvar targetLine = this.children[ 1 ];\r\n\r\n\tlightPlane.geometry.dispose();\r\n\tlightPlane.material.dispose();\r\n\ttargetLine.geometry.dispose();\r\n\ttargetLine.material.dispose();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tvar lightPlane = this.children[ 0 ];\r\n\t\tvar targetLine = this.children[ 1 ];\r\n\r\n\t\tlightPlane.lookAt( v3 );\r\n\t\tlightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\ttargetLine.lookAt( v3 );\r\n\t\ttargetLine.scale.z = v3.length();\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimum angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.EdgesGeometry( object.geometry, thresholdAngle ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\t// FaceNormalsHelper only supports THREE.Geometry\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\tvar faces = objGeometry.faces;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar normal = face.normal;\r\n\r\n\t\t\tv1.copy( vertices[ face.a ] )\r\n\t\t\t\t.add( vertices[ face.b ] )\r\n\t\t\t\t.add( vertices[ face.c ] )\r\n\t\t\t\t.divideScalar( 3 )\r\n\t\t\t\t.applyMatrix4( matrixWorld );\r\n\r\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\tidx = idx + 1;\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step, color1, color2 ) {\r\n\r\n\tcolor1 = new THREE.Color( color1 !== undefined ? color1 : 0x444444 );\r\n\tcolor2 = new THREE.Color( color2 !== undefined ? color2 : 0x888888 );\r\n\r\n\tvar vertices = [];\r\n\tvar colors = [];\r\n\r\n\tfor ( var i = - size, j = 0; i <= size; i += step ) {\r\n\r\n\t\tvertices.push( - size, 0, i, size, 0, i );\r\n\t\tvertices.push( i, 0, - size, i, 0, size );\r\n\r\n\t\tvar color = i === 0 ? color1 : color2;\r\n\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\t\tcolor.toArray( colors, j ); j += 3;\r\n\r\n\t}\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.Float32Attribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function () {\r\n\r\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.rotateX( - Math.PI / 2 );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereBufferGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.dynamic = true;\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, material );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = [\r\n\t\t0, 0, 0,   0,   0,   1,\r\n\t\t0, 0, 0,   1,   0,   1,\r\n\t\t0, 0, 0, - 1,   0,   1,\r\n\t\t0, 0, 0,   0,   1,   1,\r\n\t\t0, 0, 0,   0, - 1,   1\r\n\t];\r\n\r\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\r\n\r\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\r\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\r\n\r\n\t\tpositions.push(\r\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\r\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\r\n\t\t);\r\n\r\n\t}\r\n\r\n\tgeometry.addAttribute( 'position', new THREE.Float32Attribute( positions, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\r\n\tthis.cone = new THREE.LineSegments( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\t//\r\n\r\n\tvar nNormals = 0;\r\n\r\n\tvar objGeometry = this.object.geometry;\r\n\r\n\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\tnNormals = objGeometry.faces.length * 3;\r\n\r\n\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tnNormals = objGeometry.attributes.normal.count;\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar positions = new THREE.Float32Attribute( nNormals * 2 * 3, 3 );\r\n\r\n\tgeometry.addAttribute( 'position', positions );\r\n\r\n\tTHREE.LineSegments.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ) );\r\n\r\n\t//\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar normalMatrix = new THREE.Matrix3();\r\n\r\n\treturn function update() {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar matrixWorld = this.object.matrixWorld;\r\n\r\n\t\tvar position = this.geometry.attributes.position;\r\n\r\n\t\t//\r\n\r\n\t\tvar objGeometry = this.object.geometry;\r\n\r\n\t\tif ( objGeometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = objGeometry.vertices;\r\n\r\n\t\t\tvar faces = objGeometry.faces;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\r\n\r\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( objGeometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar objPos = objGeometry.attributes.position;\r\n\r\n\t\t\tvar objNorm = objGeometry.attributes.normal;\r\n\r\n\t\t\tvar idx = 0;\r\n\r\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\r\n\r\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\r\n\r\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\r\n\r\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\r\n\r\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\r\n\r\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\r\n\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tposition.needsUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n}() );\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tTHREE.LineSegments.call( this, new THREE.WireframeGeometry( object.geometry ), new THREE.LineBasicMaterial( { color: color } ) );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.LineSegments.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function ( material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.material = material;\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstart: start,\r\n\t\tend: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/i;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tconsole.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.start + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tif ( animation.currentFrame !== animation.lastFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = weight;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n"]}